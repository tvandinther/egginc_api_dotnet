// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: egginc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from egginc.proto</summary>
public static partial class EggincReflection {

  #region Descriptor
  /// <summary>File descriptor for egginc.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static EggincReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxlZ2dpbmMucHJvdG8i4SkKBkJhY2t1cBIPCgd1c2VyX2lkGAEgASgJEhEK",
          "CXVzZXJfbmFtZRgCIAEoCRITCgthcHByb3hfdGltZRgDIAEoARIiCghzZXR0",
          "aW5ncxgEIAEoCzIQLkJhY2t1cC5TZXR0aW5ncxIiCgh0dXRvcmlhbBgFIAEo",
          "CzIQLkJhY2t1cC5UdXRvcmlhbBIcCgVzdGF0cxgGIAEoCzINLkJhY2t1cC5T",
          "dGF0cxIaCgRnYW1lGAcgASgLMgwuQmFja3VwLkdhbWUSIgoIbWlzc2lvbnMY",
          "CSABKAsyEC5CYWNrdXAuTWlzc2lvbnMSGgoEbWlzYxgKIAEoCzIMLkJhY2t1",
          "cC5NaXNjEhsKBWZhcm1zGAwgAygLMgwuQmFja3VwLkZhcm0SHwoJY29udHJh",
          "Y3RzGA0gASgLMgwuTXlDb250cmFjdHMSMQoQYXJ0aWZhY3RzX3N0YXR1cxgO",
          "IAEoCzIXLkJhY2t1cC5BcnRpZmFjdHNTdGF0dXMSLgoSYXJ0aWZhY3RzX2Rh",
          "dGFiYXNlGA8gASgLMhIuQXJ0aWZhY3RzRGF0YWJhc2USGAoQZ2FtZV9zZXJ2",
          "aWNlc19pZBgQIAEoCRIRCglkZXZpY2VfaWQYESABKAkSEgoKZWlfdXNlcl9p",
          "ZBgSIAEoCRIaChJmb3JjZV9vZmZlcl9iYWNrdXAYFCABKAgSFgoOY2xpZW50",
          "X3ZlcnNpb24YFSABKA0SFAoMZm9yY2VfYmFja3VwGBYgASgIEhAKCGNoZWNr",
          "c3VtGGQgASgEEhEKCXNpZ25hdHVyZRhlIAEoCRqrBQoIU2V0dGluZ3MSCwoD",
          "c2Z4GAEgASgIEg0KBW11c2ljGAIgASgIEhgKEGxvd19iYXR0ZXJ5X21vZGUY",
          "AyABKAgSHAoUbG93X3BlcmZvcm1hbmNlX21vZGUYBCABKAgSHQoVbm90aWZp",
          "Y2F0aW9uc19xdWVyaWVkGAUgASgIEh0KFW5vdGlmaWNhdGlvbnNfZW5hYmxl",
          "ZBgGIAEoCBIVCg1jb3BwYV9xdWVyaWVkGAcgASgIEhgKEGNvcHBhX3Jlc3Ry",
          "aWN0ZWQYCCABKAgSHwoXZm9yY2VfdG91Y2hfY2hpY2tlbl9idG4YCSABKAgS",
          "FwoPbG93X3BlcmZvcm1hbmNlGAogASgIEhkKEW5vdGlmeV9kYWlseV9naWZ0",
          "GAsgASgIEhwKFGdkcHJfY29uc2VudF9xdWVyaWVkGAwgASgIEhoKEmdkcHJf",
          "Y29uc2VudF9naXZlbhgNIAEoCBIYChB1c2VyX2Fkc19lbmFibGVkGA4gASgI",
          "EhoKEnVzZXJfY2xvdWRfZW5hYmxlZBgPIAEoCBIbChNnZHByX2FnZV9yZXN0",
          "cmljdGVkGBAgASgIEhwKFGxhc3RfZGF5X2FnZV9xdWVyaWVkGBEgASgNEhMK",
          "C2FnZV9xdWVyaWVkGBIgASgIEhYKDmFnZV9yZXN0cmljdGVkGBMgASgIEicK",
          "H2RhdGFfY29sbGVjdGlvbl9jb25zZW50X3F1ZXJpZWQYFCABKAgSJQodZGF0",
          "YV9jb2xsZWN0aW9uX2NvbnNlbnRfZ2l2ZW4YFSABKAgSHgoWdXNlcl9hbmFs",
          "eXRpY3NfZW5hYmxlZBgWIAEoCBIlCh11c2VyX3BlcnNvbmFsaXplZF9hZHNf",
          "ZW5hYmxlZBgXIAEoCBIYChBsYXN0X2JhY2t1cF90aW1lGBggASgBGqECCghU",
          "dXRvcmlhbBITCgtpbnRyb19zaG93bhgBIAEoCBIcChRjbGlja190dXRvcmlh",
          "bF9zaG93bhgCIAEoCBIVCg1idXlfaGFiX3Nob3duGAMgASgIEhoKEmhpcmVf",
          "dmVoaWNsZV9zaG93bhgEIAEoCBITCgtxX251bV9zaG93bhgFIAEoCBITCgtz",
          "X251bV9zaG93bhgGIAEoCBIbChNjb250cmFjdHNfdGFiX3Nob3duGAcgASgI",
          "EhsKE2NvbnRyYWN0X2luZm9fc2hvd24YCCABKAgSFwoPam9pbl9jb29wX3No",
          "b3duGAkgASgIEhkKEXN3aXRjaF9mYXJtX3Nob3duGAogASgIEhcKD3R1dG9y",
          "aWFsc19zaG93bhgLIAMoCBrHAwoFU3RhdHMSEwoLcmVmaWxsX3VzZXMYAiAB",
          "KAQSGgoSdmlkZW9fZG91Ymxlcl91c2VzGAMgASgEEhMKC3dhcnBfMV91c2Vz",
          "GAQgASgEEhMKC3dhcnBfOF91c2VzGAUgASgEEhcKD2Ryb25lX3Rha2Vkb3du",
          "cxgGIAEoBBIfChd1bmxpbWl0ZWRfY2hpY2tlbnNfdXNlcxgHIAEoBBISCgpl",
          "Z2dfdG90YWxzGAggAygBEhYKDnByZXN0aWdlX2NvdW50GAkgASgEEh0KFWRy",
          "b25lX3Rha2Vkb3duc19lbGl0ZRgKIAEoBBIZChFwaWdneV9icmVha19jb3Vu",
          "dBgLIAEoBBIbChNpYXBfcGFja3NfcHVyY2hhc2VkGAwgASgEEhMKC2Jvb3N0",
          "c191c2VkGA0gASgEEhIKCnBpZ2d5X2Z1bGwYDiABKAgSGAoQcGlnZ3lfZm91",
          "bmRfZnVsbBgPIAEoCBIiChp0aW1lX3BpZ2d5X2ZpbGxlZF9yZWFsdGltZRgQ",
          "IAEoARIgChh0aW1lX3BpZ2d5X2Z1bGxfZ2FtZXRpbWUYESABKAESHQoVbG9z",
          "dF9waWdneV9pbmNyZW1lbnRzGBIgASgEGikKDFJlc2VhcmNoSXRlbRIKCgJp",
          "ZBgBIAEoCRINCgVsZXZlbBgCIAEoDRooCgxOZXdzSGVhZGxpbmUSCgoCaWQY",
          "ASABKAkSDAoEcmVhZBgCIAEoCBoxCg9BY2hpZXZlbWVudEluZm8SDAoEbmFt",
          "ZRgBIAEoCRIQCghhY2hpZXZlZBgCIAEoCBpKCgtBY3RpdmVCb29zdBIKCgJp",
          "ZBgBIAEoCRIWCg50aW1lX3JlbWFpbmluZxgCIAEoARIXCg9yZWZlcmVuY2Vf",
          "dmFsdWUYAyABKAEaJwoKT3duZWRCb29zdBIKCgJpZBgBIAEoCRINCgVjb3Vu",
          "dBgCIAEoDRqvCAoER2FtZRIdCg9tYXhfZWdnX3JlYWNoZWQYASABKA4yBC5F",
          "Z2cSGgoSZ29sZGVuX2VnZ3NfZWFybmVkGAIgASgEEhkKEWdvbGRlbl9lZ2dz",
          "X3NwZW50GAMgASgEEhwKFHByZXN0aWdlX2Nhc2hfZWFybmVkGAUgASgBEhwK",
          "FGxpZmV0aW1lX2Nhc2hfZWFybmVkGAYgASgBEhIKCnBpZ2d5X2JhbmsYByAB",
          "KAQSFAoMcGVybWl0X2xldmVsGAggASgNEisKDWVwaWNfcmVzZWFyY2gYCSAD",
          "KAsyFC5CYWNrdXAuUmVzZWFyY2hJdGVtEhwKFG5leHRfZGFpbHlfZ2lmdF90",
          "aW1lGAogASgBEiIKBG5ld3MYCyADKAsyFC5CYWNrdXAuTmV3c0hlYWRsaW5l",
          "EhYKDmxhc3RfbmV3c190aW1lGAwgASgBEhoKEmN1cnJlbnRfbXVsdGlwbGll",
          "chgNIAEoARIlCh1jdXJyZW50X211bHRpcGxpZXJfZXhwaXJhdGlvbhgOIAEo",
          "ARItCgxhY2hpZXZlbWVudHMYDyADKAsyFy5CYWNrdXAuQWNoaWV2ZW1lbnRJ",
          "bmZvEh0KFXVuY2xhaW1lZF9nb2xkZW5fZWdncxgQIAEoBBIdChVtYXhfZmFy",
          "bV9zaXplX3JlYWNoZWQYEiADKAQSJgoQZWdnX21lZGFsX2xldmVscxgTIAMo",
          "DjIMLlRyb3BoeUxldmVsEiUKHWxhc3RfZGFpbHlfZ2lmdF9jb2xsZWN0ZWRf",
          "ZGF5GBQgASgNEhQKDGN1cnJlbnRfZmFybRgWIAEoDRIVCg1wcm9waGVjeV9l",
          "Z2dzGBcgASgEEh8KF3VuY2xhaW1lZF9wcm9waGVjeV9lZ2dzGBggASgNEiIK",
          "GmxvbmdfaWRsZV9ub3RpZmljYXRpb25fc2V0GBkgASgIEigKIGxvbmdfaWRs",
          "ZV9ub3RpZmljYXRpb25fdGhyZXNob2xkGBogASgBEhgKEGxvbmdfaWRsZV9y",
          "ZXdhcmQYGyABKAESGAoQZGFpbHlfZ2lmdF9pbmRleBgcIAEoDRIZChFoeXBl",
          "cmxvb3Bfc3RhdGlvbhgdIAEoCBIiCgZib29zdHMYHiADKAsyEi5CYWNrdXAu",
          "T3duZWRCb29zdBIeChZwaWdneV9mdWxsX2FsZXJ0X3Nob3duGB8gASgIEiIK",
          "GnRvdGFsX3RpbWVfY2hlYXRzX2RldGVjdGVkGCAgASgNEiAKGHByZXN0aWdl",
          "X3NvdWxfYm9vc3RfY2FzaBghIAEoARIRCglzb3VsX2VnZ3MYIiABKAESGwoT",
          "dW5jbGFpbWVkX3NvdWxfZWdncxgjIAEoARIdChVmb3JjZV9lbGl0ZV9jb250",
          "cmFjdHMYJCABKAgSIQoZbmV3X3BsYXllcl9ldmVudF9lbmRfdGltZRglIAEo",
          "ARqcAwoPQXJ0aWZhY3RzU3RhdHVzEhAKCGluZnVzaW5nGAEgASgIEjIKEml0",
          "ZW1fYmVpbmdfaW5mdXNlZBgCIAEoCzIWLkFydGlmYWN0SW52ZW50b3J5SXRl",
          "bRIfChFlZ2dfdHlwZV9pbmZ1c2luZxgDIAEoDjIELkVnZxIeChZpbmZ1c2lu",
          "Z19lZ2dzX3JlcXVpcmVkGAQgASgBEhQKDGVnZ3NfaW5mdXNlZBgFIAEoARIh",
          "ChlmbG93X3BlcmNlbnRhZ2VfYXJ0aWZhY3RzGAYgASgBEhcKD2Z1ZWxpbmdf",
          "ZW5hYmxlZBgHIAEoCBIYChBpbmZ1c2luZ19lbmFibGVkGAggASgIEiwKEGxh",
          "c3RfZnVlbGVkX3NoaXAYCSABKA4yEi5NaXNzaW9uLlNwYWNlc2hpcBIXCg9p",
          "bnZlbnRvcnlfc2NvcmUYCiABKAESDwoHZW5hYmxlZBgLIAEoCBITCgtpbnRy",
          "b19zaG93bhgMIAEoCBIpChZhcnRpZmFjdF9iZWluZ19pbmZ1c2VkGA0gASgL",
          "MgkuQXJ0aWZhY3Qa0AYKBEZhcm0SFgoIZWdnX3R5cGUYASABKA4yBC5FZ2cS",
          "EwoLY2FzaF9lYXJuZWQYAiABKAESEgoKY2FzaF9zcGVudBgDIAEoARIWCg51",
          "bmNsYWltZWRfY2FzaBgEIAEoARIWCg5sYXN0X3N0ZXBfdGltZRgFIAEoARIU",
          "CgxudW1fY2hpY2tlbnMYBiABKAQSHgoWbnVtX2NoaWNrZW5zX3Vuc2V0dGxl",
          "ZBgHIAEoBBIcChRudW1fY2hpY2tlbnNfcnVubmluZxgIIAEoBBIRCgllZ2dz",
          "X2xhaWQYCSABKAESFQoNZWdnc19wYWlkX2ZvchgKIAEoARITCgtzaWxvc19v",
          "d25lZBgLIAEoDRIXCgRoYWJzGAwgAygOMgkuSGFiTGV2ZWwSFwoPaGFiX3Bv",
          "cHVsYXRpb25zGA0gAygEEh8KF2hhYl9wb3B1bGF0aW9uX2luYm91bmRzGA4g",
          "AygEEiEKGWhhYl9pbmN1YmF0b3JfcG9wdWxhdGlvbnMYDyADKAESGwoTaGF0",
          "Y2hlcnlfcG9wdWxhdGlvbhgQIAEoARIeCgh2ZWhpY2xlcxgRIAMoDjIMLlZl",
          "aGljbGVUeXBlEi0KD2NvbW1vbl9yZXNlYXJjaBgSIAMoCzIULkJhY2t1cC5S",
          "ZXNlYXJjaEl0ZW0SHAoJZmFybV90eXBlGBMgASgOMgkuRmFybVR5cGUSEwoL",
          "Y29udHJhY3RfaWQYFCABKAkSFgoOaHlwZXJsb29wX2NhcnMYFSADKA0SKgoN",
          "YWN0aXZlX2Jvb3N0cxgWIAMoCzITLkJhY2t1cC5BY3RpdmVCb29zdBIcChR0",
          "aW1lX2NoZWF0c19kZXRlY3RlZBgXIAEoDRIXCg90aW1lX2NoZWF0X2RlYnQY",
          "GCABKAESHQoVYm9vc3RfdG9rZW5zX3JlY2VpdmVkGBkgASgNEhoKEmJvb3N0",
          "X3Rva2Vuc19zcGVudBgaIAEoDRIeChZ1bmNsYWltZWRfYm9vc3RfdG9rZW5z",
          "GBsgASgNEhoKEmJvb3N0X3Rva2Vuc19naXZlbhgcIAEoDRInCh9nYW1ldGlt",
          "ZV91bnRpbF9uZXh0X2Jvb3N0X3Rva2VuGB0gASgBEhQKDGVnZ3Nfc2hpcHBl",
          "ZBgeIAEoARpBCgdNaXNzaW9uEgoKAmlkGAEgASgJEhEKCWNvbXBsZXRlZBgC",
          "IAEoCBIXCg9yZWZlcmVuY2VfdmFsdWUYAyABKAEafgoITWlzc2lvbnMSHAoU",
          "Y3VycmVudF9taXNzaW9uX25hbWUYASABKAkSFwoPcmVmZXJlbmNlX3ZhbHVl",
          "GAIgASgBEiEKCG1pc3Npb25zGAMgAygLMg8uQmFja3VwLk1pc3Npb24SGAoQ",
          "Y3VycmVudF9taXNzaW9ucxgEIAMoCRqKBAoETWlzYxIcChRjaGlja2VuX2J0",
          "bl9wcmVmX2JpZxgBIAEoCBIiChpmcmVlX2hhdGNoZXJ5X3JlZmlsbF9naXZl",
          "bhgCIAEoCBIdChVsYXN0X3NoYXJlX2Zhcm1fdmFsdWUYAyABKAESIwobbGFz",
          "dF9zaGFyZV9zd2FybV9mYXJtX3ZhbHVlGAQgASgBEh0KFWxhc3Rfc2hhcmVf",
          "c3dhcm1fc2l6ZRgFIAEoARITCgtmcmllbmRfcmFuaxgGIAEoBBIXCg9mcmll",
          "bmRfcmFua19wb3AYByABKAQSEwoLZ2xvYmFsX3JhbmsYCCABKAQSFwoPZ2xv",
          "YmFsX3JhbmtfcG9wGAkgASgEEiUKHWxhc3RfcHJlc3RpZ2VfYWxlcnRfc291",
          "bF9lZ2dzGAogASgEEhQKDHRyb3BoeV9hbGVydBgLIAEoCBIQCghhcl9hbGVy",
          "dBgMIAEoCBIXCg9jb250cmFjdHNfYWxlcnQYDSABKAgSEgoKY29vcF9hbGVy",
          "dBgOIAEoCBIUCgxzd2l0Y2hfYWxlcnQYDyABKAgSHQoVZWdnX29mX3Byb3Bo",
          "ZWN5X2FsZXJ0GBAgASgIEhkKEWJvb3N0X3Rva2VuX2FsZXJ0GBEgASgIEhYK",
          "DnNvdWxfZWdnX2FsZXJ0GBIgASgIEh0KFWJhY2t1cF9yZW1pbmRlcl9hbGVy",
          "dBgTIAEoCCLMAQoTRmlyc3RDb250YWN0UmVxdWVzdBIPCgd1c2VyX2lkGAEg",
          "ASgJEhYKDmNsaWVudF92ZXJzaW9uGAIgASgNEhAKCHBsYXRmb3JtGAMgASgN",
          "EhIKCmVpX3VzZXJfaWQYBCABKAkSEQoJZGV2aWNlX2lkGAUgASgJEhAKCHVz",
          "ZXJuYW1lGAYgASgJEhgKEGdhbWVfc2VydmljZXNfaWQYByABKAkSJwoMcmVx",
          "dWVzdF9pbmZvGAggASgLMhEuQmFzaWNSZXF1ZXN0SW5mbyJOChRGaXJzdENv",
          "bnRhY3RSZXNwb25zZRIkCg1maXJzdF9jb250YWN0GAEgASgLMg0uRmlyc3RD",
          "b250YWN0EhAKCGNoZWNrc3VtGAIgASgJIosBCgxGaXJzdENvbnRhY3QSFwoG",
          "YmFja3VwGAEgASgLMgcuQmFja3VwEhIKCmVpX3VzZXJfaWQYAiABKAkSFwoP",
          "aWRzX3RyYW5zZmVycmVkGAMgAygJEh4KCmVycm9yX2NvZGUYBCABKA4yCi5F",
          "cnJvckNvZGUSFQoNZXJyb3JfbWVzc2FnZRgFIAEoCSJaCgZSZXdhcmQSIAoL",
          "cmV3YXJkX3R5cGUYASABKA4yCy5SZXdhcmRUeXBlEhcKD3Jld2FyZF9zdWJf",
          "dHlwZRgCIAEoCRIVCg1yZXdhcmRfYW1vdW50GAMgASgBIq8ECghDb250cmFj",
          "dBIKCgJpZBgBIAEoCRIRCgNlZ2cYAiABKA4yBC5FZ2cSHQoFZ29hbHMYAyAD",
          "KAsyDi5Db250cmFjdC5Hb2FsEhQKDGNvb3BfYWxsb3dlZBgEIAEoCBIVCg1t",
          "YXhfY29vcF9zaXplGAUgASgNEhcKD2V4cGlyYXRpb25fdGltZRgGIAEoARIW",
          "Cg5sZW5ndGhfc2Vjb25kcxgHIAEoARIMCgRuYW1lGAkgASgJEhMKC2Rlc2Ny",
          "aXB0aW9uGAogASgJEg0KBWRlYnVnGAsgASgIEhIKCm1heF9ib29zdHMYDCAB",
          "KA0SFQoNbWF4X3NvdWxfZWdncxgNIAEoARIaChJtaW5fY2xpZW50X3ZlcnNp",
          "b24YDiABKA0SGQoRbWludXRlc19wZXJfdG9rZW4YDyABKAESJAoJZ29hbF9z",
          "ZXRzGBAgAygLMhEuQ29udHJhY3QuR29hbFNldBqiAQoER29hbBIXCgR0eXBl",
          "GAEgASgOMgkuR29hbFR5cGUSFQoNdGFyZ2V0X2Ftb3VudBgCIAEoARIgCgty",
          "ZXdhcmRfdHlwZRgDIAEoDjILLlJld2FyZFR5cGUSFwoPcmV3YXJkX3N1Yl90",
          "eXBlGAQgASgJEhUKDXJld2FyZF9hbW91bnQYBSABKAESGAoQdGFyZ2V0X3Nv",
          "dWxfZWdncxgGIAEoARooCgdHb2FsU2V0Eh0KBWdvYWxzGAEgAygLMg4uQ29u",
          "dHJhY3QuR29hbCJwChBCYXNpY1JlcXVlc3RJbmZvEhIKCmVpX3VzZXJfaWQY",
          "ASABKAkSFgoOY2xpZW50X3ZlcnNpb24YAiABKA0SDwoHdmVyc2lvbhgDIAEo",
          "CRINCgVidWlsZBgEIAEoCRIQCghwbGF0Zm9ybRgFIAEoCSJwChFDb250cmFj",
          "dHNSZXNwb25zZRIcCgljb250cmFjdHMYASADKAsyCS5Db250cmFjdBITCgtz",
          "ZXJ2ZXJfdGltZRgCIAEoARIPCgdtYXhfZW9wGAMgASgNEhcKD3dhcm5pbmdf",
          "bWVzc2FnZRgEIAEoCSKLAQoRQ29vcFN0YXR1c1JlcXVlc3QSEwoLY29udHJh",
          "Y3RfaWQYASABKAkSDwoHY29vcF9pZBgCIAEoCRIPCgd1c2VyX2lkGAMgASgJ",
          "EhYKDmNsaWVudF92ZXJzaW9uGAQgASgNEicKDHJlcXVlc3RfaW5mbxgFIAEo",
          "CzIRLkJhc2ljUmVxdWVzdEluZm8iRwoSQ29vcFN0YXR1c1Jlc3BvbnNlEh8K",
          "CmNvb3BTdGF0dXMYASABKAsyCy5Db29wU3RhdHVzEhAKCGNoZWNrc3VtGAIg",
          "ASgJItEFCgpDb29wU3RhdHVzEhMKC2NvbnRyYWN0X2lkGAEgASgJEhQKDHRv",
          "dGFsX2Ftb3VudBgCIAEoARIPCgdjb29wX2lkGAMgASgJEjIKDGNvbnRyaWJ1",
          "dG9ycxgEIAMoCzIcLkNvb3BTdGF0dXMuQ29udHJpYnV0aW9uSW5mbxIZChFz",
          "ZWNvbmRzX3JlbWFpbmluZxgFIAEoARIdChVhbGxfbWVtYmVyc19yZXBvcnRp",
          "bmcYBiABKAgSJgoeZ3JhY2VfcGVyaW9kX3NlY29uZHNfcmVtYWluaW5nGAcg",
          "ASgBEhYKDmF1dG9fZ2VuZXJhdGVkGAggASgIEhIKCmNyZWF0b3JfaWQYCSAB",
          "KAkSDgoGcHVibGljGAogASgIEiMKBWdpZnRzGAsgAygLMhQuQ29vcFN0YXR1",
          "cy5Db29wR2lmdBIXCg9sb2NhbF90aW1lc3RhbXAYDCABKAEaPgoIQ29vcEdp",
          "ZnQSDwoHdXNlcl9pZBgBIAEoCRIOCgZhbW91bnQYAiABKA0SEQoJdXNlcl9u",
          "YW1lGAMgASgJGrYCChBDb250cmlidXRpb25JbmZvEg8KB3VzZXJfaWQYASAB",
          "KAkSEQoJdXNlcl9uYW1lGAIgASgJEhsKE2NvbnRyaWJ1dGlvbl9hbW91bnQY",
          "AyABKAESDgoGYWN0aXZlGAQgASgIEhAKCHBsYXRmb3JtGAUgASgNEhkKEWNv",
          "bnRyaWJ1dGlvbl9yYXRlGAYgASgBEhsKE3RpbWVfY2hlYXRfZGV0ZWN0ZWQY",
          "ByABKAgSEwoLcmFua19jaGFuZ2UYCCABKAUSDwoHcHVzaF9pZBgJIAEoCRIR",
          "CgliYW5fdm90ZXMYCiABKA0SEgoKc291bF9wb3dlchgLIAEoARIUCgxib29z",
          "dF90b2tlbnMYDCABKA0SJAoMYnVmZl9oaXN0b3J5GA0gAygLMg4uQ29vcEJ1",
          "ZmZTdGF0ZSKUAwoNTG9jYWxDb250cmFjdBIbCghjb250cmFjdBgBIAEoCzIJ",
          "LkNvbnRyYWN0Eg8KB2Nvb3BfaWQYAiABKAkSFQoNdGltZV9hY2NlcHRlZBgD",
          "IAEoARIRCgljYW5jZWxsZWQYBCABKAgSHAoUY29vcF9zaGFyZWRfZW5kX3Rp",
          "bWUYBSABKAESJQodbGFzdF9hbW91bnRfd2hlbl9yZXdhcmRfZ2l2ZW4YBiAB",
          "KAESEAoIYWNjZXB0ZWQYByABKAgSCwoDbmV3GAggASgIEiIKGmNvb3BfZ3Jh",
          "Y2VfcGVyaW9kX2VuZF90aW1lGAkgASgBEiMKG2Nvb3BfY29udHJpYnV0aW9u",
          "X2ZpbmFsaXplZBgKIAEoCBInCh9jb29wX2xhc3RfdXBsb2FkZWRfY29udHJp",
          "YnV0aW9uGAsgASgBEhMKC2Jvb3N0c191c2VkGAwgASgNEhQKDGNvb3BfdXNl",
          "cl9pZBgNIAEoCRIaChJudW1fZ29hbHNfYWNoaWV2ZWQYDiABKA0SDgoGbGVh",
          "Z3VlGA8gASgNIpEBCgtNeUNvbnRyYWN0cxIhCgljb250cmFjdHMYASADKAsy",
          "Di5Mb2NhbENvbnRyYWN0EiAKCGFyY2hpdmVkGAIgAygLMg4uTG9jYWxDb250",
          "cmFjdBIZChFjb250cmFjdF9pZHNfc2VlbhgDIAMoCRIiCg1jb29wX3N0YXR1",
          "c2VzGAQgAygLMgsuQ29vcFN0YXR1cyJUCg1Db29wQnVmZlN0YXRlEhcKD2Vn",
          "Z19sYXlpbmdfcmF0ZRgBIAEoARIQCghlYXJuaW5ncxgCIAEoARIYChBzZXJ2",
          "ZXJfdGltZXN0YW1wGAMgASgBIjIKD0Nvb3BCdWZmSGlzdG9yeRIfCgdoaXN0",
          "b3J5GAEgAygLMg4uQ29vcEJ1ZmZTdGF0ZSJvCgpTZXJ2ZXJHaWZ0Eg8KB3Vz",
          "ZXJfaWQYASABKAkSIAoLcmV3YXJkX3R5cGUYAyABKA4yCy5SZXdhcmRUeXBl",
          "EhcKD3Jld2FyZF9zdWJfdHlwZRgEIAEoCRIVCg1yZXdhcmRfYW1vdW50GAUg",
          "ASgBIo0CChJQZXJpb2RpY2Fsc1JlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRIS",
          "CgpwaWdneV9mdWxsGAIgASgIEhgKEHBpZ2d5X2ZvdW5kX2Z1bGwYAyABKAgS",
          "HQoVc2Vjb25kc19mdWxsX3JlYWx0aW1lGAQgASgBEh0KFXNlY29uZHNfZnVs",
          "bF9nYW1ldGltZRgFIAEoARIXCg9sb3N0X2luY3JlbWVudHMYByABKA0SEQoJ",
          "c291bF9lZ2dzGAggASgBEhYKDmNsaWVudF92ZXJzaW9uGAogASgNEg0KBWRl",
          "YnVnGAsgASgIEicKDHJlcXVlc3RfaW5mbxgMIAEoCzIRLkJhc2ljUmVxdWVz",
          "dEluZm8iSgoTUGVyaW9kaWNhbHNSZXNwb25zZRIhCgtwZXJpb2RpY2FscxgB",
          "IAEoCzIMLlBlcmlvZGljYWxzEhAKCGNoZWNrc3VtGAIgASgJIm8KC1Blcmlv",
          "ZGljYWxzEg0KBXNhbGVzGAEgASgNEg4KBmV2ZW50cxgCIAEoDRIlCgljb250",
          "cmFjdHMYAyABKAsyEi5Db250cmFjdHNSZXNwb25zZRIaCgVnaWZ0cxgEIAMo",
          "CzILLlNlcnZlckdpZnQivgUKB01pc3Npb24SIAoEc2hpcBgBIAEoDjISLk1p",
          "c3Npb24uU3BhY2VzaGlwEh8KBnN0YXR1cxgCIAEoDjIPLk1pc3Npb24uU3Rh",
          "dHVzEiwKDWR1cmF0aW9uX3R5cGUYAyABKA4yFS5NaXNzaW9uLkR1cmF0aW9u",
          "VHlwZRIcCgVmdWVscxgEIAMoCzINLk1pc3Npb24uRnVlbBIYChBkdXJhdGlv",
          "bl9zZWNvbmRzGAUgASgBEhkKEXNlY29uZHNfcmVtYWluaW5nGAYgASgBEhIK",
          "CmlkZW50aWZpZXIYByABKAkSGgoSc3RhcnRfdGltZV9kZXJpdmVkGAggASgB",
          "EhAKCGNhcGFjaXR5GAkgASgNEhMKC21pc3Npb25fbG9nGAogASgJGikKBEZ1",
          "ZWwSEQoDZWdnGAEgASgOMgQuRWdnEg4KBmFtb3VudBgCIAEoASK5AQoJU3Bh",
          "Y2VzaGlwEg8KC0NISUNLRU5fT05FEAASEAoMQ0hJQ0tFTl9OSU5FEAESEQoN",
          "Q0hJQ0tFTl9IRUFWWRACEgcKA0JDUhADEhYKEk1JTExFTk5JVU1fQ0hJQ0tF",
          "ThAEEhcKE0NPUkVMTElIRU5fQ09SVkVUVEUQBRIOCgpHQUxFR0dUSUNBEAYS",
          "DgoKQ0hJQ0tGSUFOVBAHEgwKCFZPWUVHR0VSEAgSDgoKSEVORVJQUklTRRAJ",
          "IjsKDER1cmF0aW9uVHlwZRIJCgVTSE9SVBAAEggKBExPTkcQARIICgRFUElD",
          "EAISDAoIVFVUT1JJQUwQAyJ0CgZTdGF0dXMSCwoHRlVFTElORxAAEhUKEVBS",
          "RVBBUkVfVE9fTEFVTkNIEAUSDQoJRVhQTE9SSU5HEAoSDAoIUkVUVVJORUQQ",
          "DxINCglBTkFMWVpJTkcQEBIMCghDT01QTEVURRAUEgwKCEFSQ0hJVkVEEBki",
          "zQsKCEFydGlmYWN0EhwKBG5hbWUYASABKA4yDi5BcnRpZmFjdC5OYW1lEh4K",
          "BWxldmVsGAIgASgOMg8uQXJ0aWZhY3QuTGV2ZWwSIAoGcmFyaXR5GAMgASgO",
          "MhAuQXJ0aWZhY3QuUmFyaXR5EhEKA2VnZxgEIAEoDjIELkVnZyJFCgRUeXBl",
          "EgwKCEFSVElGQUNUEAASCQoFU1RPTkUQARIOCgpJTkdSRURJRU5UEAISFAoQ",
          "U1RPTkVfSU5HUkVESUVOVBADIoMJCgROYW1lEg8KC0xVTkFSX1RPVEVNEAAS",
          "EQoNVEFDSFlPTl9TVE9ORRABEhoKFlRBQ0hZT05fU1RPTkVfRlJBR01FTlQQ",
          "AhIXChNORU9EWU1JVU1fTUVEQUxMSU9OEAMSEQoNQkVBS19PRl9NSURBUxAE",
          "EhUKEUxJR0hUX09GX0VHR0VORElMEAUSFQoRREVNRVRFUlNfTkVDS0xBQ0UQ",
          "BhIYChRWSUFMX09GX01BUlRJQU5fRFVTVBAHEgoKBkdVU1NFVBAIEgsKB0NI",
          "QUxJQ0UQCRIRCg1CT09LX09GX0JBU0FOEAoSEwoPUEhPRU5JWF9GRUFUSEVS",
          "EAsSEQoNVFVOR1NURU5fQU5LSBAMEh0KGUVYVFJBVEVSUkVTVFJJQUxfQUxV",
          "TUlOVU0QDRIUChBBTkNJRU5UX1RVTkdTVEVOEA4SDwoLU1BBQ0VfUk9DS1MQ",
          "DxIOCgpBTElFTl9XT09EEBASEgoOR09MRF9NRVRFT1JJVEUQERISCg5UQVVf",
          "Q0VUSV9HRU9ERRASEhQKEENFTlRBVVJJQU5fU1RFRUwQExITCg9FUklEQU5J",
          "X0ZFQVRIRVIQFBITCg9BVVJFTElBTl9CUk9PQ0gQFRIUChBDQVJWRURfUkFJ",
          "TlNUSUNLEBYSDwoLUFVaWkxFX0NVQkUQFxIVChFRVUFOVFVNX01FVFJPTk9N",
          "RRAYEhQKEFNISVBfSU5fQV9CT1RUTEUQGRIVChFUQUNIWU9OX0RFRkxFQ1RP",
          "UhAaEhgKFElOVEVSU1RFTExBUl9DT01QQVNTEBsSFQoRRElMSVRISVVNX01P",
          "Tk9DTEUQHBIVChFUSVRBTklVTV9BQ1RVQVRPUhAdEhEKDU1FUkNVUllTX0xF",
          "TlMQHhITCg9ESUxJVEhJVU1fU1RPTkUQHxIPCgtTSEVMTF9TVE9ORRAgEg8K",
          "C0xVTkFSX1NUT05FECESDgoKU09VTF9TVE9ORRAiEg8KC0RST05FX1BBUlRT",
          "ECMSEQoNUVVBTlRVTV9TVE9ORRAkEg8KC1RFUlJBX1NUT05FECUSDgoKTElG",
          "RV9TVE9ORRAmEhIKDlBST1BIRUNZX1NUT05FECcSEQoNQ0xBUklUWV9TVE9O",
          "RRAoEhQKEENFTEVTVElBTF9CUk9OWkUQKRIQCgxMQUxBTkRFX0hJREUQKhIS",
          "Cg5TT0xBUl9USVRBTklVTRArEhwKGERJTElUSElVTV9TVE9ORV9GUkFHTUVO",
          "VBAsEhgKFFNIRUxMX1NUT05FX0ZSQUdNRU5UEC0SGAoUTFVOQVJfU1RPTkVf",
          "RlJBR01FTlQQLhIXChNTT1VMX1NUT05FX0ZSQUdNRU5UEC8SGwoXUFJPUEhF",
          "Q1lfU1RPTkVfRlJBR01FTlQQMBIaChZRVUFOVFVNX1NUT05FX0ZSQUdNRU5U",
          "EDESGAoUVEVSUkFfU1RPTkVfRlJBR01FTlQQMhIXChNMSUZFX1NUT05FX0ZS",
          "QUdNRU5UEDMSGgoWQ0xBUklUWV9TVE9ORV9GUkFHTUVOVBA0Eg0KB1VOS05P",
          "V04Q/f8DIkgKBUxldmVsEgwKCElORkVSSU9SEAASCgoGTEVTU0VSEAESCgoG",
          "Tk9STUFMEAISCwoHR1JFQVRFUhADEgwKCFNVUEVSSU9SEAQiNwoGUmFyaXR5",
          "EgoKBkNPTU1PThAAEggKBFJBUkUQARIICgRFUElDEAISDQoJTEVHRU5EQVJZ",
          "EAMiTwoQQ29tcGxldGVBcnRpZmFjdBIgCg1hcnRpZmFjdF9iYXNlGAEgASgL",
          "MgkuQXJ0aWZhY3QSGQoGc3RvbmVzGAIgAygLMgkuQXJ0aWZhY3QicgoVQXJ0",
          "aWZhY3RJbnZlbnRvcnlJdGVtEg8KB2l0ZW1faWQYASABKAQSIwoIYXJ0aWZh",
          "Y3QYAiABKAsyES5Db21wbGV0ZUFydGlmYWN0EhAKCHF1YW50aXR5GAMgASgB",
          "EhEKCXNlcnZlcl9pZBgEIAEoCSIyCg1JbnZlbnRvcnlTbG90EhAKCG9jY3Vw",
          "aWVkGAEgASgIEg8KB2l0ZW1faWQYAiABKA0iYAodQXJ0aWZhY3RzQ29uZmln",
          "dXJhdGlvblJlcXVlc3QSFgoOY2xpZW50X3ZlcnNpb24YASABKA0SJwoMcmVx",
          "dWVzdF9pbmZvGAIgASgLMhEuQmFzaWNSZXF1ZXN0SW5mbyJsCh5BcnRpZmFj",
          "dHNDb25maWd1cmF0aW9uUmVzcG9uc2USOAoXYXJ0aWZhY3RzX2NvbmZpZ3Vy",
          "YXRpb24YASABKAsyFy5BcnRpZmFjdHNDb25maWd1cmF0aW9uEhAKCGNoZWNr",
          "c3VtGAIgASgJIqMFChZBcnRpZmFjdHNDb25maWd1cmF0aW9uEkUKEm1pc3Np",
          "b25fcGFyYW1ldGVycxgBIAMoCzIpLkFydGlmYWN0c0NvbmZpZ3VyYXRpb24u",
          "TWlzc2lvblBhcmFtZXRlcnMSRwoTYXJ0aWZhY3RfcGFyYW1ldGVycxgCIAMo",
          "CzIqLkFydGlmYWN0c0NvbmZpZ3VyYXRpb24uQXJ0aWZhY3RQYXJhbWV0ZXJz",
          "GpUCChFNaXNzaW9uUGFyYW1ldGVycxIgCgRzaGlwGAEgASgOMhIuTWlzc2lv",
          "bi5TcGFjZXNoaXASRQoJZHVyYXRpb25zGAMgAygLMjIuQXJ0aWZhY3RzQ29u",
          "ZmlndXJhdGlvbi5NaXNzaW9uUGFyYW1ldGVycy5EdXJhdGlvbhqWAQoIRHVy",
          "YXRpb24SLAoNZHVyYXRpb25fdHlwZRgBIAEoDjIVLk1pc3Npb24uRHVyYXRp",
          "b25UeXBlEg8KB3NlY29uZHMYAiABKAESDwoHcXVhbGl0eRgDIAEoAhITCgtt",
          "aW5fcXVhbGl0eRgEIAEoAhITCgttYXhfcXVhbGl0eRgFIAEoAhIQCghjYXBh",
          "Y2l0eRgGIAEoDRrgAQoSQXJ0aWZhY3RQYXJhbWV0ZXJzEhsKCGFydGlmYWN0",
          "GAEgASgLMgkuQXJ0aWZhY3QSFAoMYmFzZV9xdWFsaXR5GAIgASgBEg0KBXZh",
          "bHVlGAMgASgBEhcKD29kZHNfbXVsdGlwbGllchgEIAEoARIWCg5jcmFmdGlu",
          "Z19wcmljZRgFIAEoARIaChJjcmFmdGluZ19wcmljZV9sb3cYBiABKAESHQoV",
          "Y3JhZnRpbmdfcHJpY2VfZG9tYWluGAcgASgNEhwKFGNyYWZ0aW5nX3ByaWNl",
          "X2N1cnZlGAggASgBIrkFChFBcnRpZmFjdHNEYXRhYmFzZRIvCg9pbnZlbnRv",
          "cnlfaXRlbXMYASADKAsyFi5BcnRpZmFjdEludmVudG9yeUl0ZW0SFQoNaXRl",
          "bV9zZXF1ZW5jZRgCIAEoBBInCg9pbnZlbnRvcnlfc2xvdHMYAyADKAsyDi5J",
          "bnZlbnRvcnlTbG90EhoKCG1pc3Npb25zGAQgAygLMgguTWlzc2lvbhIjChFh",
          "cmNoaXZlZF9taXNzaW9ucxgFIAMoCzIILk1pc3Npb24SPwoQYWN0aXZlX2Fy",
          "dGlmYWN0cxgHIAMoCzIlLkFydGlmYWN0c0RhdGFiYXNlLkFjdGl2ZUFydGlm",
          "YWN0U2xvdBInChRkaXNjb3ZlcmVkX2FydGlmYWN0cxgIIAMoCzIJLkFydGlm",
          "YWN0EkEKE2NyYWZ0YWJsZV9hcnRpZmFjdHMYCSADKAsyJC5BcnRpZmFjdHNE",
          "YXRhYmFzZS5DcmFmdGFibGVBcnRpZmFjdBI9Cg9jcmFmdGluZ19jb3VudHMY",
          "CiADKAsyJC5BcnRpZmFjdHNEYXRhYmFzZS5DcmFmdGFibGVBcnRpZmFjdBJC",
          "ChRhY3RpdmVfYXJ0aWZhY3Rfc2V0cxgLIAMoCzIkLkFydGlmYWN0c0RhdGFi",
          "YXNlLkFjdGl2ZUFydGlmYWN0U2V0GjcKEkFjdGl2ZUFydGlmYWN0U2xvdBIQ",
          "CghvY2N1cGllZBgBIAEoCBIPCgdpdGVtX2lkGAIgASgEGkkKEUFjdGl2ZUFy",
          "dGlmYWN0U2V0EjQKBXNsb3RzGAEgAygLMiUuQXJ0aWZhY3RzRGF0YWJhc2Uu",
          "QWN0aXZlQXJ0aWZhY3RTbG90Gj4KEUNyYWZ0YWJsZUFydGlmYWN0EhsKCGFy",
          "dGlmYWN0GAEgASgLMgkuQXJ0aWZhY3QSDAoEc2VlbhgCIAEoCCI3ChJBY3Rp",
          "dmVBcnRpZmFjdFNsb3QSEAoIb2NjdXBpZWQYASABKAgSDwoHaXRlbV9pZBgC",
          "IAEoBCI3ChFBY3RpdmVBcnRpZmFjdFNldBIiCgVzbG90cxgBIAMoCzITLkFj",
          "dGl2ZUFydGlmYWN0U2xvdCJNChFDcmFmdGFibGVBcnRpZmFjdBIbCghhcnRp",
          "ZmFjdBgBIAEoCzIJLkFydGlmYWN0EgwKBHNlZW4YAiABKAgSDQoFY291bnQY",
          "AyABKA0qYAoJRXJyb3JDb2RlEgwKCE5PX0VSUk9SEAASHAoYRVhJU1RJTkdf",
          "VVNFUl9XX0dBTUVSX0lEEAESEgoOVVNFUl9OT1RfRk9VTkQQAhITCg9CQUNL",
          "VVBfQ09ORkxJQ1QQAypFCgRUeXBlEgwKCEFSVElGQUNUEAASCQoFU1RPTkUQ",
          "ARIOCgpJTkdSRURJRU5UEAISFAoQU1RPTkVfSU5HUkVESUVOVBADKocDCgNF",
          "Z2cSEQoNVU5ERUZJTkVEX0VHRxAAEgoKBkVESUJMRRABEg0KCVNVUEVSRk9P",
          "RBACEgsKB01FRElDQUwQAxIPCgtST0NLRVRfRlVFTBAEEhIKDlNVUEVSX01B",
          "VEVSSUFMEAUSCgoGRlVTSU9OEAYSCwoHUVVBTlRVTRAHEg8KC0lNTU9SVEFM",
          "SVRZEAgSCwoHVEFDSFlPThAJEgwKCEdSQVZJVE9OEAoSDQoJRElMSVRISVVN",
          "EAsSCwoHUFJPRElHWRAMEg0KCVRFUlJBRk9STRANEg4KCkFOVElNQVRURVIQ",
          "DhIPCgtEQVJLX01BVFRFUhAPEgYKAkFJEBASCgoGTkVCVUxBEBESDAoIVU5J",
          "VkVSU0UQEhIRCg1FTkxJR0hURU5NRU5UEBMSDQoJQ0hPQ09MQVRFEGQSCgoG",
          "RUFTVEVSEGUSEQoNV0FURVJfQkFMTE9PThBmEgwKCEZJUkVXT1JLEGcSCwoH",
          "UFVNUEtJThBoEhEKC1VOS05PV05fRUdHEP3/AypGCghGYXJtVHlwZRIXChNV",
          "TkRFRklORURfRkFSTV9UWVBFEAASCQoFRU1QVFkQARIICgRIT01FEAISDAoI",
          "Q09OVFJBQ1QQAypJCghHb2FsVHlwZRIXChNVTkRFRklORURfR09BTF9UWVBF",
          "EAASDQoJRUdHU19MQUlEEAESFQoRVU5LTk9XTl9HT0FMX1RZUEUQZCrwAQoK",
          "UmV3YXJkVHlwZRIZChVVTkRFRklORURfUkVXQVJEX1RZUEUQABIICgRDQVNI",
          "EAESDwoLR09MREVOX0VHR1MQAhINCglTT1VMX0VHR1MQAxIUChBFR0dTX09G",
          "X1BST1BIRUNZEAQSFgoSRVBJQ19SRVNFQVJDSF9JVEVNEAUSDgoKUElHR1lf",
          "RklMTBAGEhQKEFBJR0dZX01VTFRJUExJRVIQBxIUChBQSUdHWV9MRVZFTF9C",
          "VU1QEAgSCQoFQk9PU1QQCRIPCgtCT09TVF9UT0tFThAKEhcKE1VOS05PV05f",
          "UkVXQVJEX1RZUEUQZCqvAgoISGFiTGV2ZWwSCAoEQ09PUBAAEgkKBVNIQUNL",
          "EAESDwoLU1VQRVJfU0hBQ0sQAhIPCgtTSE9SVF9IT1VTRRADEhAKDFRIRV9T",
          "VEFOREFSRBAEEg4KCkxPTkdfSE9VU0UQBRIRCg1ET1VCTEVfREVDS0VSEAYS",
          "DQoJV0FSRUhPVVNFEAcSCgoGQ0VOVEVSEAgSCgoGQlVOS0VSEAkSCgoGRUdH",
          "S0VBEAoSDAoISEFCXzEwMDAQCxIKCgZIQU5HQVIQDBIJCgVUT1dFUhANEg4K",
          "CkhBQl8xMF8wMDAQDhIMCghFR0dUT1BJQRAPEgwKCE1PTk9MSVRIEBASEQoN",
          "UExBTkVUX1BPUlRBTBAREhQKEENISUNLRU5fVU5JVkVSU0UQEhIKCgZOT19I",
          "QUIQEyrUAQoLVmVoaWNsZVR5cGUSCQoFVFJJS0UQABILCgdUUkFOU0lUEAES",
          "CgoGUElDS1VQEAISEwoPVkVISUNMRV8xMF9GT09UEAMSEwoPVkVISUNMRV8y",
          "NF9GT09UEAQSCAoEU0VNSRAFEg8KC0RPVUJMRV9TRU1JEAYSDwoLRlVUVVJF",
          "X1NFTUkQBxINCglNRUdBX1NFTUkQCBIOCgpIT1ZFUl9TRU1JEAkSFwoTUVVB",
          "TlRVTV9UUkFOU1BPUlRFUhAKEhMKD0hZUEVSTE9PUF9UUkFJThALKlkKC1Ry",
          "b3BoeUxldmVsEg0KCU5PX1RST1BIWRAAEgoKBkJST05aRRABEgoKBlNJTFZF",
          "UhACEggKBEdPTEQQAxIMCghQTEFUSU5VTRAEEgsKB0RJQU1PTkQQBSofCgZM",
          "ZWFndWUSCgoGTk9STUFMEAASCQoFRUxJVEUQAUIZCg9jb20uYXV4YnJhaW4u",
          "ZWlCBkVnZ0luY2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ErrorCode), typeof(global::Type), typeof(global::Egg), typeof(global::FarmType), typeof(global::GoalType), typeof(global::RewardType), typeof(global::HabLevel), typeof(global::VehicleType), typeof(global::TrophyLevel), typeof(global::League), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup), global::Backup.Parser, new[]{ "UserId", "UserName", "ApproxTime", "Settings", "Tutorial", "Stats", "Game", "Missions", "Misc", "Farms", "Contracts", "ArtifactsStatus", "ArtifactsDatabase", "GameServicesId", "DeviceId", "EiUserId", "ForceOfferBackup", "ClientVersion", "ForceBackup", "Checksum", "Signature" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.Settings), global::Backup.Types.Settings.Parser, new[]{ "Sfx", "Music", "LowBatteryMode", "LowPerformanceMode", "NotificationsQueried", "NotificationsEnabled", "CoppaQueried", "CoppaRestricted", "ForceTouchChickenBtn", "LowPerformance", "NotifyDailyGift", "GdprConsentQueried", "GdprConsentGiven", "UserAdsEnabled", "UserCloudEnabled", "GdprAgeRestricted", "LastDayAgeQueried", "AgeQueried", "AgeRestricted", "DataCollectionConsentQueried", "DataCollectionConsentGiven", "UserAnalyticsEnabled", "UserPersonalizedAdsEnabled", "LastBackupTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.Tutorial), global::Backup.Types.Tutorial.Parser, new[]{ "IntroShown", "ClickTutorialShown", "BuyHabShown", "HireVehicleShown", "QNumShown", "SNumShown", "ContractsTabShown", "ContractInfoShown", "JoinCoopShown", "SwitchFarmShown", "TutorialsShown" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.Stats), global::Backup.Types.Stats.Parser, new[]{ "RefillUses", "VideoDoublerUses", "Warp1Uses", "Warp8Uses", "DroneTakedowns", "UnlimitedChickensUses", "EggTotals", "PrestigeCount", "DroneTakedownsElite", "PiggyBreakCount", "IapPacksPurchased", "BoostsUsed", "PiggyFull", "PiggyFoundFull", "TimePiggyFilledRealtime", "TimePiggyFullGametime", "LostPiggyIncrements" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.ResearchItem), global::Backup.Types.ResearchItem.Parser, new[]{ "Id", "Level" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.NewsHeadline), global::Backup.Types.NewsHeadline.Parser, new[]{ "Id", "Read" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.AchievementInfo), global::Backup.Types.AchievementInfo.Parser, new[]{ "Name", "Achieved" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.ActiveBoost), global::Backup.Types.ActiveBoost.Parser, new[]{ "Id", "TimeRemaining", "ReferenceValue" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.OwnedBoost), global::Backup.Types.OwnedBoost.Parser, new[]{ "Id", "Count" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.Game), global::Backup.Types.Game.Parser, new[]{ "MaxEggReached", "GoldenEggsEarned", "GoldenEggsSpent", "PrestigeCashEarned", "LifetimeCashEarned", "PiggyBank", "PermitLevel", "EpicResearch", "NextDailyGiftTime", "News", "LastNewsTime", "CurrentMultiplier", "CurrentMultiplierExpiration", "Achievements", "UnclaimedGoldenEggs", "MaxFarmSizeReached", "EggMedalLevels", "LastDailyGiftCollectedDay", "CurrentFarm", "ProphecyEggs", "UnclaimedProphecyEggs", "LongIdleNotificationSet", "LongIdleNotificationThreshold", "LongIdleReward", "DailyGiftIndex", "HyperloopStation", "Boosts", "PiggyFullAlertShown", "TotalTimeCheatsDetected", "PrestigeSoulBoostCash", "SoulEggs", "UnclaimedSoulEggs", "ForceEliteContracts", "NewPlayerEventEndTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.ArtifactsStatus), global::Backup.Types.ArtifactsStatus.Parser, new[]{ "Infusing", "ItemBeingInfused", "EggTypeInfusing", "InfusingEggsRequired", "EggsInfused", "FlowPercentageArtifacts", "FuelingEnabled", "InfusingEnabled", "LastFueledShip", "InventoryScore", "Enabled", "IntroShown", "ArtifactBeingInfused" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.Farm), global::Backup.Types.Farm.Parser, new[]{ "EggType", "CashEarned", "CashSpent", "UnclaimedCash", "LastStepTime", "NumChickens", "NumChickensUnsettled", "NumChickensRunning", "EggsLaid", "EggsPaidFor", "SilosOwned", "Habs", "HabPopulations", "HabPopulationInbounds", "HabIncubatorPopulations", "HatcheryPopulation", "Vehicles", "CommonResearch", "FarmType", "ContractId", "HyperloopCars", "ActiveBoosts", "TimeCheatsDetected", "TimeCheatDebt", "BoostTokensReceived", "BoostTokensSpent", "UnclaimedBoostTokens", "BoostTokensGiven", "GametimeUntilNextBoostToken", "EggsShipped" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.Mission), global::Backup.Types.Mission.Parser, new[]{ "Id", "Completed", "ReferenceValue" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.Missions), global::Backup.Types.Missions.Parser, new[]{ "CurrentMissionName", "ReferenceValue", "Missions_", "CurrentMissions" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Backup.Types.Misc), global::Backup.Types.Misc.Parser, new[]{ "ChickenBtnPrefBig", "FreeHatcheryRefillGiven", "LastShareFarmValue", "LastShareSwarmFarmValue", "LastShareSwarmSize", "FriendRank", "FriendRankPop", "GlobalRank", "GlobalRankPop", "LastPrestigeAlertSoulEggs", "TrophyAlert", "ArAlert", "ContractsAlert", "CoopAlert", "SwitchAlert", "EggOfProphecyAlert", "BoostTokenAlert", "SoulEggAlert", "BackupReminderAlert" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::FirstContactRequest), global::FirstContactRequest.Parser, new[]{ "UserId", "ClientVersion", "Platform", "EiUserId", "DeviceId", "Username", "GameServicesId", "RequestInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FirstContactResponse), global::FirstContactResponse.Parser, new[]{ "FirstContact", "Checksum" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FirstContact), global::FirstContact.Parser, new[]{ "Backup", "EiUserId", "IdsTransferred", "ErrorCode", "ErrorMessage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Reward), global::Reward.Parser, new[]{ "RewardType", "RewardSubType", "RewardAmount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Contract), global::Contract.Parser, new[]{ "Id", "Egg", "Goals", "CoopAllowed", "MaxCoopSize", "ExpirationTime", "LengthSeconds", "Name", "Description", "Debug", "MaxBoosts", "MaxSoulEggs", "MinClientVersion", "MinutesPerToken", "GoalSets" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Contract.Types.Goal), global::Contract.Types.Goal.Parser, new[]{ "Type", "TargetAmount", "RewardType", "RewardSubType", "RewardAmount", "TargetSoulEggs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Contract.Types.GoalSet), global::Contract.Types.GoalSet.Parser, new[]{ "Goals" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::BasicRequestInfo), global::BasicRequestInfo.Parser, new[]{ "EiUserId", "ClientVersion", "Version", "Build", "Platform" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ContractsResponse), global::ContractsResponse.Parser, new[]{ "Contracts", "ServerTime", "MaxEop", "WarningMessage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CoopStatusRequest), global::CoopStatusRequest.Parser, new[]{ "ContractId", "CoopId", "UserId", "ClientVersion", "RequestInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CoopStatusResponse), global::CoopStatusResponse.Parser, new[]{ "CoopStatus", "Checksum" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CoopStatus), global::CoopStatus.Parser, new[]{ "ContractId", "TotalAmount", "CoopId", "Contributors", "SecondsRemaining", "AllMembersReporting", "GracePeriodSecondsRemaining", "AutoGenerated", "CreatorId", "Public", "Gifts", "LocalTimestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CoopStatus.Types.CoopGift), global::CoopStatus.Types.CoopGift.Parser, new[]{ "UserId", "Amount", "UserName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CoopStatus.Types.ContributionInfo), global::CoopStatus.Types.ContributionInfo.Parser, new[]{ "UserId", "UserName", "ContributionAmount", "Active", "Platform", "ContributionRate", "TimeCheatDetected", "RankChange", "PushId", "BanVotes", "SoulPower", "BoostTokens", "BuffHistory" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::LocalContract), global::LocalContract.Parser, new[]{ "Contract", "CoopId", "TimeAccepted", "Cancelled", "CoopSharedEndTime", "LastAmountWhenRewardGiven", "Accepted", "New", "CoopGracePeriodEndTime", "CoopContributionFinalized", "CoopLastUploadedContribution", "BoostsUsed", "CoopUserId", "NumGoalsAchieved", "League" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MyContracts), global::MyContracts.Parser, new[]{ "Contracts", "Archived", "ContractIdsSeen", "CoopStatuses" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CoopBuffState), global::CoopBuffState.Parser, new[]{ "EggLayingRate", "Earnings", "ServerTimestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CoopBuffHistory), global::CoopBuffHistory.Parser, new[]{ "History" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerGift), global::ServerGift.Parser, new[]{ "UserId", "RewardType", "RewardSubType", "RewardAmount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PeriodicalsRequest), global::PeriodicalsRequest.Parser, new[]{ "UserId", "PiggyFull", "PiggyFoundFull", "SecondsFullRealtime", "SecondsFullGametime", "LostIncrements", "SoulEggs", "ClientVersion", "Debug", "RequestInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PeriodicalsResponse), global::PeriodicalsResponse.Parser, new[]{ "Periodicals", "Checksum" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Periodicals), global::Periodicals.Parser, new[]{ "Sales", "Events", "Contracts", "Gifts" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Mission), global::Mission.Parser, new[]{ "Ship", "Status", "DurationType", "Fuels", "DurationSeconds", "SecondsRemaining", "Identifier", "StartTimeDerived", "Capacity", "MissionLog" }, null, new[]{ typeof(global::Mission.Types.Spaceship), typeof(global::Mission.Types.DurationType), typeof(global::Mission.Types.Status) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mission.Types.Fuel), global::Mission.Types.Fuel.Parser, new[]{ "Egg", "Amount" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::Artifact), global::Artifact.Parser, new[]{ "Name", "Level", "Rarity", "Egg" }, null, new[]{ typeof(global::Artifact.Types.Type), typeof(global::Artifact.Types.Name), typeof(global::Artifact.Types.Level), typeof(global::Artifact.Types.Rarity) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CompleteArtifact), global::CompleteArtifact.Parser, new[]{ "ArtifactBase", "Stones" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactInventoryItem), global::ArtifactInventoryItem.Parser, new[]{ "ItemId", "Artifact", "Quantity", "ServerId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InventorySlot), global::InventorySlot.Parser, new[]{ "Occupied", "ItemId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsConfigurationRequest), global::ArtifactsConfigurationRequest.Parser, new[]{ "ClientVersion", "RequestInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsConfigurationResponse), global::ArtifactsConfigurationResponse.Parser, new[]{ "ArtifactsConfiguration", "Checksum" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsConfiguration), global::ArtifactsConfiguration.Parser, new[]{ "MissionParameters", "ArtifactParameters" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsConfiguration.Types.MissionParameters), global::ArtifactsConfiguration.Types.MissionParameters.Parser, new[]{ "Ship", "Durations" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsConfiguration.Types.MissionParameters.Types.Duration), global::ArtifactsConfiguration.Types.MissionParameters.Types.Duration.Parser, new[]{ "DurationType", "Seconds", "Quality", "MinQuality", "MaxQuality", "Capacity" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsConfiguration.Types.ArtifactParameters), global::ArtifactsConfiguration.Types.ArtifactParameters.Parser, new[]{ "Artifact", "BaseQuality", "Value", "OddsMultiplier", "CraftingPrice", "CraftingPriceLow", "CraftingPriceDomain", "CraftingPriceCurve" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsDatabase), global::ArtifactsDatabase.Parser, new[]{ "InventoryItems", "ItemSequence", "InventorySlots", "Missions", "ArchivedMissions", "ActiveArtifacts", "DiscoveredArtifacts", "CraftableArtifacts", "CraftingCounts", "ActiveArtifactSets" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsDatabase.Types.ActiveArtifactSlot), global::ArtifactsDatabase.Types.ActiveArtifactSlot.Parser, new[]{ "Occupied", "ItemId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsDatabase.Types.ActiveArtifactSet), global::ArtifactsDatabase.Types.ActiveArtifactSet.Parser, new[]{ "Slots" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArtifactsDatabase.Types.CraftableArtifact), global::ArtifactsDatabase.Types.CraftableArtifact.Parser, new[]{ "Artifact", "Seen" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActiveArtifactSlot), global::ActiveArtifactSlot.Parser, new[]{ "Occupied", "ItemId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActiveArtifactSet), global::ActiveArtifactSet.Parser, new[]{ "Slots" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CraftableArtifact), global::CraftableArtifact.Parser, new[]{ "Artifact", "Seen", "Count" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ErrorCode {
  [pbr::OriginalName("NO_ERROR")] NoError = 0,
  [pbr::OriginalName("EXISTING_USER_W_GAMER_ID")] ExistingUserWGamerId = 1,
  [pbr::OriginalName("USER_NOT_FOUND")] UserNotFound = 2,
  [pbr::OriginalName("BACKUP_CONFLICT")] BackupConflict = 3,
}

public enum Type {
  [pbr::OriginalName("ARTIFACT")] Artifact = 0,
  [pbr::OriginalName("STONE")] Stone = 1,
  [pbr::OriginalName("INGREDIENT")] Ingredient = 2,
  [pbr::OriginalName("STONE_INGREDIENT")] StoneIngredient = 3,
}

public enum Egg {
  [pbr::OriginalName("UNDEFINED_EGG")] UndefinedEgg = 0,
  [pbr::OriginalName("EDIBLE")] Edible = 1,
  [pbr::OriginalName("SUPERFOOD")] Superfood = 2,
  [pbr::OriginalName("MEDICAL")] Medical = 3,
  [pbr::OriginalName("ROCKET_FUEL")] RocketFuel = 4,
  [pbr::OriginalName("SUPER_MATERIAL")] SuperMaterial = 5,
  [pbr::OriginalName("FUSION")] Fusion = 6,
  [pbr::OriginalName("QUANTUM")] Quantum = 7,
  [pbr::OriginalName("IMMORTALITY")] Immortality = 8,
  [pbr::OriginalName("TACHYON")] Tachyon = 9,
  [pbr::OriginalName("GRAVITON")] Graviton = 10,
  [pbr::OriginalName("DILITHIUM")] Dilithium = 11,
  [pbr::OriginalName("PRODIGY")] Prodigy = 12,
  [pbr::OriginalName("TERRAFORM")] Terraform = 13,
  [pbr::OriginalName("ANTIMATTER")] Antimatter = 14,
  [pbr::OriginalName("DARK_MATTER")] DarkMatter = 15,
  [pbr::OriginalName("AI")] Ai = 16,
  [pbr::OriginalName("NEBULA")] Nebula = 17,
  [pbr::OriginalName("UNIVERSE")] Universe = 18,
  [pbr::OriginalName("ENLIGHTENMENT")] Enlightenment = 19,
  [pbr::OriginalName("CHOCOLATE")] Chocolate = 100,
  [pbr::OriginalName("EASTER")] Easter = 101,
  [pbr::OriginalName("WATER_BALLOON")] WaterBalloon = 102,
  [pbr::OriginalName("FIREWORK")] Firework = 103,
  [pbr::OriginalName("PUMPKIN")] Pumpkin = 104,
  [pbr::OriginalName("UNKNOWN_EGG")] UnknownEgg = 65533,
}

public enum FarmType {
  [pbr::OriginalName("UNDEFINED_FARM_TYPE")] UndefinedFarmType = 0,
  [pbr::OriginalName("EMPTY")] Empty = 1,
  [pbr::OriginalName("HOME")] Home = 2,
  [pbr::OriginalName("CONTRACT")] Contract = 3,
}

public enum GoalType {
  [pbr::OriginalName("UNDEFINED_GOAL_TYPE")] UndefinedGoalType = 0,
  [pbr::OriginalName("EGGS_LAID")] EggsLaid = 1,
  [pbr::OriginalName("UNKNOWN_GOAL_TYPE")] UnknownGoalType = 100,
}

public enum RewardType {
  [pbr::OriginalName("UNDEFINED_REWARD_TYPE")] UndefinedRewardType = 0,
  [pbr::OriginalName("CASH")] Cash = 1,
  [pbr::OriginalName("GOLDEN_EGGS")] GoldenEggs = 2,
  [pbr::OriginalName("SOUL_EGGS")] SoulEggs = 3,
  [pbr::OriginalName("EGGS_OF_PROPHECY")] EggsOfProphecy = 4,
  [pbr::OriginalName("EPIC_RESEARCH_ITEM")] EpicResearchItem = 5,
  [pbr::OriginalName("PIGGY_FILL")] PiggyFill = 6,
  [pbr::OriginalName("PIGGY_MULTIPLIER")] PiggyMultiplier = 7,
  [pbr::OriginalName("PIGGY_LEVEL_BUMP")] PiggyLevelBump = 8,
  [pbr::OriginalName("BOOST")] Boost = 9,
  [pbr::OriginalName("BOOST_TOKEN")] BoostToken = 10,
  [pbr::OriginalName("UNKNOWN_REWARD_TYPE")] UnknownRewardType = 100,
}

public enum HabLevel {
  [pbr::OriginalName("COOP")] Coop = 0,
  [pbr::OriginalName("SHACK")] Shack = 1,
  [pbr::OriginalName("SUPER_SHACK")] SuperShack = 2,
  [pbr::OriginalName("SHORT_HOUSE")] ShortHouse = 3,
  [pbr::OriginalName("THE_STANDARD")] TheStandard = 4,
  [pbr::OriginalName("LONG_HOUSE")] LongHouse = 5,
  [pbr::OriginalName("DOUBLE_DECKER")] DoubleDecker = 6,
  [pbr::OriginalName("WAREHOUSE")] Warehouse = 7,
  [pbr::OriginalName("CENTER")] Center = 8,
  [pbr::OriginalName("BUNKER")] Bunker = 9,
  [pbr::OriginalName("EGGKEA")] Eggkea = 10,
  [pbr::OriginalName("HAB_1000")] Hab1000 = 11,
  [pbr::OriginalName("HANGAR")] Hangar = 12,
  [pbr::OriginalName("TOWER")] Tower = 13,
  [pbr::OriginalName("HAB_10_000")] Hab10000 = 14,
  [pbr::OriginalName("EGGTOPIA")] Eggtopia = 15,
  [pbr::OriginalName("MONOLITH")] Monolith = 16,
  [pbr::OriginalName("PLANET_PORTAL")] PlanetPortal = 17,
  [pbr::OriginalName("CHICKEN_UNIVERSE")] ChickenUniverse = 18,
  [pbr::OriginalName("NO_HAB")] NoHab = 19,
}

public enum VehicleType {
  [pbr::OriginalName("TRIKE")] Trike = 0,
  [pbr::OriginalName("TRANSIT")] Transit = 1,
  [pbr::OriginalName("PICKUP")] Pickup = 2,
  [pbr::OriginalName("VEHICLE_10_FOOT")] Vehicle10Foot = 3,
  [pbr::OriginalName("VEHICLE_24_FOOT")] Vehicle24Foot = 4,
  [pbr::OriginalName("SEMI")] Semi = 5,
  [pbr::OriginalName("DOUBLE_SEMI")] DoubleSemi = 6,
  [pbr::OriginalName("FUTURE_SEMI")] FutureSemi = 7,
  [pbr::OriginalName("MEGA_SEMI")] MegaSemi = 8,
  [pbr::OriginalName("HOVER_SEMI")] HoverSemi = 9,
  [pbr::OriginalName("QUANTUM_TRANSPORTER")] QuantumTransporter = 10,
  [pbr::OriginalName("HYPERLOOP_TRAIN")] HyperloopTrain = 11,
}

public enum TrophyLevel {
  [pbr::OriginalName("NO_TROPHY")] NoTrophy = 0,
  [pbr::OriginalName("BRONZE")] Bronze = 1,
  [pbr::OriginalName("SILVER")] Silver = 2,
  [pbr::OriginalName("GOLD")] Gold = 3,
  [pbr::OriginalName("PLATINUM")] Platinum = 4,
  [pbr::OriginalName("DIAMOND")] Diamond = 5,
}

public enum League {
  [pbr::OriginalName("NORMAL")] Normal = 0,
  [pbr::OriginalName("ELITE")] Elite = 1,
}

#endregion

#region Messages
public sealed partial class Backup : pb::IMessage<Backup>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Backup> _parser = new pb::MessageParser<Backup>(() => new Backup());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Backup> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Backup() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Backup(Backup other) : this() {
    userId_ = other.userId_;
    userName_ = other.userName_;
    approxTime_ = other.approxTime_;
    settings_ = other.settings_ != null ? other.settings_.Clone() : null;
    tutorial_ = other.tutorial_ != null ? other.tutorial_.Clone() : null;
    stats_ = other.stats_ != null ? other.stats_.Clone() : null;
    game_ = other.game_ != null ? other.game_.Clone() : null;
    missions_ = other.missions_ != null ? other.missions_.Clone() : null;
    misc_ = other.misc_ != null ? other.misc_.Clone() : null;
    farms_ = other.farms_.Clone();
    contracts_ = other.contracts_ != null ? other.contracts_.Clone() : null;
    artifactsStatus_ = other.artifactsStatus_ != null ? other.artifactsStatus_.Clone() : null;
    artifactsDatabase_ = other.artifactsDatabase_ != null ? other.artifactsDatabase_.Clone() : null;
    gameServicesId_ = other.gameServicesId_;
    deviceId_ = other.deviceId_;
    eiUserId_ = other.eiUserId_;
    forceOfferBackup_ = other.forceOfferBackup_;
    clientVersion_ = other.clientVersion_;
    forceBackup_ = other.forceBackup_;
    checksum_ = other.checksum_;
    signature_ = other.signature_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Backup Clone() {
    return new Backup(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_name" field.</summary>
  public const int UserNameFieldNumber = 2;
  private string userName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserName {
    get { return userName_; }
    set {
      userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "approx_time" field.</summary>
  public const int ApproxTimeFieldNumber = 3;
  private double approxTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double ApproxTime {
    get { return approxTime_; }
    set {
      approxTime_ = value;
    }
  }

  /// <summary>Field number for the "settings" field.</summary>
  public const int SettingsFieldNumber = 4;
  private global::Backup.Types.Settings settings_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Backup.Types.Settings Settings {
    get { return settings_; }
    set {
      settings_ = value;
    }
  }

  /// <summary>Field number for the "tutorial" field.</summary>
  public const int TutorialFieldNumber = 5;
  private global::Backup.Types.Tutorial tutorial_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Backup.Types.Tutorial Tutorial {
    get { return tutorial_; }
    set {
      tutorial_ = value;
    }
  }

  /// <summary>Field number for the "stats" field.</summary>
  public const int StatsFieldNumber = 6;
  private global::Backup.Types.Stats stats_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Backup.Types.Stats Stats {
    get { return stats_; }
    set {
      stats_ = value;
    }
  }

  /// <summary>Field number for the "game" field.</summary>
  public const int GameFieldNumber = 7;
  private global::Backup.Types.Game game_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Backup.Types.Game Game {
    get { return game_; }
    set {
      game_ = value;
    }
  }

  /// <summary>Field number for the "missions" field.</summary>
  public const int MissionsFieldNumber = 9;
  private global::Backup.Types.Missions missions_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Backup.Types.Missions Missions {
    get { return missions_; }
    set {
      missions_ = value;
    }
  }

  /// <summary>Field number for the "misc" field.</summary>
  public const int MiscFieldNumber = 10;
  private global::Backup.Types.Misc misc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Backup.Types.Misc Misc {
    get { return misc_; }
    set {
      misc_ = value;
    }
  }

  /// <summary>Field number for the "farms" field.</summary>
  public const int FarmsFieldNumber = 12;
  private static readonly pb::FieldCodec<global::Backup.Types.Farm> _repeated_farms_codec
      = pb::FieldCodec.ForMessage(98, global::Backup.Types.Farm.Parser);
  private readonly pbc::RepeatedField<global::Backup.Types.Farm> farms_ = new pbc::RepeatedField<global::Backup.Types.Farm>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Backup.Types.Farm> Farms {
    get { return farms_; }
  }

  /// <summary>Field number for the "contracts" field.</summary>
  public const int ContractsFieldNumber = 13;
  private global::MyContracts contracts_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MyContracts Contracts {
    get { return contracts_; }
    set {
      contracts_ = value;
    }
  }

  /// <summary>Field number for the "artifacts_status" field.</summary>
  public const int ArtifactsStatusFieldNumber = 14;
  private global::Backup.Types.ArtifactsStatus artifactsStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Backup.Types.ArtifactsStatus ArtifactsStatus {
    get { return artifactsStatus_; }
    set {
      artifactsStatus_ = value;
    }
  }

  /// <summary>Field number for the "artifacts_database" field.</summary>
  public const int ArtifactsDatabaseFieldNumber = 15;
  private global::ArtifactsDatabase artifactsDatabase_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ArtifactsDatabase ArtifactsDatabase {
    get { return artifactsDatabase_; }
    set {
      artifactsDatabase_ = value;
    }
  }

  /// <summary>Field number for the "game_services_id" field.</summary>
  public const int GameServicesIdFieldNumber = 16;
  private string gameServicesId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameServicesId {
    get { return gameServicesId_; }
    set {
      gameServicesId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "device_id" field.</summary>
  public const int DeviceIdFieldNumber = 17;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ei_user_id" field.</summary>
  public const int EiUserIdFieldNumber = 18;
  private string eiUserId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EiUserId {
    get { return eiUserId_; }
    set {
      eiUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "force_offer_backup" field.</summary>
  public const int ForceOfferBackupFieldNumber = 20;
  private bool forceOfferBackup_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ForceOfferBackup {
    get { return forceOfferBackup_; }
    set {
      forceOfferBackup_ = value;
    }
  }

  /// <summary>Field number for the "client_version" field.</summary>
  public const int ClientVersionFieldNumber = 21;
  private uint clientVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClientVersion {
    get { return clientVersion_; }
    set {
      clientVersion_ = value;
    }
  }

  /// <summary>Field number for the "force_backup" field.</summary>
  public const int ForceBackupFieldNumber = 22;
  private bool forceBackup_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ForceBackup {
    get { return forceBackup_; }
    set {
      forceBackup_ = value;
    }
  }

  /// <summary>Field number for the "checksum" field.</summary>
  public const int ChecksumFieldNumber = 100;
  private ulong checksum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Checksum {
    get { return checksum_; }
    set {
      checksum_ = value;
    }
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 101;
  private string signature_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signature {
    get { return signature_; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Backup);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Backup other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (UserName != other.UserName) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ApproxTime, other.ApproxTime)) return false;
    if (!object.Equals(Settings, other.Settings)) return false;
    if (!object.Equals(Tutorial, other.Tutorial)) return false;
    if (!object.Equals(Stats, other.Stats)) return false;
    if (!object.Equals(Game, other.Game)) return false;
    if (!object.Equals(Missions, other.Missions)) return false;
    if (!object.Equals(Misc, other.Misc)) return false;
    if(!farms_.Equals(other.farms_)) return false;
    if (!object.Equals(Contracts, other.Contracts)) return false;
    if (!object.Equals(ArtifactsStatus, other.ArtifactsStatus)) return false;
    if (!object.Equals(ArtifactsDatabase, other.ArtifactsDatabase)) return false;
    if (GameServicesId != other.GameServicesId) return false;
    if (DeviceId != other.DeviceId) return false;
    if (EiUserId != other.EiUserId) return false;
    if (ForceOfferBackup != other.ForceOfferBackup) return false;
    if (ClientVersion != other.ClientVersion) return false;
    if (ForceBackup != other.ForceBackup) return false;
    if (Checksum != other.Checksum) return false;
    if (Signature != other.Signature) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (UserName.Length != 0) hash ^= UserName.GetHashCode();
    if (ApproxTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ApproxTime);
    if (settings_ != null) hash ^= Settings.GetHashCode();
    if (tutorial_ != null) hash ^= Tutorial.GetHashCode();
    if (stats_ != null) hash ^= Stats.GetHashCode();
    if (game_ != null) hash ^= Game.GetHashCode();
    if (missions_ != null) hash ^= Missions.GetHashCode();
    if (misc_ != null) hash ^= Misc.GetHashCode();
    hash ^= farms_.GetHashCode();
    if (contracts_ != null) hash ^= Contracts.GetHashCode();
    if (artifactsStatus_ != null) hash ^= ArtifactsStatus.GetHashCode();
    if (artifactsDatabase_ != null) hash ^= ArtifactsDatabase.GetHashCode();
    if (GameServicesId.Length != 0) hash ^= GameServicesId.GetHashCode();
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (EiUserId.Length != 0) hash ^= EiUserId.GetHashCode();
    if (ForceOfferBackup != false) hash ^= ForceOfferBackup.GetHashCode();
    if (ClientVersion != 0) hash ^= ClientVersion.GetHashCode();
    if (ForceBackup != false) hash ^= ForceBackup.GetHashCode();
    if (Checksum != 0UL) hash ^= Checksum.GetHashCode();
    if (Signature.Length != 0) hash ^= Signature.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (UserName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserName);
    }
    if (ApproxTime != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(ApproxTime);
    }
    if (settings_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Settings);
    }
    if (tutorial_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Tutorial);
    }
    if (stats_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Stats);
    }
    if (game_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Game);
    }
    if (missions_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Missions);
    }
    if (misc_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(Misc);
    }
    farms_.WriteTo(output, _repeated_farms_codec);
    if (contracts_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(Contracts);
    }
    if (artifactsStatus_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(ArtifactsStatus);
    }
    if (artifactsDatabase_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(ArtifactsDatabase);
    }
    if (GameServicesId.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(GameServicesId);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(138, 1);
      output.WriteString(DeviceId);
    }
    if (EiUserId.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(EiUserId);
    }
    if (ForceOfferBackup != false) {
      output.WriteRawTag(160, 1);
      output.WriteBool(ForceOfferBackup);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(ClientVersion);
    }
    if (ForceBackup != false) {
      output.WriteRawTag(176, 1);
      output.WriteBool(ForceBackup);
    }
    if (Checksum != 0UL) {
      output.WriteRawTag(160, 6);
      output.WriteUInt64(Checksum);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(170, 6);
      output.WriteString(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (UserName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserName);
    }
    if (ApproxTime != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(ApproxTime);
    }
    if (settings_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Settings);
    }
    if (tutorial_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Tutorial);
    }
    if (stats_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Stats);
    }
    if (game_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Game);
    }
    if (missions_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Missions);
    }
    if (misc_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(Misc);
    }
    farms_.WriteTo(ref output, _repeated_farms_codec);
    if (contracts_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(Contracts);
    }
    if (artifactsStatus_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(ArtifactsStatus);
    }
    if (artifactsDatabase_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(ArtifactsDatabase);
    }
    if (GameServicesId.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(GameServicesId);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(138, 1);
      output.WriteString(DeviceId);
    }
    if (EiUserId.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(EiUserId);
    }
    if (ForceOfferBackup != false) {
      output.WriteRawTag(160, 1);
      output.WriteBool(ForceOfferBackup);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(ClientVersion);
    }
    if (ForceBackup != false) {
      output.WriteRawTag(176, 1);
      output.WriteBool(ForceBackup);
    }
    if (Checksum != 0UL) {
      output.WriteRawTag(160, 6);
      output.WriteUInt64(Checksum);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(170, 6);
      output.WriteString(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (UserName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
    }
    if (ApproxTime != 0D) {
      size += 1 + 8;
    }
    if (settings_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
    }
    if (tutorial_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tutorial);
    }
    if (stats_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
    }
    if (game_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Game);
    }
    if (missions_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Missions);
    }
    if (misc_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Misc);
    }
    size += farms_.CalculateSize(_repeated_farms_codec);
    if (contracts_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contracts);
    }
    if (artifactsStatus_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactsStatus);
    }
    if (artifactsDatabase_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactsDatabase);
    }
    if (GameServicesId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(GameServicesId);
    }
    if (DeviceId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (EiUserId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(EiUserId);
    }
    if (ForceOfferBackup != false) {
      size += 2 + 1;
    }
    if (ClientVersion != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ClientVersion);
    }
    if (ForceBackup != false) {
      size += 2 + 1;
    }
    if (Checksum != 0UL) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Checksum);
    }
    if (Signature.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Signature);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Backup other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.UserName.Length != 0) {
      UserName = other.UserName;
    }
    if (other.ApproxTime != 0D) {
      ApproxTime = other.ApproxTime;
    }
    if (other.settings_ != null) {
      if (settings_ == null) {
        Settings = new global::Backup.Types.Settings();
      }
      Settings.MergeFrom(other.Settings);
    }
    if (other.tutorial_ != null) {
      if (tutorial_ == null) {
        Tutorial = new global::Backup.Types.Tutorial();
      }
      Tutorial.MergeFrom(other.Tutorial);
    }
    if (other.stats_ != null) {
      if (stats_ == null) {
        Stats = new global::Backup.Types.Stats();
      }
      Stats.MergeFrom(other.Stats);
    }
    if (other.game_ != null) {
      if (game_ == null) {
        Game = new global::Backup.Types.Game();
      }
      Game.MergeFrom(other.Game);
    }
    if (other.missions_ != null) {
      if (missions_ == null) {
        Missions = new global::Backup.Types.Missions();
      }
      Missions.MergeFrom(other.Missions);
    }
    if (other.misc_ != null) {
      if (misc_ == null) {
        Misc = new global::Backup.Types.Misc();
      }
      Misc.MergeFrom(other.Misc);
    }
    farms_.Add(other.farms_);
    if (other.contracts_ != null) {
      if (contracts_ == null) {
        Contracts = new global::MyContracts();
      }
      Contracts.MergeFrom(other.Contracts);
    }
    if (other.artifactsStatus_ != null) {
      if (artifactsStatus_ == null) {
        ArtifactsStatus = new global::Backup.Types.ArtifactsStatus();
      }
      ArtifactsStatus.MergeFrom(other.ArtifactsStatus);
    }
    if (other.artifactsDatabase_ != null) {
      if (artifactsDatabase_ == null) {
        ArtifactsDatabase = new global::ArtifactsDatabase();
      }
      ArtifactsDatabase.MergeFrom(other.ArtifactsDatabase);
    }
    if (other.GameServicesId.Length != 0) {
      GameServicesId = other.GameServicesId;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.EiUserId.Length != 0) {
      EiUserId = other.EiUserId;
    }
    if (other.ForceOfferBackup != false) {
      ForceOfferBackup = other.ForceOfferBackup;
    }
    if (other.ClientVersion != 0) {
      ClientVersion = other.ClientVersion;
    }
    if (other.ForceBackup != false) {
      ForceBackup = other.ForceBackup;
    }
    if (other.Checksum != 0UL) {
      Checksum = other.Checksum;
    }
    if (other.Signature.Length != 0) {
      Signature = other.Signature;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          UserName = input.ReadString();
          break;
        }
        case 25: {
          ApproxTime = input.ReadDouble();
          break;
        }
        case 34: {
          if (settings_ == null) {
            Settings = new global::Backup.Types.Settings();
          }
          input.ReadMessage(Settings);
          break;
        }
        case 42: {
          if (tutorial_ == null) {
            Tutorial = new global::Backup.Types.Tutorial();
          }
          input.ReadMessage(Tutorial);
          break;
        }
        case 50: {
          if (stats_ == null) {
            Stats = new global::Backup.Types.Stats();
          }
          input.ReadMessage(Stats);
          break;
        }
        case 58: {
          if (game_ == null) {
            Game = new global::Backup.Types.Game();
          }
          input.ReadMessage(Game);
          break;
        }
        case 74: {
          if (missions_ == null) {
            Missions = new global::Backup.Types.Missions();
          }
          input.ReadMessage(Missions);
          break;
        }
        case 82: {
          if (misc_ == null) {
            Misc = new global::Backup.Types.Misc();
          }
          input.ReadMessage(Misc);
          break;
        }
        case 98: {
          farms_.AddEntriesFrom(input, _repeated_farms_codec);
          break;
        }
        case 106: {
          if (contracts_ == null) {
            Contracts = new global::MyContracts();
          }
          input.ReadMessage(Contracts);
          break;
        }
        case 114: {
          if (artifactsStatus_ == null) {
            ArtifactsStatus = new global::Backup.Types.ArtifactsStatus();
          }
          input.ReadMessage(ArtifactsStatus);
          break;
        }
        case 122: {
          if (artifactsDatabase_ == null) {
            ArtifactsDatabase = new global::ArtifactsDatabase();
          }
          input.ReadMessage(ArtifactsDatabase);
          break;
        }
        case 130: {
          GameServicesId = input.ReadString();
          break;
        }
        case 138: {
          DeviceId = input.ReadString();
          break;
        }
        case 146: {
          EiUserId = input.ReadString();
          break;
        }
        case 160: {
          ForceOfferBackup = input.ReadBool();
          break;
        }
        case 168: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 176: {
          ForceBackup = input.ReadBool();
          break;
        }
        case 800: {
          Checksum = input.ReadUInt64();
          break;
        }
        case 810: {
          Signature = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          UserName = input.ReadString();
          break;
        }
        case 25: {
          ApproxTime = input.ReadDouble();
          break;
        }
        case 34: {
          if (settings_ == null) {
            Settings = new global::Backup.Types.Settings();
          }
          input.ReadMessage(Settings);
          break;
        }
        case 42: {
          if (tutorial_ == null) {
            Tutorial = new global::Backup.Types.Tutorial();
          }
          input.ReadMessage(Tutorial);
          break;
        }
        case 50: {
          if (stats_ == null) {
            Stats = new global::Backup.Types.Stats();
          }
          input.ReadMessage(Stats);
          break;
        }
        case 58: {
          if (game_ == null) {
            Game = new global::Backup.Types.Game();
          }
          input.ReadMessage(Game);
          break;
        }
        case 74: {
          if (missions_ == null) {
            Missions = new global::Backup.Types.Missions();
          }
          input.ReadMessage(Missions);
          break;
        }
        case 82: {
          if (misc_ == null) {
            Misc = new global::Backup.Types.Misc();
          }
          input.ReadMessage(Misc);
          break;
        }
        case 98: {
          farms_.AddEntriesFrom(ref input, _repeated_farms_codec);
          break;
        }
        case 106: {
          if (contracts_ == null) {
            Contracts = new global::MyContracts();
          }
          input.ReadMessage(Contracts);
          break;
        }
        case 114: {
          if (artifactsStatus_ == null) {
            ArtifactsStatus = new global::Backup.Types.ArtifactsStatus();
          }
          input.ReadMessage(ArtifactsStatus);
          break;
        }
        case 122: {
          if (artifactsDatabase_ == null) {
            ArtifactsDatabase = new global::ArtifactsDatabase();
          }
          input.ReadMessage(ArtifactsDatabase);
          break;
        }
        case 130: {
          GameServicesId = input.ReadString();
          break;
        }
        case 138: {
          DeviceId = input.ReadString();
          break;
        }
        case 146: {
          EiUserId = input.ReadString();
          break;
        }
        case 160: {
          ForceOfferBackup = input.ReadBool();
          break;
        }
        case 168: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 176: {
          ForceBackup = input.ReadBool();
          break;
        }
        case 800: {
          Checksum = input.ReadUInt64();
          break;
        }
        case 810: {
          Signature = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the Backup message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class Settings : pb::IMessage<Settings>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Settings> _parser = new pb::MessageParser<Settings>(() => new Settings());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Settings> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Settings() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Settings(Settings other) : this() {
        sfx_ = other.sfx_;
        music_ = other.music_;
        lowBatteryMode_ = other.lowBatteryMode_;
        lowPerformanceMode_ = other.lowPerformanceMode_;
        notificationsQueried_ = other.notificationsQueried_;
        notificationsEnabled_ = other.notificationsEnabled_;
        coppaQueried_ = other.coppaQueried_;
        coppaRestricted_ = other.coppaRestricted_;
        forceTouchChickenBtn_ = other.forceTouchChickenBtn_;
        lowPerformance_ = other.lowPerformance_;
        notifyDailyGift_ = other.notifyDailyGift_;
        gdprConsentQueried_ = other.gdprConsentQueried_;
        gdprConsentGiven_ = other.gdprConsentGiven_;
        userAdsEnabled_ = other.userAdsEnabled_;
        userCloudEnabled_ = other.userCloudEnabled_;
        gdprAgeRestricted_ = other.gdprAgeRestricted_;
        lastDayAgeQueried_ = other.lastDayAgeQueried_;
        ageQueried_ = other.ageQueried_;
        ageRestricted_ = other.ageRestricted_;
        dataCollectionConsentQueried_ = other.dataCollectionConsentQueried_;
        dataCollectionConsentGiven_ = other.dataCollectionConsentGiven_;
        userAnalyticsEnabled_ = other.userAnalyticsEnabled_;
        userPersonalizedAdsEnabled_ = other.userPersonalizedAdsEnabled_;
        lastBackupTime_ = other.lastBackupTime_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Settings Clone() {
        return new Settings(this);
      }

      /// <summary>Field number for the "sfx" field.</summary>
      public const int SfxFieldNumber = 1;
      private bool sfx_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Sfx {
        get { return sfx_; }
        set {
          sfx_ = value;
        }
      }

      /// <summary>Field number for the "music" field.</summary>
      public const int MusicFieldNumber = 2;
      private bool music_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Music {
        get { return music_; }
        set {
          music_ = value;
        }
      }

      /// <summary>Field number for the "low_battery_mode" field.</summary>
      public const int LowBatteryModeFieldNumber = 3;
      private bool lowBatteryMode_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool LowBatteryMode {
        get { return lowBatteryMode_; }
        set {
          lowBatteryMode_ = value;
        }
      }

      /// <summary>Field number for the "low_performance_mode" field.</summary>
      public const int LowPerformanceModeFieldNumber = 4;
      private bool lowPerformanceMode_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool LowPerformanceMode {
        get { return lowPerformanceMode_; }
        set {
          lowPerformanceMode_ = value;
        }
      }

      /// <summary>Field number for the "notifications_queried" field.</summary>
      public const int NotificationsQueriedFieldNumber = 5;
      private bool notificationsQueried_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool NotificationsQueried {
        get { return notificationsQueried_; }
        set {
          notificationsQueried_ = value;
        }
      }

      /// <summary>Field number for the "notifications_enabled" field.</summary>
      public const int NotificationsEnabledFieldNumber = 6;
      private bool notificationsEnabled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool NotificationsEnabled {
        get { return notificationsEnabled_; }
        set {
          notificationsEnabled_ = value;
        }
      }

      /// <summary>Field number for the "coppa_queried" field.</summary>
      public const int CoppaQueriedFieldNumber = 7;
      private bool coppaQueried_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool CoppaQueried {
        get { return coppaQueried_; }
        set {
          coppaQueried_ = value;
        }
      }

      /// <summary>Field number for the "coppa_restricted" field.</summary>
      public const int CoppaRestrictedFieldNumber = 8;
      private bool coppaRestricted_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool CoppaRestricted {
        get { return coppaRestricted_; }
        set {
          coppaRestricted_ = value;
        }
      }

      /// <summary>Field number for the "force_touch_chicken_btn" field.</summary>
      public const int ForceTouchChickenBtnFieldNumber = 9;
      private bool forceTouchChickenBtn_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool ForceTouchChickenBtn {
        get { return forceTouchChickenBtn_; }
        set {
          forceTouchChickenBtn_ = value;
        }
      }

      /// <summary>Field number for the "low_performance" field.</summary>
      public const int LowPerformanceFieldNumber = 10;
      private bool lowPerformance_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool LowPerformance {
        get { return lowPerformance_; }
        set {
          lowPerformance_ = value;
        }
      }

      /// <summary>Field number for the "notify_daily_gift" field.</summary>
      public const int NotifyDailyGiftFieldNumber = 11;
      private bool notifyDailyGift_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool NotifyDailyGift {
        get { return notifyDailyGift_; }
        set {
          notifyDailyGift_ = value;
        }
      }

      /// <summary>Field number for the "gdpr_consent_queried" field.</summary>
      public const int GdprConsentQueriedFieldNumber = 12;
      private bool gdprConsentQueried_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool GdprConsentQueried {
        get { return gdprConsentQueried_; }
        set {
          gdprConsentQueried_ = value;
        }
      }

      /// <summary>Field number for the "gdpr_consent_given" field.</summary>
      public const int GdprConsentGivenFieldNumber = 13;
      private bool gdprConsentGiven_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool GdprConsentGiven {
        get { return gdprConsentGiven_; }
        set {
          gdprConsentGiven_ = value;
        }
      }

      /// <summary>Field number for the "user_ads_enabled" field.</summary>
      public const int UserAdsEnabledFieldNumber = 14;
      private bool userAdsEnabled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool UserAdsEnabled {
        get { return userAdsEnabled_; }
        set {
          userAdsEnabled_ = value;
        }
      }

      /// <summary>Field number for the "user_cloud_enabled" field.</summary>
      public const int UserCloudEnabledFieldNumber = 15;
      private bool userCloudEnabled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool UserCloudEnabled {
        get { return userCloudEnabled_; }
        set {
          userCloudEnabled_ = value;
        }
      }

      /// <summary>Field number for the "gdpr_age_restricted" field.</summary>
      public const int GdprAgeRestrictedFieldNumber = 16;
      private bool gdprAgeRestricted_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool GdprAgeRestricted {
        get { return gdprAgeRestricted_; }
        set {
          gdprAgeRestricted_ = value;
        }
      }

      /// <summary>Field number for the "last_day_age_queried" field.</summary>
      public const int LastDayAgeQueriedFieldNumber = 17;
      private uint lastDayAgeQueried_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint LastDayAgeQueried {
        get { return lastDayAgeQueried_; }
        set {
          lastDayAgeQueried_ = value;
        }
      }

      /// <summary>Field number for the "age_queried" field.</summary>
      public const int AgeQueriedFieldNumber = 18;
      private bool ageQueried_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool AgeQueried {
        get { return ageQueried_; }
        set {
          ageQueried_ = value;
        }
      }

      /// <summary>Field number for the "age_restricted" field.</summary>
      public const int AgeRestrictedFieldNumber = 19;
      private bool ageRestricted_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool AgeRestricted {
        get { return ageRestricted_; }
        set {
          ageRestricted_ = value;
        }
      }

      /// <summary>Field number for the "data_collection_consent_queried" field.</summary>
      public const int DataCollectionConsentQueriedFieldNumber = 20;
      private bool dataCollectionConsentQueried_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool DataCollectionConsentQueried {
        get { return dataCollectionConsentQueried_; }
        set {
          dataCollectionConsentQueried_ = value;
        }
      }

      /// <summary>Field number for the "data_collection_consent_given" field.</summary>
      public const int DataCollectionConsentGivenFieldNumber = 21;
      private bool dataCollectionConsentGiven_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool DataCollectionConsentGiven {
        get { return dataCollectionConsentGiven_; }
        set {
          dataCollectionConsentGiven_ = value;
        }
      }

      /// <summary>Field number for the "user_analytics_enabled" field.</summary>
      public const int UserAnalyticsEnabledFieldNumber = 22;
      private bool userAnalyticsEnabled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool UserAnalyticsEnabled {
        get { return userAnalyticsEnabled_; }
        set {
          userAnalyticsEnabled_ = value;
        }
      }

      /// <summary>Field number for the "user_personalized_ads_enabled" field.</summary>
      public const int UserPersonalizedAdsEnabledFieldNumber = 23;
      private bool userPersonalizedAdsEnabled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool UserPersonalizedAdsEnabled {
        get { return userPersonalizedAdsEnabled_; }
        set {
          userPersonalizedAdsEnabled_ = value;
        }
      }

      /// <summary>Field number for the "last_backup_time" field.</summary>
      public const int LastBackupTimeFieldNumber = 24;
      private double lastBackupTime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double LastBackupTime {
        get { return lastBackupTime_; }
        set {
          lastBackupTime_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Settings);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Settings other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Sfx != other.Sfx) return false;
        if (Music != other.Music) return false;
        if (LowBatteryMode != other.LowBatteryMode) return false;
        if (LowPerformanceMode != other.LowPerformanceMode) return false;
        if (NotificationsQueried != other.NotificationsQueried) return false;
        if (NotificationsEnabled != other.NotificationsEnabled) return false;
        if (CoppaQueried != other.CoppaQueried) return false;
        if (CoppaRestricted != other.CoppaRestricted) return false;
        if (ForceTouchChickenBtn != other.ForceTouchChickenBtn) return false;
        if (LowPerformance != other.LowPerformance) return false;
        if (NotifyDailyGift != other.NotifyDailyGift) return false;
        if (GdprConsentQueried != other.GdprConsentQueried) return false;
        if (GdprConsentGiven != other.GdprConsentGiven) return false;
        if (UserAdsEnabled != other.UserAdsEnabled) return false;
        if (UserCloudEnabled != other.UserCloudEnabled) return false;
        if (GdprAgeRestricted != other.GdprAgeRestricted) return false;
        if (LastDayAgeQueried != other.LastDayAgeQueried) return false;
        if (AgeQueried != other.AgeQueried) return false;
        if (AgeRestricted != other.AgeRestricted) return false;
        if (DataCollectionConsentQueried != other.DataCollectionConsentQueried) return false;
        if (DataCollectionConsentGiven != other.DataCollectionConsentGiven) return false;
        if (UserAnalyticsEnabled != other.UserAnalyticsEnabled) return false;
        if (UserPersonalizedAdsEnabled != other.UserPersonalizedAdsEnabled) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastBackupTime, other.LastBackupTime)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Sfx != false) hash ^= Sfx.GetHashCode();
        if (Music != false) hash ^= Music.GetHashCode();
        if (LowBatteryMode != false) hash ^= LowBatteryMode.GetHashCode();
        if (LowPerformanceMode != false) hash ^= LowPerformanceMode.GetHashCode();
        if (NotificationsQueried != false) hash ^= NotificationsQueried.GetHashCode();
        if (NotificationsEnabled != false) hash ^= NotificationsEnabled.GetHashCode();
        if (CoppaQueried != false) hash ^= CoppaQueried.GetHashCode();
        if (CoppaRestricted != false) hash ^= CoppaRestricted.GetHashCode();
        if (ForceTouchChickenBtn != false) hash ^= ForceTouchChickenBtn.GetHashCode();
        if (LowPerformance != false) hash ^= LowPerformance.GetHashCode();
        if (NotifyDailyGift != false) hash ^= NotifyDailyGift.GetHashCode();
        if (GdprConsentQueried != false) hash ^= GdprConsentQueried.GetHashCode();
        if (GdprConsentGiven != false) hash ^= GdprConsentGiven.GetHashCode();
        if (UserAdsEnabled != false) hash ^= UserAdsEnabled.GetHashCode();
        if (UserCloudEnabled != false) hash ^= UserCloudEnabled.GetHashCode();
        if (GdprAgeRestricted != false) hash ^= GdprAgeRestricted.GetHashCode();
        if (LastDayAgeQueried != 0) hash ^= LastDayAgeQueried.GetHashCode();
        if (AgeQueried != false) hash ^= AgeQueried.GetHashCode();
        if (AgeRestricted != false) hash ^= AgeRestricted.GetHashCode();
        if (DataCollectionConsentQueried != false) hash ^= DataCollectionConsentQueried.GetHashCode();
        if (DataCollectionConsentGiven != false) hash ^= DataCollectionConsentGiven.GetHashCode();
        if (UserAnalyticsEnabled != false) hash ^= UserAnalyticsEnabled.GetHashCode();
        if (UserPersonalizedAdsEnabled != false) hash ^= UserPersonalizedAdsEnabled.GetHashCode();
        if (LastBackupTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastBackupTime);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Sfx != false) {
          output.WriteRawTag(8);
          output.WriteBool(Sfx);
        }
        if (Music != false) {
          output.WriteRawTag(16);
          output.WriteBool(Music);
        }
        if (LowBatteryMode != false) {
          output.WriteRawTag(24);
          output.WriteBool(LowBatteryMode);
        }
        if (LowPerformanceMode != false) {
          output.WriteRawTag(32);
          output.WriteBool(LowPerformanceMode);
        }
        if (NotificationsQueried != false) {
          output.WriteRawTag(40);
          output.WriteBool(NotificationsQueried);
        }
        if (NotificationsEnabled != false) {
          output.WriteRawTag(48);
          output.WriteBool(NotificationsEnabled);
        }
        if (CoppaQueried != false) {
          output.WriteRawTag(56);
          output.WriteBool(CoppaQueried);
        }
        if (CoppaRestricted != false) {
          output.WriteRawTag(64);
          output.WriteBool(CoppaRestricted);
        }
        if (ForceTouchChickenBtn != false) {
          output.WriteRawTag(72);
          output.WriteBool(ForceTouchChickenBtn);
        }
        if (LowPerformance != false) {
          output.WriteRawTag(80);
          output.WriteBool(LowPerformance);
        }
        if (NotifyDailyGift != false) {
          output.WriteRawTag(88);
          output.WriteBool(NotifyDailyGift);
        }
        if (GdprConsentQueried != false) {
          output.WriteRawTag(96);
          output.WriteBool(GdprConsentQueried);
        }
        if (GdprConsentGiven != false) {
          output.WriteRawTag(104);
          output.WriteBool(GdprConsentGiven);
        }
        if (UserAdsEnabled != false) {
          output.WriteRawTag(112);
          output.WriteBool(UserAdsEnabled);
        }
        if (UserCloudEnabled != false) {
          output.WriteRawTag(120);
          output.WriteBool(UserCloudEnabled);
        }
        if (GdprAgeRestricted != false) {
          output.WriteRawTag(128, 1);
          output.WriteBool(GdprAgeRestricted);
        }
        if (LastDayAgeQueried != 0) {
          output.WriteRawTag(136, 1);
          output.WriteUInt32(LastDayAgeQueried);
        }
        if (AgeQueried != false) {
          output.WriteRawTag(144, 1);
          output.WriteBool(AgeQueried);
        }
        if (AgeRestricted != false) {
          output.WriteRawTag(152, 1);
          output.WriteBool(AgeRestricted);
        }
        if (DataCollectionConsentQueried != false) {
          output.WriteRawTag(160, 1);
          output.WriteBool(DataCollectionConsentQueried);
        }
        if (DataCollectionConsentGiven != false) {
          output.WriteRawTag(168, 1);
          output.WriteBool(DataCollectionConsentGiven);
        }
        if (UserAnalyticsEnabled != false) {
          output.WriteRawTag(176, 1);
          output.WriteBool(UserAnalyticsEnabled);
        }
        if (UserPersonalizedAdsEnabled != false) {
          output.WriteRawTag(184, 1);
          output.WriteBool(UserPersonalizedAdsEnabled);
        }
        if (LastBackupTime != 0D) {
          output.WriteRawTag(193, 1);
          output.WriteDouble(LastBackupTime);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Sfx != false) {
          output.WriteRawTag(8);
          output.WriteBool(Sfx);
        }
        if (Music != false) {
          output.WriteRawTag(16);
          output.WriteBool(Music);
        }
        if (LowBatteryMode != false) {
          output.WriteRawTag(24);
          output.WriteBool(LowBatteryMode);
        }
        if (LowPerformanceMode != false) {
          output.WriteRawTag(32);
          output.WriteBool(LowPerformanceMode);
        }
        if (NotificationsQueried != false) {
          output.WriteRawTag(40);
          output.WriteBool(NotificationsQueried);
        }
        if (NotificationsEnabled != false) {
          output.WriteRawTag(48);
          output.WriteBool(NotificationsEnabled);
        }
        if (CoppaQueried != false) {
          output.WriteRawTag(56);
          output.WriteBool(CoppaQueried);
        }
        if (CoppaRestricted != false) {
          output.WriteRawTag(64);
          output.WriteBool(CoppaRestricted);
        }
        if (ForceTouchChickenBtn != false) {
          output.WriteRawTag(72);
          output.WriteBool(ForceTouchChickenBtn);
        }
        if (LowPerformance != false) {
          output.WriteRawTag(80);
          output.WriteBool(LowPerformance);
        }
        if (NotifyDailyGift != false) {
          output.WriteRawTag(88);
          output.WriteBool(NotifyDailyGift);
        }
        if (GdprConsentQueried != false) {
          output.WriteRawTag(96);
          output.WriteBool(GdprConsentQueried);
        }
        if (GdprConsentGiven != false) {
          output.WriteRawTag(104);
          output.WriteBool(GdprConsentGiven);
        }
        if (UserAdsEnabled != false) {
          output.WriteRawTag(112);
          output.WriteBool(UserAdsEnabled);
        }
        if (UserCloudEnabled != false) {
          output.WriteRawTag(120);
          output.WriteBool(UserCloudEnabled);
        }
        if (GdprAgeRestricted != false) {
          output.WriteRawTag(128, 1);
          output.WriteBool(GdprAgeRestricted);
        }
        if (LastDayAgeQueried != 0) {
          output.WriteRawTag(136, 1);
          output.WriteUInt32(LastDayAgeQueried);
        }
        if (AgeQueried != false) {
          output.WriteRawTag(144, 1);
          output.WriteBool(AgeQueried);
        }
        if (AgeRestricted != false) {
          output.WriteRawTag(152, 1);
          output.WriteBool(AgeRestricted);
        }
        if (DataCollectionConsentQueried != false) {
          output.WriteRawTag(160, 1);
          output.WriteBool(DataCollectionConsentQueried);
        }
        if (DataCollectionConsentGiven != false) {
          output.WriteRawTag(168, 1);
          output.WriteBool(DataCollectionConsentGiven);
        }
        if (UserAnalyticsEnabled != false) {
          output.WriteRawTag(176, 1);
          output.WriteBool(UserAnalyticsEnabled);
        }
        if (UserPersonalizedAdsEnabled != false) {
          output.WriteRawTag(184, 1);
          output.WriteBool(UserPersonalizedAdsEnabled);
        }
        if (LastBackupTime != 0D) {
          output.WriteRawTag(193, 1);
          output.WriteDouble(LastBackupTime);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Sfx != false) {
          size += 1 + 1;
        }
        if (Music != false) {
          size += 1 + 1;
        }
        if (LowBatteryMode != false) {
          size += 1 + 1;
        }
        if (LowPerformanceMode != false) {
          size += 1 + 1;
        }
        if (NotificationsQueried != false) {
          size += 1 + 1;
        }
        if (NotificationsEnabled != false) {
          size += 1 + 1;
        }
        if (CoppaQueried != false) {
          size += 1 + 1;
        }
        if (CoppaRestricted != false) {
          size += 1 + 1;
        }
        if (ForceTouchChickenBtn != false) {
          size += 1 + 1;
        }
        if (LowPerformance != false) {
          size += 1 + 1;
        }
        if (NotifyDailyGift != false) {
          size += 1 + 1;
        }
        if (GdprConsentQueried != false) {
          size += 1 + 1;
        }
        if (GdprConsentGiven != false) {
          size += 1 + 1;
        }
        if (UserAdsEnabled != false) {
          size += 1 + 1;
        }
        if (UserCloudEnabled != false) {
          size += 1 + 1;
        }
        if (GdprAgeRestricted != false) {
          size += 2 + 1;
        }
        if (LastDayAgeQueried != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LastDayAgeQueried);
        }
        if (AgeQueried != false) {
          size += 2 + 1;
        }
        if (AgeRestricted != false) {
          size += 2 + 1;
        }
        if (DataCollectionConsentQueried != false) {
          size += 2 + 1;
        }
        if (DataCollectionConsentGiven != false) {
          size += 2 + 1;
        }
        if (UserAnalyticsEnabled != false) {
          size += 2 + 1;
        }
        if (UserPersonalizedAdsEnabled != false) {
          size += 2 + 1;
        }
        if (LastBackupTime != 0D) {
          size += 2 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Settings other) {
        if (other == null) {
          return;
        }
        if (other.Sfx != false) {
          Sfx = other.Sfx;
        }
        if (other.Music != false) {
          Music = other.Music;
        }
        if (other.LowBatteryMode != false) {
          LowBatteryMode = other.LowBatteryMode;
        }
        if (other.LowPerformanceMode != false) {
          LowPerformanceMode = other.LowPerformanceMode;
        }
        if (other.NotificationsQueried != false) {
          NotificationsQueried = other.NotificationsQueried;
        }
        if (other.NotificationsEnabled != false) {
          NotificationsEnabled = other.NotificationsEnabled;
        }
        if (other.CoppaQueried != false) {
          CoppaQueried = other.CoppaQueried;
        }
        if (other.CoppaRestricted != false) {
          CoppaRestricted = other.CoppaRestricted;
        }
        if (other.ForceTouchChickenBtn != false) {
          ForceTouchChickenBtn = other.ForceTouchChickenBtn;
        }
        if (other.LowPerformance != false) {
          LowPerformance = other.LowPerformance;
        }
        if (other.NotifyDailyGift != false) {
          NotifyDailyGift = other.NotifyDailyGift;
        }
        if (other.GdprConsentQueried != false) {
          GdprConsentQueried = other.GdprConsentQueried;
        }
        if (other.GdprConsentGiven != false) {
          GdprConsentGiven = other.GdprConsentGiven;
        }
        if (other.UserAdsEnabled != false) {
          UserAdsEnabled = other.UserAdsEnabled;
        }
        if (other.UserCloudEnabled != false) {
          UserCloudEnabled = other.UserCloudEnabled;
        }
        if (other.GdprAgeRestricted != false) {
          GdprAgeRestricted = other.GdprAgeRestricted;
        }
        if (other.LastDayAgeQueried != 0) {
          LastDayAgeQueried = other.LastDayAgeQueried;
        }
        if (other.AgeQueried != false) {
          AgeQueried = other.AgeQueried;
        }
        if (other.AgeRestricted != false) {
          AgeRestricted = other.AgeRestricted;
        }
        if (other.DataCollectionConsentQueried != false) {
          DataCollectionConsentQueried = other.DataCollectionConsentQueried;
        }
        if (other.DataCollectionConsentGiven != false) {
          DataCollectionConsentGiven = other.DataCollectionConsentGiven;
        }
        if (other.UserAnalyticsEnabled != false) {
          UserAnalyticsEnabled = other.UserAnalyticsEnabled;
        }
        if (other.UserPersonalizedAdsEnabled != false) {
          UserPersonalizedAdsEnabled = other.UserPersonalizedAdsEnabled;
        }
        if (other.LastBackupTime != 0D) {
          LastBackupTime = other.LastBackupTime;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Sfx = input.ReadBool();
              break;
            }
            case 16: {
              Music = input.ReadBool();
              break;
            }
            case 24: {
              LowBatteryMode = input.ReadBool();
              break;
            }
            case 32: {
              LowPerformanceMode = input.ReadBool();
              break;
            }
            case 40: {
              NotificationsQueried = input.ReadBool();
              break;
            }
            case 48: {
              NotificationsEnabled = input.ReadBool();
              break;
            }
            case 56: {
              CoppaQueried = input.ReadBool();
              break;
            }
            case 64: {
              CoppaRestricted = input.ReadBool();
              break;
            }
            case 72: {
              ForceTouchChickenBtn = input.ReadBool();
              break;
            }
            case 80: {
              LowPerformance = input.ReadBool();
              break;
            }
            case 88: {
              NotifyDailyGift = input.ReadBool();
              break;
            }
            case 96: {
              GdprConsentQueried = input.ReadBool();
              break;
            }
            case 104: {
              GdprConsentGiven = input.ReadBool();
              break;
            }
            case 112: {
              UserAdsEnabled = input.ReadBool();
              break;
            }
            case 120: {
              UserCloudEnabled = input.ReadBool();
              break;
            }
            case 128: {
              GdprAgeRestricted = input.ReadBool();
              break;
            }
            case 136: {
              LastDayAgeQueried = input.ReadUInt32();
              break;
            }
            case 144: {
              AgeQueried = input.ReadBool();
              break;
            }
            case 152: {
              AgeRestricted = input.ReadBool();
              break;
            }
            case 160: {
              DataCollectionConsentQueried = input.ReadBool();
              break;
            }
            case 168: {
              DataCollectionConsentGiven = input.ReadBool();
              break;
            }
            case 176: {
              UserAnalyticsEnabled = input.ReadBool();
              break;
            }
            case 184: {
              UserPersonalizedAdsEnabled = input.ReadBool();
              break;
            }
            case 193: {
              LastBackupTime = input.ReadDouble();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Sfx = input.ReadBool();
              break;
            }
            case 16: {
              Music = input.ReadBool();
              break;
            }
            case 24: {
              LowBatteryMode = input.ReadBool();
              break;
            }
            case 32: {
              LowPerformanceMode = input.ReadBool();
              break;
            }
            case 40: {
              NotificationsQueried = input.ReadBool();
              break;
            }
            case 48: {
              NotificationsEnabled = input.ReadBool();
              break;
            }
            case 56: {
              CoppaQueried = input.ReadBool();
              break;
            }
            case 64: {
              CoppaRestricted = input.ReadBool();
              break;
            }
            case 72: {
              ForceTouchChickenBtn = input.ReadBool();
              break;
            }
            case 80: {
              LowPerformance = input.ReadBool();
              break;
            }
            case 88: {
              NotifyDailyGift = input.ReadBool();
              break;
            }
            case 96: {
              GdprConsentQueried = input.ReadBool();
              break;
            }
            case 104: {
              GdprConsentGiven = input.ReadBool();
              break;
            }
            case 112: {
              UserAdsEnabled = input.ReadBool();
              break;
            }
            case 120: {
              UserCloudEnabled = input.ReadBool();
              break;
            }
            case 128: {
              GdprAgeRestricted = input.ReadBool();
              break;
            }
            case 136: {
              LastDayAgeQueried = input.ReadUInt32();
              break;
            }
            case 144: {
              AgeQueried = input.ReadBool();
              break;
            }
            case 152: {
              AgeRestricted = input.ReadBool();
              break;
            }
            case 160: {
              DataCollectionConsentQueried = input.ReadBool();
              break;
            }
            case 168: {
              DataCollectionConsentGiven = input.ReadBool();
              break;
            }
            case 176: {
              UserAnalyticsEnabled = input.ReadBool();
              break;
            }
            case 184: {
              UserPersonalizedAdsEnabled = input.ReadBool();
              break;
            }
            case 193: {
              LastBackupTime = input.ReadDouble();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Tutorial : pb::IMessage<Tutorial>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Tutorial> _parser = new pb::MessageParser<Tutorial>(() => new Tutorial());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Tutorial> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Tutorial() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Tutorial(Tutorial other) : this() {
        introShown_ = other.introShown_;
        clickTutorialShown_ = other.clickTutorialShown_;
        buyHabShown_ = other.buyHabShown_;
        hireVehicleShown_ = other.hireVehicleShown_;
        qNumShown_ = other.qNumShown_;
        sNumShown_ = other.sNumShown_;
        contractsTabShown_ = other.contractsTabShown_;
        contractInfoShown_ = other.contractInfoShown_;
        joinCoopShown_ = other.joinCoopShown_;
        switchFarmShown_ = other.switchFarmShown_;
        tutorialsShown_ = other.tutorialsShown_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Tutorial Clone() {
        return new Tutorial(this);
      }

      /// <summary>Field number for the "intro_shown" field.</summary>
      public const int IntroShownFieldNumber = 1;
      private bool introShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IntroShown {
        get { return introShown_; }
        set {
          introShown_ = value;
        }
      }

      /// <summary>Field number for the "click_tutorial_shown" field.</summary>
      public const int ClickTutorialShownFieldNumber = 2;
      private bool clickTutorialShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool ClickTutorialShown {
        get { return clickTutorialShown_; }
        set {
          clickTutorialShown_ = value;
        }
      }

      /// <summary>Field number for the "buy_hab_shown" field.</summary>
      public const int BuyHabShownFieldNumber = 3;
      private bool buyHabShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool BuyHabShown {
        get { return buyHabShown_; }
        set {
          buyHabShown_ = value;
        }
      }

      /// <summary>Field number for the "hire_vehicle_shown" field.</summary>
      public const int HireVehicleShownFieldNumber = 4;
      private bool hireVehicleShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool HireVehicleShown {
        get { return hireVehicleShown_; }
        set {
          hireVehicleShown_ = value;
        }
      }

      /// <summary>Field number for the "q_num_shown" field.</summary>
      public const int QNumShownFieldNumber = 5;
      private bool qNumShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool QNumShown {
        get { return qNumShown_; }
        set {
          qNumShown_ = value;
        }
      }

      /// <summary>Field number for the "s_num_shown" field.</summary>
      public const int SNumShownFieldNumber = 6;
      private bool sNumShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool SNumShown {
        get { return sNumShown_; }
        set {
          sNumShown_ = value;
        }
      }

      /// <summary>Field number for the "contracts_tab_shown" field.</summary>
      public const int ContractsTabShownFieldNumber = 7;
      private bool contractsTabShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool ContractsTabShown {
        get { return contractsTabShown_; }
        set {
          contractsTabShown_ = value;
        }
      }

      /// <summary>Field number for the "contract_info_shown" field.</summary>
      public const int ContractInfoShownFieldNumber = 8;
      private bool contractInfoShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool ContractInfoShown {
        get { return contractInfoShown_; }
        set {
          contractInfoShown_ = value;
        }
      }

      /// <summary>Field number for the "join_coop_shown" field.</summary>
      public const int JoinCoopShownFieldNumber = 9;
      private bool joinCoopShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool JoinCoopShown {
        get { return joinCoopShown_; }
        set {
          joinCoopShown_ = value;
        }
      }

      /// <summary>Field number for the "switch_farm_shown" field.</summary>
      public const int SwitchFarmShownFieldNumber = 10;
      private bool switchFarmShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool SwitchFarmShown {
        get { return switchFarmShown_; }
        set {
          switchFarmShown_ = value;
        }
      }

      /// <summary>Field number for the "tutorials_shown" field.</summary>
      public const int TutorialsShownFieldNumber = 11;
      private static readonly pb::FieldCodec<bool> _repeated_tutorialsShown_codec
          = pb::FieldCodec.ForBool(90);
      private readonly pbc::RepeatedField<bool> tutorialsShown_ = new pbc::RepeatedField<bool>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<bool> TutorialsShown {
        get { return tutorialsShown_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Tutorial);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Tutorial other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (IntroShown != other.IntroShown) return false;
        if (ClickTutorialShown != other.ClickTutorialShown) return false;
        if (BuyHabShown != other.BuyHabShown) return false;
        if (HireVehicleShown != other.HireVehicleShown) return false;
        if (QNumShown != other.QNumShown) return false;
        if (SNumShown != other.SNumShown) return false;
        if (ContractsTabShown != other.ContractsTabShown) return false;
        if (ContractInfoShown != other.ContractInfoShown) return false;
        if (JoinCoopShown != other.JoinCoopShown) return false;
        if (SwitchFarmShown != other.SwitchFarmShown) return false;
        if(!tutorialsShown_.Equals(other.tutorialsShown_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (IntroShown != false) hash ^= IntroShown.GetHashCode();
        if (ClickTutorialShown != false) hash ^= ClickTutorialShown.GetHashCode();
        if (BuyHabShown != false) hash ^= BuyHabShown.GetHashCode();
        if (HireVehicleShown != false) hash ^= HireVehicleShown.GetHashCode();
        if (QNumShown != false) hash ^= QNumShown.GetHashCode();
        if (SNumShown != false) hash ^= SNumShown.GetHashCode();
        if (ContractsTabShown != false) hash ^= ContractsTabShown.GetHashCode();
        if (ContractInfoShown != false) hash ^= ContractInfoShown.GetHashCode();
        if (JoinCoopShown != false) hash ^= JoinCoopShown.GetHashCode();
        if (SwitchFarmShown != false) hash ^= SwitchFarmShown.GetHashCode();
        hash ^= tutorialsShown_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (IntroShown != false) {
          output.WriteRawTag(8);
          output.WriteBool(IntroShown);
        }
        if (ClickTutorialShown != false) {
          output.WriteRawTag(16);
          output.WriteBool(ClickTutorialShown);
        }
        if (BuyHabShown != false) {
          output.WriteRawTag(24);
          output.WriteBool(BuyHabShown);
        }
        if (HireVehicleShown != false) {
          output.WriteRawTag(32);
          output.WriteBool(HireVehicleShown);
        }
        if (QNumShown != false) {
          output.WriteRawTag(40);
          output.WriteBool(QNumShown);
        }
        if (SNumShown != false) {
          output.WriteRawTag(48);
          output.WriteBool(SNumShown);
        }
        if (ContractsTabShown != false) {
          output.WriteRawTag(56);
          output.WriteBool(ContractsTabShown);
        }
        if (ContractInfoShown != false) {
          output.WriteRawTag(64);
          output.WriteBool(ContractInfoShown);
        }
        if (JoinCoopShown != false) {
          output.WriteRawTag(72);
          output.WriteBool(JoinCoopShown);
        }
        if (SwitchFarmShown != false) {
          output.WriteRawTag(80);
          output.WriteBool(SwitchFarmShown);
        }
        tutorialsShown_.WriteTo(output, _repeated_tutorialsShown_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (IntroShown != false) {
          output.WriteRawTag(8);
          output.WriteBool(IntroShown);
        }
        if (ClickTutorialShown != false) {
          output.WriteRawTag(16);
          output.WriteBool(ClickTutorialShown);
        }
        if (BuyHabShown != false) {
          output.WriteRawTag(24);
          output.WriteBool(BuyHabShown);
        }
        if (HireVehicleShown != false) {
          output.WriteRawTag(32);
          output.WriteBool(HireVehicleShown);
        }
        if (QNumShown != false) {
          output.WriteRawTag(40);
          output.WriteBool(QNumShown);
        }
        if (SNumShown != false) {
          output.WriteRawTag(48);
          output.WriteBool(SNumShown);
        }
        if (ContractsTabShown != false) {
          output.WriteRawTag(56);
          output.WriteBool(ContractsTabShown);
        }
        if (ContractInfoShown != false) {
          output.WriteRawTag(64);
          output.WriteBool(ContractInfoShown);
        }
        if (JoinCoopShown != false) {
          output.WriteRawTag(72);
          output.WriteBool(JoinCoopShown);
        }
        if (SwitchFarmShown != false) {
          output.WriteRawTag(80);
          output.WriteBool(SwitchFarmShown);
        }
        tutorialsShown_.WriteTo(ref output, _repeated_tutorialsShown_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (IntroShown != false) {
          size += 1 + 1;
        }
        if (ClickTutorialShown != false) {
          size += 1 + 1;
        }
        if (BuyHabShown != false) {
          size += 1 + 1;
        }
        if (HireVehicleShown != false) {
          size += 1 + 1;
        }
        if (QNumShown != false) {
          size += 1 + 1;
        }
        if (SNumShown != false) {
          size += 1 + 1;
        }
        if (ContractsTabShown != false) {
          size += 1 + 1;
        }
        if (ContractInfoShown != false) {
          size += 1 + 1;
        }
        if (JoinCoopShown != false) {
          size += 1 + 1;
        }
        if (SwitchFarmShown != false) {
          size += 1 + 1;
        }
        size += tutorialsShown_.CalculateSize(_repeated_tutorialsShown_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Tutorial other) {
        if (other == null) {
          return;
        }
        if (other.IntroShown != false) {
          IntroShown = other.IntroShown;
        }
        if (other.ClickTutorialShown != false) {
          ClickTutorialShown = other.ClickTutorialShown;
        }
        if (other.BuyHabShown != false) {
          BuyHabShown = other.BuyHabShown;
        }
        if (other.HireVehicleShown != false) {
          HireVehicleShown = other.HireVehicleShown;
        }
        if (other.QNumShown != false) {
          QNumShown = other.QNumShown;
        }
        if (other.SNumShown != false) {
          SNumShown = other.SNumShown;
        }
        if (other.ContractsTabShown != false) {
          ContractsTabShown = other.ContractsTabShown;
        }
        if (other.ContractInfoShown != false) {
          ContractInfoShown = other.ContractInfoShown;
        }
        if (other.JoinCoopShown != false) {
          JoinCoopShown = other.JoinCoopShown;
        }
        if (other.SwitchFarmShown != false) {
          SwitchFarmShown = other.SwitchFarmShown;
        }
        tutorialsShown_.Add(other.tutorialsShown_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              IntroShown = input.ReadBool();
              break;
            }
            case 16: {
              ClickTutorialShown = input.ReadBool();
              break;
            }
            case 24: {
              BuyHabShown = input.ReadBool();
              break;
            }
            case 32: {
              HireVehicleShown = input.ReadBool();
              break;
            }
            case 40: {
              QNumShown = input.ReadBool();
              break;
            }
            case 48: {
              SNumShown = input.ReadBool();
              break;
            }
            case 56: {
              ContractsTabShown = input.ReadBool();
              break;
            }
            case 64: {
              ContractInfoShown = input.ReadBool();
              break;
            }
            case 72: {
              JoinCoopShown = input.ReadBool();
              break;
            }
            case 80: {
              SwitchFarmShown = input.ReadBool();
              break;
            }
            case 90:
            case 88: {
              tutorialsShown_.AddEntriesFrom(input, _repeated_tutorialsShown_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              IntroShown = input.ReadBool();
              break;
            }
            case 16: {
              ClickTutorialShown = input.ReadBool();
              break;
            }
            case 24: {
              BuyHabShown = input.ReadBool();
              break;
            }
            case 32: {
              HireVehicleShown = input.ReadBool();
              break;
            }
            case 40: {
              QNumShown = input.ReadBool();
              break;
            }
            case 48: {
              SNumShown = input.ReadBool();
              break;
            }
            case 56: {
              ContractsTabShown = input.ReadBool();
              break;
            }
            case 64: {
              ContractInfoShown = input.ReadBool();
              break;
            }
            case 72: {
              JoinCoopShown = input.ReadBool();
              break;
            }
            case 80: {
              SwitchFarmShown = input.ReadBool();
              break;
            }
            case 90:
            case 88: {
              tutorialsShown_.AddEntriesFrom(ref input, _repeated_tutorialsShown_codec);
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Stats : pb::IMessage<Stats>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Stats> _parser = new pb::MessageParser<Stats>(() => new Stats());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Stats> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Stats() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Stats(Stats other) : this() {
        refillUses_ = other.refillUses_;
        videoDoublerUses_ = other.videoDoublerUses_;
        warp1Uses_ = other.warp1Uses_;
        warp8Uses_ = other.warp8Uses_;
        droneTakedowns_ = other.droneTakedowns_;
        unlimitedChickensUses_ = other.unlimitedChickensUses_;
        eggTotals_ = other.eggTotals_.Clone();
        prestigeCount_ = other.prestigeCount_;
        droneTakedownsElite_ = other.droneTakedownsElite_;
        piggyBreakCount_ = other.piggyBreakCount_;
        iapPacksPurchased_ = other.iapPacksPurchased_;
        boostsUsed_ = other.boostsUsed_;
        piggyFull_ = other.piggyFull_;
        piggyFoundFull_ = other.piggyFoundFull_;
        timePiggyFilledRealtime_ = other.timePiggyFilledRealtime_;
        timePiggyFullGametime_ = other.timePiggyFullGametime_;
        lostPiggyIncrements_ = other.lostPiggyIncrements_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Stats Clone() {
        return new Stats(this);
      }

      /// <summary>Field number for the "refill_uses" field.</summary>
      public const int RefillUsesFieldNumber = 2;
      private ulong refillUses_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong RefillUses {
        get { return refillUses_; }
        set {
          refillUses_ = value;
        }
      }

      /// <summary>Field number for the "video_doubler_uses" field.</summary>
      public const int VideoDoublerUsesFieldNumber = 3;
      private ulong videoDoublerUses_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong VideoDoublerUses {
        get { return videoDoublerUses_; }
        set {
          videoDoublerUses_ = value;
        }
      }

      /// <summary>Field number for the "warp_1_uses" field.</summary>
      public const int Warp1UsesFieldNumber = 4;
      private ulong warp1Uses_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong Warp1Uses {
        get { return warp1Uses_; }
        set {
          warp1Uses_ = value;
        }
      }

      /// <summary>Field number for the "warp_8_uses" field.</summary>
      public const int Warp8UsesFieldNumber = 5;
      private ulong warp8Uses_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong Warp8Uses {
        get { return warp8Uses_; }
        set {
          warp8Uses_ = value;
        }
      }

      /// <summary>Field number for the "drone_takedowns" field.</summary>
      public const int DroneTakedownsFieldNumber = 6;
      private ulong droneTakedowns_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong DroneTakedowns {
        get { return droneTakedowns_; }
        set {
          droneTakedowns_ = value;
        }
      }

      /// <summary>Field number for the "unlimited_chickens_uses" field.</summary>
      public const int UnlimitedChickensUsesFieldNumber = 7;
      private ulong unlimitedChickensUses_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong UnlimitedChickensUses {
        get { return unlimitedChickensUses_; }
        set {
          unlimitedChickensUses_ = value;
        }
      }

      /// <summary>Field number for the "egg_totals" field.</summary>
      public const int EggTotalsFieldNumber = 8;
      private static readonly pb::FieldCodec<double> _repeated_eggTotals_codec
          = pb::FieldCodec.ForDouble(66);
      private readonly pbc::RepeatedField<double> eggTotals_ = new pbc::RepeatedField<double>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<double> EggTotals {
        get { return eggTotals_; }
      }

      /// <summary>Field number for the "prestige_count" field.</summary>
      public const int PrestigeCountFieldNumber = 9;
      private ulong prestigeCount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong PrestigeCount {
        get { return prestigeCount_; }
        set {
          prestigeCount_ = value;
        }
      }

      /// <summary>Field number for the "drone_takedowns_elite" field.</summary>
      public const int DroneTakedownsEliteFieldNumber = 10;
      private ulong droneTakedownsElite_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong DroneTakedownsElite {
        get { return droneTakedownsElite_; }
        set {
          droneTakedownsElite_ = value;
        }
      }

      /// <summary>Field number for the "piggy_break_count" field.</summary>
      public const int PiggyBreakCountFieldNumber = 11;
      private ulong piggyBreakCount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong PiggyBreakCount {
        get { return piggyBreakCount_; }
        set {
          piggyBreakCount_ = value;
        }
      }

      /// <summary>Field number for the "iap_packs_purchased" field.</summary>
      public const int IapPacksPurchasedFieldNumber = 12;
      private ulong iapPacksPurchased_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong IapPacksPurchased {
        get { return iapPacksPurchased_; }
        set {
          iapPacksPurchased_ = value;
        }
      }

      /// <summary>Field number for the "boosts_used" field.</summary>
      public const int BoostsUsedFieldNumber = 13;
      private ulong boostsUsed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong BoostsUsed {
        get { return boostsUsed_; }
        set {
          boostsUsed_ = value;
        }
      }

      /// <summary>Field number for the "piggy_full" field.</summary>
      public const int PiggyFullFieldNumber = 14;
      private bool piggyFull_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool PiggyFull {
        get { return piggyFull_; }
        set {
          piggyFull_ = value;
        }
      }

      /// <summary>Field number for the "piggy_found_full" field.</summary>
      public const int PiggyFoundFullFieldNumber = 15;
      private bool piggyFoundFull_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool PiggyFoundFull {
        get { return piggyFoundFull_; }
        set {
          piggyFoundFull_ = value;
        }
      }

      /// <summary>Field number for the "time_piggy_filled_realtime" field.</summary>
      public const int TimePiggyFilledRealtimeFieldNumber = 16;
      private double timePiggyFilledRealtime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double TimePiggyFilledRealtime {
        get { return timePiggyFilledRealtime_; }
        set {
          timePiggyFilledRealtime_ = value;
        }
      }

      /// <summary>Field number for the "time_piggy_full_gametime" field.</summary>
      public const int TimePiggyFullGametimeFieldNumber = 17;
      private double timePiggyFullGametime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double TimePiggyFullGametime {
        get { return timePiggyFullGametime_; }
        set {
          timePiggyFullGametime_ = value;
        }
      }

      /// <summary>Field number for the "lost_piggy_increments" field.</summary>
      public const int LostPiggyIncrementsFieldNumber = 18;
      private ulong lostPiggyIncrements_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong LostPiggyIncrements {
        get { return lostPiggyIncrements_; }
        set {
          lostPiggyIncrements_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Stats);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Stats other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (RefillUses != other.RefillUses) return false;
        if (VideoDoublerUses != other.VideoDoublerUses) return false;
        if (Warp1Uses != other.Warp1Uses) return false;
        if (Warp8Uses != other.Warp8Uses) return false;
        if (DroneTakedowns != other.DroneTakedowns) return false;
        if (UnlimitedChickensUses != other.UnlimitedChickensUses) return false;
        if(!eggTotals_.Equals(other.eggTotals_)) return false;
        if (PrestigeCount != other.PrestigeCount) return false;
        if (DroneTakedownsElite != other.DroneTakedownsElite) return false;
        if (PiggyBreakCount != other.PiggyBreakCount) return false;
        if (IapPacksPurchased != other.IapPacksPurchased) return false;
        if (BoostsUsed != other.BoostsUsed) return false;
        if (PiggyFull != other.PiggyFull) return false;
        if (PiggyFoundFull != other.PiggyFoundFull) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimePiggyFilledRealtime, other.TimePiggyFilledRealtime)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimePiggyFullGametime, other.TimePiggyFullGametime)) return false;
        if (LostPiggyIncrements != other.LostPiggyIncrements) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (RefillUses != 0UL) hash ^= RefillUses.GetHashCode();
        if (VideoDoublerUses != 0UL) hash ^= VideoDoublerUses.GetHashCode();
        if (Warp1Uses != 0UL) hash ^= Warp1Uses.GetHashCode();
        if (Warp8Uses != 0UL) hash ^= Warp8Uses.GetHashCode();
        if (DroneTakedowns != 0UL) hash ^= DroneTakedowns.GetHashCode();
        if (UnlimitedChickensUses != 0UL) hash ^= UnlimitedChickensUses.GetHashCode();
        hash ^= eggTotals_.GetHashCode();
        if (PrestigeCount != 0UL) hash ^= PrestigeCount.GetHashCode();
        if (DroneTakedownsElite != 0UL) hash ^= DroneTakedownsElite.GetHashCode();
        if (PiggyBreakCount != 0UL) hash ^= PiggyBreakCount.GetHashCode();
        if (IapPacksPurchased != 0UL) hash ^= IapPacksPurchased.GetHashCode();
        if (BoostsUsed != 0UL) hash ^= BoostsUsed.GetHashCode();
        if (PiggyFull != false) hash ^= PiggyFull.GetHashCode();
        if (PiggyFoundFull != false) hash ^= PiggyFoundFull.GetHashCode();
        if (TimePiggyFilledRealtime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimePiggyFilledRealtime);
        if (TimePiggyFullGametime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimePiggyFullGametime);
        if (LostPiggyIncrements != 0UL) hash ^= LostPiggyIncrements.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (RefillUses != 0UL) {
          output.WriteRawTag(16);
          output.WriteUInt64(RefillUses);
        }
        if (VideoDoublerUses != 0UL) {
          output.WriteRawTag(24);
          output.WriteUInt64(VideoDoublerUses);
        }
        if (Warp1Uses != 0UL) {
          output.WriteRawTag(32);
          output.WriteUInt64(Warp1Uses);
        }
        if (Warp8Uses != 0UL) {
          output.WriteRawTag(40);
          output.WriteUInt64(Warp8Uses);
        }
        if (DroneTakedowns != 0UL) {
          output.WriteRawTag(48);
          output.WriteUInt64(DroneTakedowns);
        }
        if (UnlimitedChickensUses != 0UL) {
          output.WriteRawTag(56);
          output.WriteUInt64(UnlimitedChickensUses);
        }
        eggTotals_.WriteTo(output, _repeated_eggTotals_codec);
        if (PrestigeCount != 0UL) {
          output.WriteRawTag(72);
          output.WriteUInt64(PrestigeCount);
        }
        if (DroneTakedownsElite != 0UL) {
          output.WriteRawTag(80);
          output.WriteUInt64(DroneTakedownsElite);
        }
        if (PiggyBreakCount != 0UL) {
          output.WriteRawTag(88);
          output.WriteUInt64(PiggyBreakCount);
        }
        if (IapPacksPurchased != 0UL) {
          output.WriteRawTag(96);
          output.WriteUInt64(IapPacksPurchased);
        }
        if (BoostsUsed != 0UL) {
          output.WriteRawTag(104);
          output.WriteUInt64(BoostsUsed);
        }
        if (PiggyFull != false) {
          output.WriteRawTag(112);
          output.WriteBool(PiggyFull);
        }
        if (PiggyFoundFull != false) {
          output.WriteRawTag(120);
          output.WriteBool(PiggyFoundFull);
        }
        if (TimePiggyFilledRealtime != 0D) {
          output.WriteRawTag(129, 1);
          output.WriteDouble(TimePiggyFilledRealtime);
        }
        if (TimePiggyFullGametime != 0D) {
          output.WriteRawTag(137, 1);
          output.WriteDouble(TimePiggyFullGametime);
        }
        if (LostPiggyIncrements != 0UL) {
          output.WriteRawTag(144, 1);
          output.WriteUInt64(LostPiggyIncrements);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (RefillUses != 0UL) {
          output.WriteRawTag(16);
          output.WriteUInt64(RefillUses);
        }
        if (VideoDoublerUses != 0UL) {
          output.WriteRawTag(24);
          output.WriteUInt64(VideoDoublerUses);
        }
        if (Warp1Uses != 0UL) {
          output.WriteRawTag(32);
          output.WriteUInt64(Warp1Uses);
        }
        if (Warp8Uses != 0UL) {
          output.WriteRawTag(40);
          output.WriteUInt64(Warp8Uses);
        }
        if (DroneTakedowns != 0UL) {
          output.WriteRawTag(48);
          output.WriteUInt64(DroneTakedowns);
        }
        if (UnlimitedChickensUses != 0UL) {
          output.WriteRawTag(56);
          output.WriteUInt64(UnlimitedChickensUses);
        }
        eggTotals_.WriteTo(ref output, _repeated_eggTotals_codec);
        if (PrestigeCount != 0UL) {
          output.WriteRawTag(72);
          output.WriteUInt64(PrestigeCount);
        }
        if (DroneTakedownsElite != 0UL) {
          output.WriteRawTag(80);
          output.WriteUInt64(DroneTakedownsElite);
        }
        if (PiggyBreakCount != 0UL) {
          output.WriteRawTag(88);
          output.WriteUInt64(PiggyBreakCount);
        }
        if (IapPacksPurchased != 0UL) {
          output.WriteRawTag(96);
          output.WriteUInt64(IapPacksPurchased);
        }
        if (BoostsUsed != 0UL) {
          output.WriteRawTag(104);
          output.WriteUInt64(BoostsUsed);
        }
        if (PiggyFull != false) {
          output.WriteRawTag(112);
          output.WriteBool(PiggyFull);
        }
        if (PiggyFoundFull != false) {
          output.WriteRawTag(120);
          output.WriteBool(PiggyFoundFull);
        }
        if (TimePiggyFilledRealtime != 0D) {
          output.WriteRawTag(129, 1);
          output.WriteDouble(TimePiggyFilledRealtime);
        }
        if (TimePiggyFullGametime != 0D) {
          output.WriteRawTag(137, 1);
          output.WriteDouble(TimePiggyFullGametime);
        }
        if (LostPiggyIncrements != 0UL) {
          output.WriteRawTag(144, 1);
          output.WriteUInt64(LostPiggyIncrements);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (RefillUses != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RefillUses);
        }
        if (VideoDoublerUses != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VideoDoublerUses);
        }
        if (Warp1Uses != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Warp1Uses);
        }
        if (Warp8Uses != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Warp8Uses);
        }
        if (DroneTakedowns != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DroneTakedowns);
        }
        if (UnlimitedChickensUses != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UnlimitedChickensUses);
        }
        size += eggTotals_.CalculateSize(_repeated_eggTotals_codec);
        if (PrestigeCount != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PrestigeCount);
        }
        if (DroneTakedownsElite != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DroneTakedownsElite);
        }
        if (PiggyBreakCount != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PiggyBreakCount);
        }
        if (IapPacksPurchased != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(IapPacksPurchased);
        }
        if (BoostsUsed != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BoostsUsed);
        }
        if (PiggyFull != false) {
          size += 1 + 1;
        }
        if (PiggyFoundFull != false) {
          size += 1 + 1;
        }
        if (TimePiggyFilledRealtime != 0D) {
          size += 2 + 8;
        }
        if (TimePiggyFullGametime != 0D) {
          size += 2 + 8;
        }
        if (LostPiggyIncrements != 0UL) {
          size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LostPiggyIncrements);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Stats other) {
        if (other == null) {
          return;
        }
        if (other.RefillUses != 0UL) {
          RefillUses = other.RefillUses;
        }
        if (other.VideoDoublerUses != 0UL) {
          VideoDoublerUses = other.VideoDoublerUses;
        }
        if (other.Warp1Uses != 0UL) {
          Warp1Uses = other.Warp1Uses;
        }
        if (other.Warp8Uses != 0UL) {
          Warp8Uses = other.Warp8Uses;
        }
        if (other.DroneTakedowns != 0UL) {
          DroneTakedowns = other.DroneTakedowns;
        }
        if (other.UnlimitedChickensUses != 0UL) {
          UnlimitedChickensUses = other.UnlimitedChickensUses;
        }
        eggTotals_.Add(other.eggTotals_);
        if (other.PrestigeCount != 0UL) {
          PrestigeCount = other.PrestigeCount;
        }
        if (other.DroneTakedownsElite != 0UL) {
          DroneTakedownsElite = other.DroneTakedownsElite;
        }
        if (other.PiggyBreakCount != 0UL) {
          PiggyBreakCount = other.PiggyBreakCount;
        }
        if (other.IapPacksPurchased != 0UL) {
          IapPacksPurchased = other.IapPacksPurchased;
        }
        if (other.BoostsUsed != 0UL) {
          BoostsUsed = other.BoostsUsed;
        }
        if (other.PiggyFull != false) {
          PiggyFull = other.PiggyFull;
        }
        if (other.PiggyFoundFull != false) {
          PiggyFoundFull = other.PiggyFoundFull;
        }
        if (other.TimePiggyFilledRealtime != 0D) {
          TimePiggyFilledRealtime = other.TimePiggyFilledRealtime;
        }
        if (other.TimePiggyFullGametime != 0D) {
          TimePiggyFullGametime = other.TimePiggyFullGametime;
        }
        if (other.LostPiggyIncrements != 0UL) {
          LostPiggyIncrements = other.LostPiggyIncrements;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 16: {
              RefillUses = input.ReadUInt64();
              break;
            }
            case 24: {
              VideoDoublerUses = input.ReadUInt64();
              break;
            }
            case 32: {
              Warp1Uses = input.ReadUInt64();
              break;
            }
            case 40: {
              Warp8Uses = input.ReadUInt64();
              break;
            }
            case 48: {
              DroneTakedowns = input.ReadUInt64();
              break;
            }
            case 56: {
              UnlimitedChickensUses = input.ReadUInt64();
              break;
            }
            case 66:
            case 65: {
              eggTotals_.AddEntriesFrom(input, _repeated_eggTotals_codec);
              break;
            }
            case 72: {
              PrestigeCount = input.ReadUInt64();
              break;
            }
            case 80: {
              DroneTakedownsElite = input.ReadUInt64();
              break;
            }
            case 88: {
              PiggyBreakCount = input.ReadUInt64();
              break;
            }
            case 96: {
              IapPacksPurchased = input.ReadUInt64();
              break;
            }
            case 104: {
              BoostsUsed = input.ReadUInt64();
              break;
            }
            case 112: {
              PiggyFull = input.ReadBool();
              break;
            }
            case 120: {
              PiggyFoundFull = input.ReadBool();
              break;
            }
            case 129: {
              TimePiggyFilledRealtime = input.ReadDouble();
              break;
            }
            case 137: {
              TimePiggyFullGametime = input.ReadDouble();
              break;
            }
            case 144: {
              LostPiggyIncrements = input.ReadUInt64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 16: {
              RefillUses = input.ReadUInt64();
              break;
            }
            case 24: {
              VideoDoublerUses = input.ReadUInt64();
              break;
            }
            case 32: {
              Warp1Uses = input.ReadUInt64();
              break;
            }
            case 40: {
              Warp8Uses = input.ReadUInt64();
              break;
            }
            case 48: {
              DroneTakedowns = input.ReadUInt64();
              break;
            }
            case 56: {
              UnlimitedChickensUses = input.ReadUInt64();
              break;
            }
            case 66:
            case 65: {
              eggTotals_.AddEntriesFrom(ref input, _repeated_eggTotals_codec);
              break;
            }
            case 72: {
              PrestigeCount = input.ReadUInt64();
              break;
            }
            case 80: {
              DroneTakedownsElite = input.ReadUInt64();
              break;
            }
            case 88: {
              PiggyBreakCount = input.ReadUInt64();
              break;
            }
            case 96: {
              IapPacksPurchased = input.ReadUInt64();
              break;
            }
            case 104: {
              BoostsUsed = input.ReadUInt64();
              break;
            }
            case 112: {
              PiggyFull = input.ReadBool();
              break;
            }
            case 120: {
              PiggyFoundFull = input.ReadBool();
              break;
            }
            case 129: {
              TimePiggyFilledRealtime = input.ReadDouble();
              break;
            }
            case 137: {
              TimePiggyFullGametime = input.ReadDouble();
              break;
            }
            case 144: {
              LostPiggyIncrements = input.ReadUInt64();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ResearchItem : pb::IMessage<ResearchItem>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ResearchItem> _parser = new pb::MessageParser<ResearchItem>(() => new ResearchItem());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<ResearchItem> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[3]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ResearchItem() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ResearchItem(ResearchItem other) : this() {
        id_ = other.id_;
        level_ = other.level_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ResearchItem Clone() {
        return new ResearchItem(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private string id_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Id {
        get { return id_; }
        set {
          id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "level" field.</summary>
      public const int LevelFieldNumber = 2;
      private uint level_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint Level {
        get { return level_; }
        set {
          level_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as ResearchItem);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(ResearchItem other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Level != other.Level) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id.Length != 0) hash ^= Id.GetHashCode();
        if (Level != 0) hash ^= Level.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (Level != 0) {
          output.WriteRawTag(16);
          output.WriteUInt32(Level);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (Level != 0) {
          output.WriteRawTag(16);
          output.WriteUInt32(Level);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
        }
        if (Level != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(ResearchItem other) {
        if (other == null) {
          return;
        }
        if (other.Id.Length != 0) {
          Id = other.Id;
        }
        if (other.Level != 0) {
          Level = other.Level;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 16: {
              Level = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 16: {
              Level = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class NewsHeadline : pb::IMessage<NewsHeadline>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<NewsHeadline> _parser = new pb::MessageParser<NewsHeadline>(() => new NewsHeadline());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<NewsHeadline> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[4]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NewsHeadline() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NewsHeadline(NewsHeadline other) : this() {
        id_ = other.id_;
        read_ = other.read_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NewsHeadline Clone() {
        return new NewsHeadline(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private string id_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Id {
        get { return id_; }
        set {
          id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "read" field.</summary>
      public const int ReadFieldNumber = 2;
      private bool read_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Read {
        get { return read_; }
        set {
          read_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as NewsHeadline);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(NewsHeadline other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Read != other.Read) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id.Length != 0) hash ^= Id.GetHashCode();
        if (Read != false) hash ^= Read.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (Read != false) {
          output.WriteRawTag(16);
          output.WriteBool(Read);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (Read != false) {
          output.WriteRawTag(16);
          output.WriteBool(Read);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
        }
        if (Read != false) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(NewsHeadline other) {
        if (other == null) {
          return;
        }
        if (other.Id.Length != 0) {
          Id = other.Id;
        }
        if (other.Read != false) {
          Read = other.Read;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 16: {
              Read = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 16: {
              Read = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class AchievementInfo : pb::IMessage<AchievementInfo>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<AchievementInfo> _parser = new pb::MessageParser<AchievementInfo>(() => new AchievementInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<AchievementInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[5]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public AchievementInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public AchievementInfo(AchievementInfo other) : this() {
        name_ = other.name_;
        achieved_ = other.achieved_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public AchievementInfo Clone() {
        return new AchievementInfo(this);
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 1;
      private string name_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Name {
        get { return name_; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "achieved" field.</summary>
      public const int AchievedFieldNumber = 2;
      private bool achieved_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Achieved {
        get { return achieved_; }
        set {
          achieved_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as AchievementInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(AchievementInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Name != other.Name) return false;
        if (Achieved != other.Achieved) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Name.Length != 0) hash ^= Name.GetHashCode();
        if (Achieved != false) hash ^= Achieved.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Name.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (Achieved != false) {
          output.WriteRawTag(16);
          output.WriteBool(Achieved);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Name.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (Achieved != false) {
          output.WriteRawTag(16);
          output.WriteBool(Achieved);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Name.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (Achieved != false) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(AchievementInfo other) {
        if (other == null) {
          return;
        }
        if (other.Name.Length != 0) {
          Name = other.Name;
        }
        if (other.Achieved != false) {
          Achieved = other.Achieved;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 16: {
              Achieved = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 16: {
              Achieved = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ActiveBoost : pb::IMessage<ActiveBoost>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ActiveBoost> _parser = new pb::MessageParser<ActiveBoost>(() => new ActiveBoost());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<ActiveBoost> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[6]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ActiveBoost() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ActiveBoost(ActiveBoost other) : this() {
        id_ = other.id_;
        timeRemaining_ = other.timeRemaining_;
        referenceValue_ = other.referenceValue_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ActiveBoost Clone() {
        return new ActiveBoost(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private string id_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Id {
        get { return id_; }
        set {
          id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "time_remaining" field.</summary>
      public const int TimeRemainingFieldNumber = 2;
      private double timeRemaining_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double TimeRemaining {
        get { return timeRemaining_; }
        set {
          timeRemaining_ = value;
        }
      }

      /// <summary>Field number for the "reference_value" field.</summary>
      public const int ReferenceValueFieldNumber = 3;
      private double referenceValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double ReferenceValue {
        get { return referenceValue_; }
        set {
          referenceValue_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as ActiveBoost);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(ActiveBoost other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeRemaining, other.TimeRemaining)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReferenceValue, other.ReferenceValue)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id.Length != 0) hash ^= Id.GetHashCode();
        if (TimeRemaining != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeRemaining);
        if (ReferenceValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReferenceValue);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (TimeRemaining != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(TimeRemaining);
        }
        if (ReferenceValue != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(ReferenceValue);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (TimeRemaining != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(TimeRemaining);
        }
        if (ReferenceValue != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(ReferenceValue);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
        }
        if (TimeRemaining != 0D) {
          size += 1 + 8;
        }
        if (ReferenceValue != 0D) {
          size += 1 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(ActiveBoost other) {
        if (other == null) {
          return;
        }
        if (other.Id.Length != 0) {
          Id = other.Id;
        }
        if (other.TimeRemaining != 0D) {
          TimeRemaining = other.TimeRemaining;
        }
        if (other.ReferenceValue != 0D) {
          ReferenceValue = other.ReferenceValue;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 17: {
              TimeRemaining = input.ReadDouble();
              break;
            }
            case 25: {
              ReferenceValue = input.ReadDouble();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 17: {
              TimeRemaining = input.ReadDouble();
              break;
            }
            case 25: {
              ReferenceValue = input.ReadDouble();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class OwnedBoost : pb::IMessage<OwnedBoost>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<OwnedBoost> _parser = new pb::MessageParser<OwnedBoost>(() => new OwnedBoost());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<OwnedBoost> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[7]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public OwnedBoost() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public OwnedBoost(OwnedBoost other) : this() {
        id_ = other.id_;
        count_ = other.count_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public OwnedBoost Clone() {
        return new OwnedBoost(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private string id_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Id {
        get { return id_; }
        set {
          id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "count" field.</summary>
      public const int CountFieldNumber = 2;
      private uint count_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint Count {
        get { return count_; }
        set {
          count_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as OwnedBoost);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(OwnedBoost other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Count != other.Count) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id.Length != 0) hash ^= Id.GetHashCode();
        if (Count != 0) hash ^= Count.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (Count != 0) {
          output.WriteRawTag(16);
          output.WriteUInt32(Count);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (Count != 0) {
          output.WriteRawTag(16);
          output.WriteUInt32(Count);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
        }
        if (Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(OwnedBoost other) {
        if (other == null) {
          return;
        }
        if (other.Id.Length != 0) {
          Id = other.Id;
        }
        if (other.Count != 0) {
          Count = other.Count;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 16: {
              Count = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 16: {
              Count = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Game : pb::IMessage<Game>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Game> _parser = new pb::MessageParser<Game>(() => new Game());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Game> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[8]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Game() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Game(Game other) : this() {
        maxEggReached_ = other.maxEggReached_;
        goldenEggsEarned_ = other.goldenEggsEarned_;
        goldenEggsSpent_ = other.goldenEggsSpent_;
        prestigeCashEarned_ = other.prestigeCashEarned_;
        lifetimeCashEarned_ = other.lifetimeCashEarned_;
        piggyBank_ = other.piggyBank_;
        permitLevel_ = other.permitLevel_;
        epicResearch_ = other.epicResearch_.Clone();
        nextDailyGiftTime_ = other.nextDailyGiftTime_;
        news_ = other.news_.Clone();
        lastNewsTime_ = other.lastNewsTime_;
        currentMultiplier_ = other.currentMultiplier_;
        currentMultiplierExpiration_ = other.currentMultiplierExpiration_;
        achievements_ = other.achievements_.Clone();
        unclaimedGoldenEggs_ = other.unclaimedGoldenEggs_;
        maxFarmSizeReached_ = other.maxFarmSizeReached_.Clone();
        eggMedalLevels_ = other.eggMedalLevels_.Clone();
        lastDailyGiftCollectedDay_ = other.lastDailyGiftCollectedDay_;
        currentFarm_ = other.currentFarm_;
        prophecyEggs_ = other.prophecyEggs_;
        unclaimedProphecyEggs_ = other.unclaimedProphecyEggs_;
        longIdleNotificationSet_ = other.longIdleNotificationSet_;
        longIdleNotificationThreshold_ = other.longIdleNotificationThreshold_;
        longIdleReward_ = other.longIdleReward_;
        dailyGiftIndex_ = other.dailyGiftIndex_;
        hyperloopStation_ = other.hyperloopStation_;
        boosts_ = other.boosts_.Clone();
        piggyFullAlertShown_ = other.piggyFullAlertShown_;
        totalTimeCheatsDetected_ = other.totalTimeCheatsDetected_;
        prestigeSoulBoostCash_ = other.prestigeSoulBoostCash_;
        soulEggs_ = other.soulEggs_;
        unclaimedSoulEggs_ = other.unclaimedSoulEggs_;
        forceEliteContracts_ = other.forceEliteContracts_;
        newPlayerEventEndTime_ = other.newPlayerEventEndTime_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Game Clone() {
        return new Game(this);
      }

      /// <summary>Field number for the "max_egg_reached" field.</summary>
      public const int MaxEggReachedFieldNumber = 1;
      private global::Egg maxEggReached_ = global::Egg.UndefinedEgg;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Egg MaxEggReached {
        get { return maxEggReached_; }
        set {
          maxEggReached_ = value;
        }
      }

      /// <summary>Field number for the "golden_eggs_earned" field.</summary>
      public const int GoldenEggsEarnedFieldNumber = 2;
      private ulong goldenEggsEarned_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong GoldenEggsEarned {
        get { return goldenEggsEarned_; }
        set {
          goldenEggsEarned_ = value;
        }
      }

      /// <summary>Field number for the "golden_eggs_spent" field.</summary>
      public const int GoldenEggsSpentFieldNumber = 3;
      private ulong goldenEggsSpent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong GoldenEggsSpent {
        get { return goldenEggsSpent_; }
        set {
          goldenEggsSpent_ = value;
        }
      }

      /// <summary>Field number for the "prestige_cash_earned" field.</summary>
      public const int PrestigeCashEarnedFieldNumber = 5;
      private double prestigeCashEarned_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double PrestigeCashEarned {
        get { return prestigeCashEarned_; }
        set {
          prestigeCashEarned_ = value;
        }
      }

      /// <summary>Field number for the "lifetime_cash_earned" field.</summary>
      public const int LifetimeCashEarnedFieldNumber = 6;
      private double lifetimeCashEarned_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double LifetimeCashEarned {
        get { return lifetimeCashEarned_; }
        set {
          lifetimeCashEarned_ = value;
        }
      }

      /// <summary>Field number for the "piggy_bank" field.</summary>
      public const int PiggyBankFieldNumber = 7;
      private ulong piggyBank_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong PiggyBank {
        get { return piggyBank_; }
        set {
          piggyBank_ = value;
        }
      }

      /// <summary>Field number for the "permit_level" field.</summary>
      public const int PermitLevelFieldNumber = 8;
      private uint permitLevel_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint PermitLevel {
        get { return permitLevel_; }
        set {
          permitLevel_ = value;
        }
      }

      /// <summary>Field number for the "epic_research" field.</summary>
      public const int EpicResearchFieldNumber = 9;
      private static readonly pb::FieldCodec<global::Backup.Types.ResearchItem> _repeated_epicResearch_codec
          = pb::FieldCodec.ForMessage(74, global::Backup.Types.ResearchItem.Parser);
      private readonly pbc::RepeatedField<global::Backup.Types.ResearchItem> epicResearch_ = new pbc::RepeatedField<global::Backup.Types.ResearchItem>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::Backup.Types.ResearchItem> EpicResearch {
        get { return epicResearch_; }
      }

      /// <summary>Field number for the "next_daily_gift_time" field.</summary>
      public const int NextDailyGiftTimeFieldNumber = 10;
      private double nextDailyGiftTime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double NextDailyGiftTime {
        get { return nextDailyGiftTime_; }
        set {
          nextDailyGiftTime_ = value;
        }
      }

      /// <summary>Field number for the "news" field.</summary>
      public const int NewsFieldNumber = 11;
      private static readonly pb::FieldCodec<global::Backup.Types.NewsHeadline> _repeated_news_codec
          = pb::FieldCodec.ForMessage(90, global::Backup.Types.NewsHeadline.Parser);
      private readonly pbc::RepeatedField<global::Backup.Types.NewsHeadline> news_ = new pbc::RepeatedField<global::Backup.Types.NewsHeadline>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::Backup.Types.NewsHeadline> News {
        get { return news_; }
      }

      /// <summary>Field number for the "last_news_time" field.</summary>
      public const int LastNewsTimeFieldNumber = 12;
      private double lastNewsTime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double LastNewsTime {
        get { return lastNewsTime_; }
        set {
          lastNewsTime_ = value;
        }
      }

      /// <summary>Field number for the "current_multiplier" field.</summary>
      public const int CurrentMultiplierFieldNumber = 13;
      private double currentMultiplier_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double CurrentMultiplier {
        get { return currentMultiplier_; }
        set {
          currentMultiplier_ = value;
        }
      }

      /// <summary>Field number for the "current_multiplier_expiration" field.</summary>
      public const int CurrentMultiplierExpirationFieldNumber = 14;
      private double currentMultiplierExpiration_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double CurrentMultiplierExpiration {
        get { return currentMultiplierExpiration_; }
        set {
          currentMultiplierExpiration_ = value;
        }
      }

      /// <summary>Field number for the "achievements" field.</summary>
      public const int AchievementsFieldNumber = 15;
      private static readonly pb::FieldCodec<global::Backup.Types.AchievementInfo> _repeated_achievements_codec
          = pb::FieldCodec.ForMessage(122, global::Backup.Types.AchievementInfo.Parser);
      private readonly pbc::RepeatedField<global::Backup.Types.AchievementInfo> achievements_ = new pbc::RepeatedField<global::Backup.Types.AchievementInfo>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::Backup.Types.AchievementInfo> Achievements {
        get { return achievements_; }
      }

      /// <summary>Field number for the "unclaimed_golden_eggs" field.</summary>
      public const int UnclaimedGoldenEggsFieldNumber = 16;
      private ulong unclaimedGoldenEggs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong UnclaimedGoldenEggs {
        get { return unclaimedGoldenEggs_; }
        set {
          unclaimedGoldenEggs_ = value;
        }
      }

      /// <summary>Field number for the "max_farm_size_reached" field.</summary>
      public const int MaxFarmSizeReachedFieldNumber = 18;
      private static readonly pb::FieldCodec<ulong> _repeated_maxFarmSizeReached_codec
          = pb::FieldCodec.ForUInt64(146);
      private readonly pbc::RepeatedField<ulong> maxFarmSizeReached_ = new pbc::RepeatedField<ulong>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<ulong> MaxFarmSizeReached {
        get { return maxFarmSizeReached_; }
      }

      /// <summary>Field number for the "egg_medal_levels" field.</summary>
      public const int EggMedalLevelsFieldNumber = 19;
      private static readonly pb::FieldCodec<global::TrophyLevel> _repeated_eggMedalLevels_codec
          = pb::FieldCodec.ForEnum(154, x => (int) x, x => (global::TrophyLevel) x);
      private readonly pbc::RepeatedField<global::TrophyLevel> eggMedalLevels_ = new pbc::RepeatedField<global::TrophyLevel>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::TrophyLevel> EggMedalLevels {
        get { return eggMedalLevels_; }
      }

      /// <summary>Field number for the "last_daily_gift_collected_day" field.</summary>
      public const int LastDailyGiftCollectedDayFieldNumber = 20;
      private uint lastDailyGiftCollectedDay_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint LastDailyGiftCollectedDay {
        get { return lastDailyGiftCollectedDay_; }
        set {
          lastDailyGiftCollectedDay_ = value;
        }
      }

      /// <summary>Field number for the "current_farm" field.</summary>
      public const int CurrentFarmFieldNumber = 22;
      private uint currentFarm_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint CurrentFarm {
        get { return currentFarm_; }
        set {
          currentFarm_ = value;
        }
      }

      /// <summary>Field number for the "prophecy_eggs" field.</summary>
      public const int ProphecyEggsFieldNumber = 23;
      private ulong prophecyEggs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong ProphecyEggs {
        get { return prophecyEggs_; }
        set {
          prophecyEggs_ = value;
        }
      }

      /// <summary>Field number for the "unclaimed_prophecy_eggs" field.</summary>
      public const int UnclaimedProphecyEggsFieldNumber = 24;
      private uint unclaimedProphecyEggs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint UnclaimedProphecyEggs {
        get { return unclaimedProphecyEggs_; }
        set {
          unclaimedProphecyEggs_ = value;
        }
      }

      /// <summary>Field number for the "long_idle_notification_set" field.</summary>
      public const int LongIdleNotificationSetFieldNumber = 25;
      private bool longIdleNotificationSet_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool LongIdleNotificationSet {
        get { return longIdleNotificationSet_; }
        set {
          longIdleNotificationSet_ = value;
        }
      }

      /// <summary>Field number for the "long_idle_notification_threshold" field.</summary>
      public const int LongIdleNotificationThresholdFieldNumber = 26;
      private double longIdleNotificationThreshold_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double LongIdleNotificationThreshold {
        get { return longIdleNotificationThreshold_; }
        set {
          longIdleNotificationThreshold_ = value;
        }
      }

      /// <summary>Field number for the "long_idle_reward" field.</summary>
      public const int LongIdleRewardFieldNumber = 27;
      private double longIdleReward_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double LongIdleReward {
        get { return longIdleReward_; }
        set {
          longIdleReward_ = value;
        }
      }

      /// <summary>Field number for the "daily_gift_index" field.</summary>
      public const int DailyGiftIndexFieldNumber = 28;
      private uint dailyGiftIndex_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint DailyGiftIndex {
        get { return dailyGiftIndex_; }
        set {
          dailyGiftIndex_ = value;
        }
      }

      /// <summary>Field number for the "hyperloop_station" field.</summary>
      public const int HyperloopStationFieldNumber = 29;
      private bool hyperloopStation_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool HyperloopStation {
        get { return hyperloopStation_; }
        set {
          hyperloopStation_ = value;
        }
      }

      /// <summary>Field number for the "boosts" field.</summary>
      public const int BoostsFieldNumber = 30;
      private static readonly pb::FieldCodec<global::Backup.Types.OwnedBoost> _repeated_boosts_codec
          = pb::FieldCodec.ForMessage(242, global::Backup.Types.OwnedBoost.Parser);
      private readonly pbc::RepeatedField<global::Backup.Types.OwnedBoost> boosts_ = new pbc::RepeatedField<global::Backup.Types.OwnedBoost>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::Backup.Types.OwnedBoost> Boosts {
        get { return boosts_; }
      }

      /// <summary>Field number for the "piggy_full_alert_shown" field.</summary>
      public const int PiggyFullAlertShownFieldNumber = 31;
      private bool piggyFullAlertShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool PiggyFullAlertShown {
        get { return piggyFullAlertShown_; }
        set {
          piggyFullAlertShown_ = value;
        }
      }

      /// <summary>Field number for the "total_time_cheats_detected" field.</summary>
      public const int TotalTimeCheatsDetectedFieldNumber = 32;
      private uint totalTimeCheatsDetected_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint TotalTimeCheatsDetected {
        get { return totalTimeCheatsDetected_; }
        set {
          totalTimeCheatsDetected_ = value;
        }
      }

      /// <summary>Field number for the "prestige_soul_boost_cash" field.</summary>
      public const int PrestigeSoulBoostCashFieldNumber = 33;
      private double prestigeSoulBoostCash_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double PrestigeSoulBoostCash {
        get { return prestigeSoulBoostCash_; }
        set {
          prestigeSoulBoostCash_ = value;
        }
      }

      /// <summary>Field number for the "soul_eggs" field.</summary>
      public const int SoulEggsFieldNumber = 34;
      private double soulEggs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double SoulEggs {
        get { return soulEggs_; }
        set {
          soulEggs_ = value;
        }
      }

      /// <summary>Field number for the "unclaimed_soul_eggs" field.</summary>
      public const int UnclaimedSoulEggsFieldNumber = 35;
      private double unclaimedSoulEggs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double UnclaimedSoulEggs {
        get { return unclaimedSoulEggs_; }
        set {
          unclaimedSoulEggs_ = value;
        }
      }

      /// <summary>Field number for the "force_elite_contracts" field.</summary>
      public const int ForceEliteContractsFieldNumber = 36;
      private bool forceEliteContracts_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool ForceEliteContracts {
        get { return forceEliteContracts_; }
        set {
          forceEliteContracts_ = value;
        }
      }

      /// <summary>Field number for the "new_player_event_end_time" field.</summary>
      public const int NewPlayerEventEndTimeFieldNumber = 37;
      private double newPlayerEventEndTime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double NewPlayerEventEndTime {
        get { return newPlayerEventEndTime_; }
        set {
          newPlayerEventEndTime_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Game);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Game other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (MaxEggReached != other.MaxEggReached) return false;
        if (GoldenEggsEarned != other.GoldenEggsEarned) return false;
        if (GoldenEggsSpent != other.GoldenEggsSpent) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrestigeCashEarned, other.PrestigeCashEarned)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LifetimeCashEarned, other.LifetimeCashEarned)) return false;
        if (PiggyBank != other.PiggyBank) return false;
        if (PermitLevel != other.PermitLevel) return false;
        if(!epicResearch_.Equals(other.epicResearch_)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NextDailyGiftTime, other.NextDailyGiftTime)) return false;
        if(!news_.Equals(other.news_)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastNewsTime, other.LastNewsTime)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CurrentMultiplier, other.CurrentMultiplier)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CurrentMultiplierExpiration, other.CurrentMultiplierExpiration)) return false;
        if(!achievements_.Equals(other.achievements_)) return false;
        if (UnclaimedGoldenEggs != other.UnclaimedGoldenEggs) return false;
        if(!maxFarmSizeReached_.Equals(other.maxFarmSizeReached_)) return false;
        if(!eggMedalLevels_.Equals(other.eggMedalLevels_)) return false;
        if (LastDailyGiftCollectedDay != other.LastDailyGiftCollectedDay) return false;
        if (CurrentFarm != other.CurrentFarm) return false;
        if (ProphecyEggs != other.ProphecyEggs) return false;
        if (UnclaimedProphecyEggs != other.UnclaimedProphecyEggs) return false;
        if (LongIdleNotificationSet != other.LongIdleNotificationSet) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LongIdleNotificationThreshold, other.LongIdleNotificationThreshold)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LongIdleReward, other.LongIdleReward)) return false;
        if (DailyGiftIndex != other.DailyGiftIndex) return false;
        if (HyperloopStation != other.HyperloopStation) return false;
        if(!boosts_.Equals(other.boosts_)) return false;
        if (PiggyFullAlertShown != other.PiggyFullAlertShown) return false;
        if (TotalTimeCheatsDetected != other.TotalTimeCheatsDetected) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrestigeSoulBoostCash, other.PrestigeSoulBoostCash)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SoulEggs, other.SoulEggs)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnclaimedSoulEggs, other.UnclaimedSoulEggs)) return false;
        if (ForceEliteContracts != other.ForceEliteContracts) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NewPlayerEventEndTime, other.NewPlayerEventEndTime)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (MaxEggReached != global::Egg.UndefinedEgg) hash ^= MaxEggReached.GetHashCode();
        if (GoldenEggsEarned != 0UL) hash ^= GoldenEggsEarned.GetHashCode();
        if (GoldenEggsSpent != 0UL) hash ^= GoldenEggsSpent.GetHashCode();
        if (PrestigeCashEarned != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrestigeCashEarned);
        if (LifetimeCashEarned != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LifetimeCashEarned);
        if (PiggyBank != 0UL) hash ^= PiggyBank.GetHashCode();
        if (PermitLevel != 0) hash ^= PermitLevel.GetHashCode();
        hash ^= epicResearch_.GetHashCode();
        if (NextDailyGiftTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NextDailyGiftTime);
        hash ^= news_.GetHashCode();
        if (LastNewsTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastNewsTime);
        if (CurrentMultiplier != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CurrentMultiplier);
        if (CurrentMultiplierExpiration != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CurrentMultiplierExpiration);
        hash ^= achievements_.GetHashCode();
        if (UnclaimedGoldenEggs != 0UL) hash ^= UnclaimedGoldenEggs.GetHashCode();
        hash ^= maxFarmSizeReached_.GetHashCode();
        hash ^= eggMedalLevels_.GetHashCode();
        if (LastDailyGiftCollectedDay != 0) hash ^= LastDailyGiftCollectedDay.GetHashCode();
        if (CurrentFarm != 0) hash ^= CurrentFarm.GetHashCode();
        if (ProphecyEggs != 0UL) hash ^= ProphecyEggs.GetHashCode();
        if (UnclaimedProphecyEggs != 0) hash ^= UnclaimedProphecyEggs.GetHashCode();
        if (LongIdleNotificationSet != false) hash ^= LongIdleNotificationSet.GetHashCode();
        if (LongIdleNotificationThreshold != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LongIdleNotificationThreshold);
        if (LongIdleReward != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LongIdleReward);
        if (DailyGiftIndex != 0) hash ^= DailyGiftIndex.GetHashCode();
        if (HyperloopStation != false) hash ^= HyperloopStation.GetHashCode();
        hash ^= boosts_.GetHashCode();
        if (PiggyFullAlertShown != false) hash ^= PiggyFullAlertShown.GetHashCode();
        if (TotalTimeCheatsDetected != 0) hash ^= TotalTimeCheatsDetected.GetHashCode();
        if (PrestigeSoulBoostCash != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrestigeSoulBoostCash);
        if (SoulEggs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SoulEggs);
        if (UnclaimedSoulEggs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnclaimedSoulEggs);
        if (ForceEliteContracts != false) hash ^= ForceEliteContracts.GetHashCode();
        if (NewPlayerEventEndTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NewPlayerEventEndTime);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (MaxEggReached != global::Egg.UndefinedEgg) {
          output.WriteRawTag(8);
          output.WriteEnum((int) MaxEggReached);
        }
        if (GoldenEggsEarned != 0UL) {
          output.WriteRawTag(16);
          output.WriteUInt64(GoldenEggsEarned);
        }
        if (GoldenEggsSpent != 0UL) {
          output.WriteRawTag(24);
          output.WriteUInt64(GoldenEggsSpent);
        }
        if (PrestigeCashEarned != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(PrestigeCashEarned);
        }
        if (LifetimeCashEarned != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(LifetimeCashEarned);
        }
        if (PiggyBank != 0UL) {
          output.WriteRawTag(56);
          output.WriteUInt64(PiggyBank);
        }
        if (PermitLevel != 0) {
          output.WriteRawTag(64);
          output.WriteUInt32(PermitLevel);
        }
        epicResearch_.WriteTo(output, _repeated_epicResearch_codec);
        if (NextDailyGiftTime != 0D) {
          output.WriteRawTag(81);
          output.WriteDouble(NextDailyGiftTime);
        }
        news_.WriteTo(output, _repeated_news_codec);
        if (LastNewsTime != 0D) {
          output.WriteRawTag(97);
          output.WriteDouble(LastNewsTime);
        }
        if (CurrentMultiplier != 0D) {
          output.WriteRawTag(105);
          output.WriteDouble(CurrentMultiplier);
        }
        if (CurrentMultiplierExpiration != 0D) {
          output.WriteRawTag(113);
          output.WriteDouble(CurrentMultiplierExpiration);
        }
        achievements_.WriteTo(output, _repeated_achievements_codec);
        if (UnclaimedGoldenEggs != 0UL) {
          output.WriteRawTag(128, 1);
          output.WriteUInt64(UnclaimedGoldenEggs);
        }
        maxFarmSizeReached_.WriteTo(output, _repeated_maxFarmSizeReached_codec);
        eggMedalLevels_.WriteTo(output, _repeated_eggMedalLevels_codec);
        if (LastDailyGiftCollectedDay != 0) {
          output.WriteRawTag(160, 1);
          output.WriteUInt32(LastDailyGiftCollectedDay);
        }
        if (CurrentFarm != 0) {
          output.WriteRawTag(176, 1);
          output.WriteUInt32(CurrentFarm);
        }
        if (ProphecyEggs != 0UL) {
          output.WriteRawTag(184, 1);
          output.WriteUInt64(ProphecyEggs);
        }
        if (UnclaimedProphecyEggs != 0) {
          output.WriteRawTag(192, 1);
          output.WriteUInt32(UnclaimedProphecyEggs);
        }
        if (LongIdleNotificationSet != false) {
          output.WriteRawTag(200, 1);
          output.WriteBool(LongIdleNotificationSet);
        }
        if (LongIdleNotificationThreshold != 0D) {
          output.WriteRawTag(209, 1);
          output.WriteDouble(LongIdleNotificationThreshold);
        }
        if (LongIdleReward != 0D) {
          output.WriteRawTag(217, 1);
          output.WriteDouble(LongIdleReward);
        }
        if (DailyGiftIndex != 0) {
          output.WriteRawTag(224, 1);
          output.WriteUInt32(DailyGiftIndex);
        }
        if (HyperloopStation != false) {
          output.WriteRawTag(232, 1);
          output.WriteBool(HyperloopStation);
        }
        boosts_.WriteTo(output, _repeated_boosts_codec);
        if (PiggyFullAlertShown != false) {
          output.WriteRawTag(248, 1);
          output.WriteBool(PiggyFullAlertShown);
        }
        if (TotalTimeCheatsDetected != 0) {
          output.WriteRawTag(128, 2);
          output.WriteUInt32(TotalTimeCheatsDetected);
        }
        if (PrestigeSoulBoostCash != 0D) {
          output.WriteRawTag(137, 2);
          output.WriteDouble(PrestigeSoulBoostCash);
        }
        if (SoulEggs != 0D) {
          output.WriteRawTag(145, 2);
          output.WriteDouble(SoulEggs);
        }
        if (UnclaimedSoulEggs != 0D) {
          output.WriteRawTag(153, 2);
          output.WriteDouble(UnclaimedSoulEggs);
        }
        if (ForceEliteContracts != false) {
          output.WriteRawTag(160, 2);
          output.WriteBool(ForceEliteContracts);
        }
        if (NewPlayerEventEndTime != 0D) {
          output.WriteRawTag(169, 2);
          output.WriteDouble(NewPlayerEventEndTime);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (MaxEggReached != global::Egg.UndefinedEgg) {
          output.WriteRawTag(8);
          output.WriteEnum((int) MaxEggReached);
        }
        if (GoldenEggsEarned != 0UL) {
          output.WriteRawTag(16);
          output.WriteUInt64(GoldenEggsEarned);
        }
        if (GoldenEggsSpent != 0UL) {
          output.WriteRawTag(24);
          output.WriteUInt64(GoldenEggsSpent);
        }
        if (PrestigeCashEarned != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(PrestigeCashEarned);
        }
        if (LifetimeCashEarned != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(LifetimeCashEarned);
        }
        if (PiggyBank != 0UL) {
          output.WriteRawTag(56);
          output.WriteUInt64(PiggyBank);
        }
        if (PermitLevel != 0) {
          output.WriteRawTag(64);
          output.WriteUInt32(PermitLevel);
        }
        epicResearch_.WriteTo(ref output, _repeated_epicResearch_codec);
        if (NextDailyGiftTime != 0D) {
          output.WriteRawTag(81);
          output.WriteDouble(NextDailyGiftTime);
        }
        news_.WriteTo(ref output, _repeated_news_codec);
        if (LastNewsTime != 0D) {
          output.WriteRawTag(97);
          output.WriteDouble(LastNewsTime);
        }
        if (CurrentMultiplier != 0D) {
          output.WriteRawTag(105);
          output.WriteDouble(CurrentMultiplier);
        }
        if (CurrentMultiplierExpiration != 0D) {
          output.WriteRawTag(113);
          output.WriteDouble(CurrentMultiplierExpiration);
        }
        achievements_.WriteTo(ref output, _repeated_achievements_codec);
        if (UnclaimedGoldenEggs != 0UL) {
          output.WriteRawTag(128, 1);
          output.WriteUInt64(UnclaimedGoldenEggs);
        }
        maxFarmSizeReached_.WriteTo(ref output, _repeated_maxFarmSizeReached_codec);
        eggMedalLevels_.WriteTo(ref output, _repeated_eggMedalLevels_codec);
        if (LastDailyGiftCollectedDay != 0) {
          output.WriteRawTag(160, 1);
          output.WriteUInt32(LastDailyGiftCollectedDay);
        }
        if (CurrentFarm != 0) {
          output.WriteRawTag(176, 1);
          output.WriteUInt32(CurrentFarm);
        }
        if (ProphecyEggs != 0UL) {
          output.WriteRawTag(184, 1);
          output.WriteUInt64(ProphecyEggs);
        }
        if (UnclaimedProphecyEggs != 0) {
          output.WriteRawTag(192, 1);
          output.WriteUInt32(UnclaimedProphecyEggs);
        }
        if (LongIdleNotificationSet != false) {
          output.WriteRawTag(200, 1);
          output.WriteBool(LongIdleNotificationSet);
        }
        if (LongIdleNotificationThreshold != 0D) {
          output.WriteRawTag(209, 1);
          output.WriteDouble(LongIdleNotificationThreshold);
        }
        if (LongIdleReward != 0D) {
          output.WriteRawTag(217, 1);
          output.WriteDouble(LongIdleReward);
        }
        if (DailyGiftIndex != 0) {
          output.WriteRawTag(224, 1);
          output.WriteUInt32(DailyGiftIndex);
        }
        if (HyperloopStation != false) {
          output.WriteRawTag(232, 1);
          output.WriteBool(HyperloopStation);
        }
        boosts_.WriteTo(ref output, _repeated_boosts_codec);
        if (PiggyFullAlertShown != false) {
          output.WriteRawTag(248, 1);
          output.WriteBool(PiggyFullAlertShown);
        }
        if (TotalTimeCheatsDetected != 0) {
          output.WriteRawTag(128, 2);
          output.WriteUInt32(TotalTimeCheatsDetected);
        }
        if (PrestigeSoulBoostCash != 0D) {
          output.WriteRawTag(137, 2);
          output.WriteDouble(PrestigeSoulBoostCash);
        }
        if (SoulEggs != 0D) {
          output.WriteRawTag(145, 2);
          output.WriteDouble(SoulEggs);
        }
        if (UnclaimedSoulEggs != 0D) {
          output.WriteRawTag(153, 2);
          output.WriteDouble(UnclaimedSoulEggs);
        }
        if (ForceEliteContracts != false) {
          output.WriteRawTag(160, 2);
          output.WriteBool(ForceEliteContracts);
        }
        if (NewPlayerEventEndTime != 0D) {
          output.WriteRawTag(169, 2);
          output.WriteDouble(NewPlayerEventEndTime);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (MaxEggReached != global::Egg.UndefinedEgg) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MaxEggReached);
        }
        if (GoldenEggsEarned != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GoldenEggsEarned);
        }
        if (GoldenEggsSpent != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GoldenEggsSpent);
        }
        if (PrestigeCashEarned != 0D) {
          size += 1 + 8;
        }
        if (LifetimeCashEarned != 0D) {
          size += 1 + 8;
        }
        if (PiggyBank != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PiggyBank);
        }
        if (PermitLevel != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PermitLevel);
        }
        size += epicResearch_.CalculateSize(_repeated_epicResearch_codec);
        if (NextDailyGiftTime != 0D) {
          size += 1 + 8;
        }
        size += news_.CalculateSize(_repeated_news_codec);
        if (LastNewsTime != 0D) {
          size += 1 + 8;
        }
        if (CurrentMultiplier != 0D) {
          size += 1 + 8;
        }
        if (CurrentMultiplierExpiration != 0D) {
          size += 1 + 8;
        }
        size += achievements_.CalculateSize(_repeated_achievements_codec);
        if (UnclaimedGoldenEggs != 0UL) {
          size += 2 + pb::CodedOutputStream.ComputeUInt64Size(UnclaimedGoldenEggs);
        }
        size += maxFarmSizeReached_.CalculateSize(_repeated_maxFarmSizeReached_codec);
        size += eggMedalLevels_.CalculateSize(_repeated_eggMedalLevels_codec);
        if (LastDailyGiftCollectedDay != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LastDailyGiftCollectedDay);
        }
        if (CurrentFarm != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CurrentFarm);
        }
        if (ProphecyEggs != 0UL) {
          size += 2 + pb::CodedOutputStream.ComputeUInt64Size(ProphecyEggs);
        }
        if (UnclaimedProphecyEggs != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnclaimedProphecyEggs);
        }
        if (LongIdleNotificationSet != false) {
          size += 2 + 1;
        }
        if (LongIdleNotificationThreshold != 0D) {
          size += 2 + 8;
        }
        if (LongIdleReward != 0D) {
          size += 2 + 8;
        }
        if (DailyGiftIndex != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DailyGiftIndex);
        }
        if (HyperloopStation != false) {
          size += 2 + 1;
        }
        size += boosts_.CalculateSize(_repeated_boosts_codec);
        if (PiggyFullAlertShown != false) {
          size += 2 + 1;
        }
        if (TotalTimeCheatsDetected != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TotalTimeCheatsDetected);
        }
        if (PrestigeSoulBoostCash != 0D) {
          size += 2 + 8;
        }
        if (SoulEggs != 0D) {
          size += 2 + 8;
        }
        if (UnclaimedSoulEggs != 0D) {
          size += 2 + 8;
        }
        if (ForceEliteContracts != false) {
          size += 2 + 1;
        }
        if (NewPlayerEventEndTime != 0D) {
          size += 2 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Game other) {
        if (other == null) {
          return;
        }
        if (other.MaxEggReached != global::Egg.UndefinedEgg) {
          MaxEggReached = other.MaxEggReached;
        }
        if (other.GoldenEggsEarned != 0UL) {
          GoldenEggsEarned = other.GoldenEggsEarned;
        }
        if (other.GoldenEggsSpent != 0UL) {
          GoldenEggsSpent = other.GoldenEggsSpent;
        }
        if (other.PrestigeCashEarned != 0D) {
          PrestigeCashEarned = other.PrestigeCashEarned;
        }
        if (other.LifetimeCashEarned != 0D) {
          LifetimeCashEarned = other.LifetimeCashEarned;
        }
        if (other.PiggyBank != 0UL) {
          PiggyBank = other.PiggyBank;
        }
        if (other.PermitLevel != 0) {
          PermitLevel = other.PermitLevel;
        }
        epicResearch_.Add(other.epicResearch_);
        if (other.NextDailyGiftTime != 0D) {
          NextDailyGiftTime = other.NextDailyGiftTime;
        }
        news_.Add(other.news_);
        if (other.LastNewsTime != 0D) {
          LastNewsTime = other.LastNewsTime;
        }
        if (other.CurrentMultiplier != 0D) {
          CurrentMultiplier = other.CurrentMultiplier;
        }
        if (other.CurrentMultiplierExpiration != 0D) {
          CurrentMultiplierExpiration = other.CurrentMultiplierExpiration;
        }
        achievements_.Add(other.achievements_);
        if (other.UnclaimedGoldenEggs != 0UL) {
          UnclaimedGoldenEggs = other.UnclaimedGoldenEggs;
        }
        maxFarmSizeReached_.Add(other.maxFarmSizeReached_);
        eggMedalLevels_.Add(other.eggMedalLevels_);
        if (other.LastDailyGiftCollectedDay != 0) {
          LastDailyGiftCollectedDay = other.LastDailyGiftCollectedDay;
        }
        if (other.CurrentFarm != 0) {
          CurrentFarm = other.CurrentFarm;
        }
        if (other.ProphecyEggs != 0UL) {
          ProphecyEggs = other.ProphecyEggs;
        }
        if (other.UnclaimedProphecyEggs != 0) {
          UnclaimedProphecyEggs = other.UnclaimedProphecyEggs;
        }
        if (other.LongIdleNotificationSet != false) {
          LongIdleNotificationSet = other.LongIdleNotificationSet;
        }
        if (other.LongIdleNotificationThreshold != 0D) {
          LongIdleNotificationThreshold = other.LongIdleNotificationThreshold;
        }
        if (other.LongIdleReward != 0D) {
          LongIdleReward = other.LongIdleReward;
        }
        if (other.DailyGiftIndex != 0) {
          DailyGiftIndex = other.DailyGiftIndex;
        }
        if (other.HyperloopStation != false) {
          HyperloopStation = other.HyperloopStation;
        }
        boosts_.Add(other.boosts_);
        if (other.PiggyFullAlertShown != false) {
          PiggyFullAlertShown = other.PiggyFullAlertShown;
        }
        if (other.TotalTimeCheatsDetected != 0) {
          TotalTimeCheatsDetected = other.TotalTimeCheatsDetected;
        }
        if (other.PrestigeSoulBoostCash != 0D) {
          PrestigeSoulBoostCash = other.PrestigeSoulBoostCash;
        }
        if (other.SoulEggs != 0D) {
          SoulEggs = other.SoulEggs;
        }
        if (other.UnclaimedSoulEggs != 0D) {
          UnclaimedSoulEggs = other.UnclaimedSoulEggs;
        }
        if (other.ForceEliteContracts != false) {
          ForceEliteContracts = other.ForceEliteContracts;
        }
        if (other.NewPlayerEventEndTime != 0D) {
          NewPlayerEventEndTime = other.NewPlayerEventEndTime;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              MaxEggReached = (global::Egg) input.ReadEnum();
              break;
            }
            case 16: {
              GoldenEggsEarned = input.ReadUInt64();
              break;
            }
            case 24: {
              GoldenEggsSpent = input.ReadUInt64();
              break;
            }
            case 41: {
              PrestigeCashEarned = input.ReadDouble();
              break;
            }
            case 49: {
              LifetimeCashEarned = input.ReadDouble();
              break;
            }
            case 56: {
              PiggyBank = input.ReadUInt64();
              break;
            }
            case 64: {
              PermitLevel = input.ReadUInt32();
              break;
            }
            case 74: {
              epicResearch_.AddEntriesFrom(input, _repeated_epicResearch_codec);
              break;
            }
            case 81: {
              NextDailyGiftTime = input.ReadDouble();
              break;
            }
            case 90: {
              news_.AddEntriesFrom(input, _repeated_news_codec);
              break;
            }
            case 97: {
              LastNewsTime = input.ReadDouble();
              break;
            }
            case 105: {
              CurrentMultiplier = input.ReadDouble();
              break;
            }
            case 113: {
              CurrentMultiplierExpiration = input.ReadDouble();
              break;
            }
            case 122: {
              achievements_.AddEntriesFrom(input, _repeated_achievements_codec);
              break;
            }
            case 128: {
              UnclaimedGoldenEggs = input.ReadUInt64();
              break;
            }
            case 146:
            case 144: {
              maxFarmSizeReached_.AddEntriesFrom(input, _repeated_maxFarmSizeReached_codec);
              break;
            }
            case 154:
            case 152: {
              eggMedalLevels_.AddEntriesFrom(input, _repeated_eggMedalLevels_codec);
              break;
            }
            case 160: {
              LastDailyGiftCollectedDay = input.ReadUInt32();
              break;
            }
            case 176: {
              CurrentFarm = input.ReadUInt32();
              break;
            }
            case 184: {
              ProphecyEggs = input.ReadUInt64();
              break;
            }
            case 192: {
              UnclaimedProphecyEggs = input.ReadUInt32();
              break;
            }
            case 200: {
              LongIdleNotificationSet = input.ReadBool();
              break;
            }
            case 209: {
              LongIdleNotificationThreshold = input.ReadDouble();
              break;
            }
            case 217: {
              LongIdleReward = input.ReadDouble();
              break;
            }
            case 224: {
              DailyGiftIndex = input.ReadUInt32();
              break;
            }
            case 232: {
              HyperloopStation = input.ReadBool();
              break;
            }
            case 242: {
              boosts_.AddEntriesFrom(input, _repeated_boosts_codec);
              break;
            }
            case 248: {
              PiggyFullAlertShown = input.ReadBool();
              break;
            }
            case 256: {
              TotalTimeCheatsDetected = input.ReadUInt32();
              break;
            }
            case 265: {
              PrestigeSoulBoostCash = input.ReadDouble();
              break;
            }
            case 273: {
              SoulEggs = input.ReadDouble();
              break;
            }
            case 281: {
              UnclaimedSoulEggs = input.ReadDouble();
              break;
            }
            case 288: {
              ForceEliteContracts = input.ReadBool();
              break;
            }
            case 297: {
              NewPlayerEventEndTime = input.ReadDouble();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              MaxEggReached = (global::Egg) input.ReadEnum();
              break;
            }
            case 16: {
              GoldenEggsEarned = input.ReadUInt64();
              break;
            }
            case 24: {
              GoldenEggsSpent = input.ReadUInt64();
              break;
            }
            case 41: {
              PrestigeCashEarned = input.ReadDouble();
              break;
            }
            case 49: {
              LifetimeCashEarned = input.ReadDouble();
              break;
            }
            case 56: {
              PiggyBank = input.ReadUInt64();
              break;
            }
            case 64: {
              PermitLevel = input.ReadUInt32();
              break;
            }
            case 74: {
              epicResearch_.AddEntriesFrom(ref input, _repeated_epicResearch_codec);
              break;
            }
            case 81: {
              NextDailyGiftTime = input.ReadDouble();
              break;
            }
            case 90: {
              news_.AddEntriesFrom(ref input, _repeated_news_codec);
              break;
            }
            case 97: {
              LastNewsTime = input.ReadDouble();
              break;
            }
            case 105: {
              CurrentMultiplier = input.ReadDouble();
              break;
            }
            case 113: {
              CurrentMultiplierExpiration = input.ReadDouble();
              break;
            }
            case 122: {
              achievements_.AddEntriesFrom(ref input, _repeated_achievements_codec);
              break;
            }
            case 128: {
              UnclaimedGoldenEggs = input.ReadUInt64();
              break;
            }
            case 146:
            case 144: {
              maxFarmSizeReached_.AddEntriesFrom(ref input, _repeated_maxFarmSizeReached_codec);
              break;
            }
            case 154:
            case 152: {
              eggMedalLevels_.AddEntriesFrom(ref input, _repeated_eggMedalLevels_codec);
              break;
            }
            case 160: {
              LastDailyGiftCollectedDay = input.ReadUInt32();
              break;
            }
            case 176: {
              CurrentFarm = input.ReadUInt32();
              break;
            }
            case 184: {
              ProphecyEggs = input.ReadUInt64();
              break;
            }
            case 192: {
              UnclaimedProphecyEggs = input.ReadUInt32();
              break;
            }
            case 200: {
              LongIdleNotificationSet = input.ReadBool();
              break;
            }
            case 209: {
              LongIdleNotificationThreshold = input.ReadDouble();
              break;
            }
            case 217: {
              LongIdleReward = input.ReadDouble();
              break;
            }
            case 224: {
              DailyGiftIndex = input.ReadUInt32();
              break;
            }
            case 232: {
              HyperloopStation = input.ReadBool();
              break;
            }
            case 242: {
              boosts_.AddEntriesFrom(ref input, _repeated_boosts_codec);
              break;
            }
            case 248: {
              PiggyFullAlertShown = input.ReadBool();
              break;
            }
            case 256: {
              TotalTimeCheatsDetected = input.ReadUInt32();
              break;
            }
            case 265: {
              PrestigeSoulBoostCash = input.ReadDouble();
              break;
            }
            case 273: {
              SoulEggs = input.ReadDouble();
              break;
            }
            case 281: {
              UnclaimedSoulEggs = input.ReadDouble();
              break;
            }
            case 288: {
              ForceEliteContracts = input.ReadBool();
              break;
            }
            case 297: {
              NewPlayerEventEndTime = input.ReadDouble();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ArtifactsStatus : pb::IMessage<ArtifactsStatus>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ArtifactsStatus> _parser = new pb::MessageParser<ArtifactsStatus>(() => new ArtifactsStatus());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<ArtifactsStatus> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[9]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ArtifactsStatus() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ArtifactsStatus(ArtifactsStatus other) : this() {
        infusing_ = other.infusing_;
        itemBeingInfused_ = other.itemBeingInfused_ != null ? other.itemBeingInfused_.Clone() : null;
        eggTypeInfusing_ = other.eggTypeInfusing_;
        infusingEggsRequired_ = other.infusingEggsRequired_;
        eggsInfused_ = other.eggsInfused_;
        flowPercentageArtifacts_ = other.flowPercentageArtifacts_;
        fuelingEnabled_ = other.fuelingEnabled_;
        infusingEnabled_ = other.infusingEnabled_;
        lastFueledShip_ = other.lastFueledShip_;
        inventoryScore_ = other.inventoryScore_;
        enabled_ = other.enabled_;
        introShown_ = other.introShown_;
        artifactBeingInfused_ = other.artifactBeingInfused_ != null ? other.artifactBeingInfused_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ArtifactsStatus Clone() {
        return new ArtifactsStatus(this);
      }

      /// <summary>Field number for the "infusing" field.</summary>
      public const int InfusingFieldNumber = 1;
      private bool infusing_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Infusing {
        get { return infusing_; }
        set {
          infusing_ = value;
        }
      }

      /// <summary>Field number for the "item_being_infused" field.</summary>
      public const int ItemBeingInfusedFieldNumber = 2;
      private global::ArtifactInventoryItem itemBeingInfused_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::ArtifactInventoryItem ItemBeingInfused {
        get { return itemBeingInfused_; }
        set {
          itemBeingInfused_ = value;
        }
      }

      /// <summary>Field number for the "egg_type_infusing" field.</summary>
      public const int EggTypeInfusingFieldNumber = 3;
      private global::Egg eggTypeInfusing_ = global::Egg.UndefinedEgg;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Egg EggTypeInfusing {
        get { return eggTypeInfusing_; }
        set {
          eggTypeInfusing_ = value;
        }
      }

      /// <summary>Field number for the "infusing_eggs_required" field.</summary>
      public const int InfusingEggsRequiredFieldNumber = 4;
      private double infusingEggsRequired_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double InfusingEggsRequired {
        get { return infusingEggsRequired_; }
        set {
          infusingEggsRequired_ = value;
        }
      }

      /// <summary>Field number for the "eggs_infused" field.</summary>
      public const int EggsInfusedFieldNumber = 5;
      private double eggsInfused_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double EggsInfused {
        get { return eggsInfused_; }
        set {
          eggsInfused_ = value;
        }
      }

      /// <summary>Field number for the "flow_percentage_artifacts" field.</summary>
      public const int FlowPercentageArtifactsFieldNumber = 6;
      private double flowPercentageArtifacts_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double FlowPercentageArtifacts {
        get { return flowPercentageArtifacts_; }
        set {
          flowPercentageArtifacts_ = value;
        }
      }

      /// <summary>Field number for the "fueling_enabled" field.</summary>
      public const int FuelingEnabledFieldNumber = 7;
      private bool fuelingEnabled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool FuelingEnabled {
        get { return fuelingEnabled_; }
        set {
          fuelingEnabled_ = value;
        }
      }

      /// <summary>Field number for the "infusing_enabled" field.</summary>
      public const int InfusingEnabledFieldNumber = 8;
      private bool infusingEnabled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool InfusingEnabled {
        get { return infusingEnabled_; }
        set {
          infusingEnabled_ = value;
        }
      }

      /// <summary>Field number for the "last_fueled_ship" field.</summary>
      public const int LastFueledShipFieldNumber = 9;
      private global::Mission.Types.Spaceship lastFueledShip_ = global::Mission.Types.Spaceship.ChickenOne;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Mission.Types.Spaceship LastFueledShip {
        get { return lastFueledShip_; }
        set {
          lastFueledShip_ = value;
        }
      }

      /// <summary>Field number for the "inventory_score" field.</summary>
      public const int InventoryScoreFieldNumber = 10;
      private double inventoryScore_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double InventoryScore {
        get { return inventoryScore_; }
        set {
          inventoryScore_ = value;
        }
      }

      /// <summary>Field number for the "enabled" field.</summary>
      public const int EnabledFieldNumber = 11;
      private bool enabled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Enabled {
        get { return enabled_; }
        set {
          enabled_ = value;
        }
      }

      /// <summary>Field number for the "intro_shown" field.</summary>
      public const int IntroShownFieldNumber = 12;
      private bool introShown_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IntroShown {
        get { return introShown_; }
        set {
          introShown_ = value;
        }
      }

      /// <summary>Field number for the "artifact_being_infused" field.</summary>
      public const int ArtifactBeingInfusedFieldNumber = 13;
      private global::Artifact artifactBeingInfused_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Artifact ArtifactBeingInfused {
        get { return artifactBeingInfused_; }
        set {
          artifactBeingInfused_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as ArtifactsStatus);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(ArtifactsStatus other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Infusing != other.Infusing) return false;
        if (!object.Equals(ItemBeingInfused, other.ItemBeingInfused)) return false;
        if (EggTypeInfusing != other.EggTypeInfusing) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InfusingEggsRequired, other.InfusingEggsRequired)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EggsInfused, other.EggsInfused)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FlowPercentageArtifacts, other.FlowPercentageArtifacts)) return false;
        if (FuelingEnabled != other.FuelingEnabled) return false;
        if (InfusingEnabled != other.InfusingEnabled) return false;
        if (LastFueledShip != other.LastFueledShip) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InventoryScore, other.InventoryScore)) return false;
        if (Enabled != other.Enabled) return false;
        if (IntroShown != other.IntroShown) return false;
        if (!object.Equals(ArtifactBeingInfused, other.ArtifactBeingInfused)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Infusing != false) hash ^= Infusing.GetHashCode();
        if (itemBeingInfused_ != null) hash ^= ItemBeingInfused.GetHashCode();
        if (EggTypeInfusing != global::Egg.UndefinedEgg) hash ^= EggTypeInfusing.GetHashCode();
        if (InfusingEggsRequired != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InfusingEggsRequired);
        if (EggsInfused != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EggsInfused);
        if (FlowPercentageArtifacts != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FlowPercentageArtifacts);
        if (FuelingEnabled != false) hash ^= FuelingEnabled.GetHashCode();
        if (InfusingEnabled != false) hash ^= InfusingEnabled.GetHashCode();
        if (LastFueledShip != global::Mission.Types.Spaceship.ChickenOne) hash ^= LastFueledShip.GetHashCode();
        if (InventoryScore != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InventoryScore);
        if (Enabled != false) hash ^= Enabled.GetHashCode();
        if (IntroShown != false) hash ^= IntroShown.GetHashCode();
        if (artifactBeingInfused_ != null) hash ^= ArtifactBeingInfused.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Infusing != false) {
          output.WriteRawTag(8);
          output.WriteBool(Infusing);
        }
        if (itemBeingInfused_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(ItemBeingInfused);
        }
        if (EggTypeInfusing != global::Egg.UndefinedEgg) {
          output.WriteRawTag(24);
          output.WriteEnum((int) EggTypeInfusing);
        }
        if (InfusingEggsRequired != 0D) {
          output.WriteRawTag(33);
          output.WriteDouble(InfusingEggsRequired);
        }
        if (EggsInfused != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(EggsInfused);
        }
        if (FlowPercentageArtifacts != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(FlowPercentageArtifacts);
        }
        if (FuelingEnabled != false) {
          output.WriteRawTag(56);
          output.WriteBool(FuelingEnabled);
        }
        if (InfusingEnabled != false) {
          output.WriteRawTag(64);
          output.WriteBool(InfusingEnabled);
        }
        if (LastFueledShip != global::Mission.Types.Spaceship.ChickenOne) {
          output.WriteRawTag(72);
          output.WriteEnum((int) LastFueledShip);
        }
        if (InventoryScore != 0D) {
          output.WriteRawTag(81);
          output.WriteDouble(InventoryScore);
        }
        if (Enabled != false) {
          output.WriteRawTag(88);
          output.WriteBool(Enabled);
        }
        if (IntroShown != false) {
          output.WriteRawTag(96);
          output.WriteBool(IntroShown);
        }
        if (artifactBeingInfused_ != null) {
          output.WriteRawTag(106);
          output.WriteMessage(ArtifactBeingInfused);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Infusing != false) {
          output.WriteRawTag(8);
          output.WriteBool(Infusing);
        }
        if (itemBeingInfused_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(ItemBeingInfused);
        }
        if (EggTypeInfusing != global::Egg.UndefinedEgg) {
          output.WriteRawTag(24);
          output.WriteEnum((int) EggTypeInfusing);
        }
        if (InfusingEggsRequired != 0D) {
          output.WriteRawTag(33);
          output.WriteDouble(InfusingEggsRequired);
        }
        if (EggsInfused != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(EggsInfused);
        }
        if (FlowPercentageArtifacts != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(FlowPercentageArtifacts);
        }
        if (FuelingEnabled != false) {
          output.WriteRawTag(56);
          output.WriteBool(FuelingEnabled);
        }
        if (InfusingEnabled != false) {
          output.WriteRawTag(64);
          output.WriteBool(InfusingEnabled);
        }
        if (LastFueledShip != global::Mission.Types.Spaceship.ChickenOne) {
          output.WriteRawTag(72);
          output.WriteEnum((int) LastFueledShip);
        }
        if (InventoryScore != 0D) {
          output.WriteRawTag(81);
          output.WriteDouble(InventoryScore);
        }
        if (Enabled != false) {
          output.WriteRawTag(88);
          output.WriteBool(Enabled);
        }
        if (IntroShown != false) {
          output.WriteRawTag(96);
          output.WriteBool(IntroShown);
        }
        if (artifactBeingInfused_ != null) {
          output.WriteRawTag(106);
          output.WriteMessage(ArtifactBeingInfused);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Infusing != false) {
          size += 1 + 1;
        }
        if (itemBeingInfused_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemBeingInfused);
        }
        if (EggTypeInfusing != global::Egg.UndefinedEgg) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EggTypeInfusing);
        }
        if (InfusingEggsRequired != 0D) {
          size += 1 + 8;
        }
        if (EggsInfused != 0D) {
          size += 1 + 8;
        }
        if (FlowPercentageArtifacts != 0D) {
          size += 1 + 8;
        }
        if (FuelingEnabled != false) {
          size += 1 + 1;
        }
        if (InfusingEnabled != false) {
          size += 1 + 1;
        }
        if (LastFueledShip != global::Mission.Types.Spaceship.ChickenOne) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LastFueledShip);
        }
        if (InventoryScore != 0D) {
          size += 1 + 8;
        }
        if (Enabled != false) {
          size += 1 + 1;
        }
        if (IntroShown != false) {
          size += 1 + 1;
        }
        if (artifactBeingInfused_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactBeingInfused);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(ArtifactsStatus other) {
        if (other == null) {
          return;
        }
        if (other.Infusing != false) {
          Infusing = other.Infusing;
        }
        if (other.itemBeingInfused_ != null) {
          if (itemBeingInfused_ == null) {
            ItemBeingInfused = new global::ArtifactInventoryItem();
          }
          ItemBeingInfused.MergeFrom(other.ItemBeingInfused);
        }
        if (other.EggTypeInfusing != global::Egg.UndefinedEgg) {
          EggTypeInfusing = other.EggTypeInfusing;
        }
        if (other.InfusingEggsRequired != 0D) {
          InfusingEggsRequired = other.InfusingEggsRequired;
        }
        if (other.EggsInfused != 0D) {
          EggsInfused = other.EggsInfused;
        }
        if (other.FlowPercentageArtifacts != 0D) {
          FlowPercentageArtifacts = other.FlowPercentageArtifacts;
        }
        if (other.FuelingEnabled != false) {
          FuelingEnabled = other.FuelingEnabled;
        }
        if (other.InfusingEnabled != false) {
          InfusingEnabled = other.InfusingEnabled;
        }
        if (other.LastFueledShip != global::Mission.Types.Spaceship.ChickenOne) {
          LastFueledShip = other.LastFueledShip;
        }
        if (other.InventoryScore != 0D) {
          InventoryScore = other.InventoryScore;
        }
        if (other.Enabled != false) {
          Enabled = other.Enabled;
        }
        if (other.IntroShown != false) {
          IntroShown = other.IntroShown;
        }
        if (other.artifactBeingInfused_ != null) {
          if (artifactBeingInfused_ == null) {
            ArtifactBeingInfused = new global::Artifact();
          }
          ArtifactBeingInfused.MergeFrom(other.ArtifactBeingInfused);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Infusing = input.ReadBool();
              break;
            }
            case 18: {
              if (itemBeingInfused_ == null) {
                ItemBeingInfused = new global::ArtifactInventoryItem();
              }
              input.ReadMessage(ItemBeingInfused);
              break;
            }
            case 24: {
              EggTypeInfusing = (global::Egg) input.ReadEnum();
              break;
            }
            case 33: {
              InfusingEggsRequired = input.ReadDouble();
              break;
            }
            case 41: {
              EggsInfused = input.ReadDouble();
              break;
            }
            case 49: {
              FlowPercentageArtifacts = input.ReadDouble();
              break;
            }
            case 56: {
              FuelingEnabled = input.ReadBool();
              break;
            }
            case 64: {
              InfusingEnabled = input.ReadBool();
              break;
            }
            case 72: {
              LastFueledShip = (global::Mission.Types.Spaceship) input.ReadEnum();
              break;
            }
            case 81: {
              InventoryScore = input.ReadDouble();
              break;
            }
            case 88: {
              Enabled = input.ReadBool();
              break;
            }
            case 96: {
              IntroShown = input.ReadBool();
              break;
            }
            case 106: {
              if (artifactBeingInfused_ == null) {
                ArtifactBeingInfused = new global::Artifact();
              }
              input.ReadMessage(ArtifactBeingInfused);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Infusing = input.ReadBool();
              break;
            }
            case 18: {
              if (itemBeingInfused_ == null) {
                ItemBeingInfused = new global::ArtifactInventoryItem();
              }
              input.ReadMessage(ItemBeingInfused);
              break;
            }
            case 24: {
              EggTypeInfusing = (global::Egg) input.ReadEnum();
              break;
            }
            case 33: {
              InfusingEggsRequired = input.ReadDouble();
              break;
            }
            case 41: {
              EggsInfused = input.ReadDouble();
              break;
            }
            case 49: {
              FlowPercentageArtifacts = input.ReadDouble();
              break;
            }
            case 56: {
              FuelingEnabled = input.ReadBool();
              break;
            }
            case 64: {
              InfusingEnabled = input.ReadBool();
              break;
            }
            case 72: {
              LastFueledShip = (global::Mission.Types.Spaceship) input.ReadEnum();
              break;
            }
            case 81: {
              InventoryScore = input.ReadDouble();
              break;
            }
            case 88: {
              Enabled = input.ReadBool();
              break;
            }
            case 96: {
              IntroShown = input.ReadBool();
              break;
            }
            case 106: {
              if (artifactBeingInfused_ == null) {
                ArtifactBeingInfused = new global::Artifact();
              }
              input.ReadMessage(ArtifactBeingInfused);
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Farm : pb::IMessage<Farm>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Farm> _parser = new pb::MessageParser<Farm>(() => new Farm());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Farm> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[10]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Farm() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Farm(Farm other) : this() {
        eggType_ = other.eggType_;
        cashEarned_ = other.cashEarned_;
        cashSpent_ = other.cashSpent_;
        unclaimedCash_ = other.unclaimedCash_;
        lastStepTime_ = other.lastStepTime_;
        numChickens_ = other.numChickens_;
        numChickensUnsettled_ = other.numChickensUnsettled_;
        numChickensRunning_ = other.numChickensRunning_;
        eggsLaid_ = other.eggsLaid_;
        eggsPaidFor_ = other.eggsPaidFor_;
        silosOwned_ = other.silosOwned_;
        habs_ = other.habs_.Clone();
        habPopulations_ = other.habPopulations_.Clone();
        habPopulationInbounds_ = other.habPopulationInbounds_.Clone();
        habIncubatorPopulations_ = other.habIncubatorPopulations_.Clone();
        hatcheryPopulation_ = other.hatcheryPopulation_;
        vehicles_ = other.vehicles_.Clone();
        commonResearch_ = other.commonResearch_.Clone();
        farmType_ = other.farmType_;
        contractId_ = other.contractId_;
        hyperloopCars_ = other.hyperloopCars_.Clone();
        activeBoosts_ = other.activeBoosts_.Clone();
        timeCheatsDetected_ = other.timeCheatsDetected_;
        timeCheatDebt_ = other.timeCheatDebt_;
        boostTokensReceived_ = other.boostTokensReceived_;
        boostTokensSpent_ = other.boostTokensSpent_;
        unclaimedBoostTokens_ = other.unclaimedBoostTokens_;
        boostTokensGiven_ = other.boostTokensGiven_;
        gametimeUntilNextBoostToken_ = other.gametimeUntilNextBoostToken_;
        eggsShipped_ = other.eggsShipped_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Farm Clone() {
        return new Farm(this);
      }

      /// <summary>Field number for the "egg_type" field.</summary>
      public const int EggTypeFieldNumber = 1;
      private global::Egg eggType_ = global::Egg.UndefinedEgg;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Egg EggType {
        get { return eggType_; }
        set {
          eggType_ = value;
        }
      }

      /// <summary>Field number for the "cash_earned" field.</summary>
      public const int CashEarnedFieldNumber = 2;
      private double cashEarned_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double CashEarned {
        get { return cashEarned_; }
        set {
          cashEarned_ = value;
        }
      }

      /// <summary>Field number for the "cash_spent" field.</summary>
      public const int CashSpentFieldNumber = 3;
      private double cashSpent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double CashSpent {
        get { return cashSpent_; }
        set {
          cashSpent_ = value;
        }
      }

      /// <summary>Field number for the "unclaimed_cash" field.</summary>
      public const int UnclaimedCashFieldNumber = 4;
      private double unclaimedCash_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double UnclaimedCash {
        get { return unclaimedCash_; }
        set {
          unclaimedCash_ = value;
        }
      }

      /// <summary>Field number for the "last_step_time" field.</summary>
      public const int LastStepTimeFieldNumber = 5;
      private double lastStepTime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double LastStepTime {
        get { return lastStepTime_; }
        set {
          lastStepTime_ = value;
        }
      }

      /// <summary>Field number for the "num_chickens" field.</summary>
      public const int NumChickensFieldNumber = 6;
      private ulong numChickens_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong NumChickens {
        get { return numChickens_; }
        set {
          numChickens_ = value;
        }
      }

      /// <summary>Field number for the "num_chickens_unsettled" field.</summary>
      public const int NumChickensUnsettledFieldNumber = 7;
      private ulong numChickensUnsettled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong NumChickensUnsettled {
        get { return numChickensUnsettled_; }
        set {
          numChickensUnsettled_ = value;
        }
      }

      /// <summary>Field number for the "num_chickens_running" field.</summary>
      public const int NumChickensRunningFieldNumber = 8;
      private ulong numChickensRunning_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong NumChickensRunning {
        get { return numChickensRunning_; }
        set {
          numChickensRunning_ = value;
        }
      }

      /// <summary>Field number for the "eggs_laid" field.</summary>
      public const int EggsLaidFieldNumber = 9;
      private double eggsLaid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double EggsLaid {
        get { return eggsLaid_; }
        set {
          eggsLaid_ = value;
        }
      }

      /// <summary>Field number for the "eggs_paid_for" field.</summary>
      public const int EggsPaidForFieldNumber = 10;
      private double eggsPaidFor_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double EggsPaidFor {
        get { return eggsPaidFor_; }
        set {
          eggsPaidFor_ = value;
        }
      }

      /// <summary>Field number for the "silos_owned" field.</summary>
      public const int SilosOwnedFieldNumber = 11;
      private uint silosOwned_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint SilosOwned {
        get { return silosOwned_; }
        set {
          silosOwned_ = value;
        }
      }

      /// <summary>Field number for the "habs" field.</summary>
      public const int HabsFieldNumber = 12;
      private static readonly pb::FieldCodec<global::HabLevel> _repeated_habs_codec
          = pb::FieldCodec.ForEnum(98, x => (int) x, x => (global::HabLevel) x);
      private readonly pbc::RepeatedField<global::HabLevel> habs_ = new pbc::RepeatedField<global::HabLevel>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::HabLevel> Habs {
        get { return habs_; }
      }

      /// <summary>Field number for the "hab_populations" field.</summary>
      public const int HabPopulationsFieldNumber = 13;
      private static readonly pb::FieldCodec<ulong> _repeated_habPopulations_codec
          = pb::FieldCodec.ForUInt64(106);
      private readonly pbc::RepeatedField<ulong> habPopulations_ = new pbc::RepeatedField<ulong>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<ulong> HabPopulations {
        get { return habPopulations_; }
      }

      /// <summary>Field number for the "hab_population_inbounds" field.</summary>
      public const int HabPopulationInboundsFieldNumber = 14;
      private static readonly pb::FieldCodec<ulong> _repeated_habPopulationInbounds_codec
          = pb::FieldCodec.ForUInt64(114);
      private readonly pbc::RepeatedField<ulong> habPopulationInbounds_ = new pbc::RepeatedField<ulong>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<ulong> HabPopulationInbounds {
        get { return habPopulationInbounds_; }
      }

      /// <summary>Field number for the "hab_incubator_populations" field.</summary>
      public const int HabIncubatorPopulationsFieldNumber = 15;
      private static readonly pb::FieldCodec<double> _repeated_habIncubatorPopulations_codec
          = pb::FieldCodec.ForDouble(122);
      private readonly pbc::RepeatedField<double> habIncubatorPopulations_ = new pbc::RepeatedField<double>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<double> HabIncubatorPopulations {
        get { return habIncubatorPopulations_; }
      }

      /// <summary>Field number for the "hatchery_population" field.</summary>
      public const int HatcheryPopulationFieldNumber = 16;
      private double hatcheryPopulation_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double HatcheryPopulation {
        get { return hatcheryPopulation_; }
        set {
          hatcheryPopulation_ = value;
        }
      }

      /// <summary>Field number for the "vehicles" field.</summary>
      public const int VehiclesFieldNumber = 17;
      private static readonly pb::FieldCodec<global::VehicleType> _repeated_vehicles_codec
          = pb::FieldCodec.ForEnum(138, x => (int) x, x => (global::VehicleType) x);
      private readonly pbc::RepeatedField<global::VehicleType> vehicles_ = new pbc::RepeatedField<global::VehicleType>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::VehicleType> Vehicles {
        get { return vehicles_; }
      }

      /// <summary>Field number for the "common_research" field.</summary>
      public const int CommonResearchFieldNumber = 18;
      private static readonly pb::FieldCodec<global::Backup.Types.ResearchItem> _repeated_commonResearch_codec
          = pb::FieldCodec.ForMessage(146, global::Backup.Types.ResearchItem.Parser);
      private readonly pbc::RepeatedField<global::Backup.Types.ResearchItem> commonResearch_ = new pbc::RepeatedField<global::Backup.Types.ResearchItem>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::Backup.Types.ResearchItem> CommonResearch {
        get { return commonResearch_; }
      }

      /// <summary>Field number for the "farm_type" field.</summary>
      public const int FarmTypeFieldNumber = 19;
      private global::FarmType farmType_ = global::FarmType.UndefinedFarmType;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::FarmType FarmType {
        get { return farmType_; }
        set {
          farmType_ = value;
        }
      }

      /// <summary>Field number for the "contract_id" field.</summary>
      public const int ContractIdFieldNumber = 20;
      private string contractId_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string ContractId {
        get { return contractId_; }
        set {
          contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "hyperloop_cars" field.</summary>
      public const int HyperloopCarsFieldNumber = 21;
      private static readonly pb::FieldCodec<uint> _repeated_hyperloopCars_codec
          = pb::FieldCodec.ForUInt32(170);
      private readonly pbc::RepeatedField<uint> hyperloopCars_ = new pbc::RepeatedField<uint>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<uint> HyperloopCars {
        get { return hyperloopCars_; }
      }

      /// <summary>Field number for the "active_boosts" field.</summary>
      public const int ActiveBoostsFieldNumber = 22;
      private static readonly pb::FieldCodec<global::Backup.Types.ActiveBoost> _repeated_activeBoosts_codec
          = pb::FieldCodec.ForMessage(178, global::Backup.Types.ActiveBoost.Parser);
      private readonly pbc::RepeatedField<global::Backup.Types.ActiveBoost> activeBoosts_ = new pbc::RepeatedField<global::Backup.Types.ActiveBoost>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::Backup.Types.ActiveBoost> ActiveBoosts {
        get { return activeBoosts_; }
      }

      /// <summary>Field number for the "time_cheats_detected" field.</summary>
      public const int TimeCheatsDetectedFieldNumber = 23;
      private uint timeCheatsDetected_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint TimeCheatsDetected {
        get { return timeCheatsDetected_; }
        set {
          timeCheatsDetected_ = value;
        }
      }

      /// <summary>Field number for the "time_cheat_debt" field.</summary>
      public const int TimeCheatDebtFieldNumber = 24;
      private double timeCheatDebt_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double TimeCheatDebt {
        get { return timeCheatDebt_; }
        set {
          timeCheatDebt_ = value;
        }
      }

      /// <summary>Field number for the "boost_tokens_received" field.</summary>
      public const int BoostTokensReceivedFieldNumber = 25;
      private uint boostTokensReceived_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint BoostTokensReceived {
        get { return boostTokensReceived_; }
        set {
          boostTokensReceived_ = value;
        }
      }

      /// <summary>Field number for the "boost_tokens_spent" field.</summary>
      public const int BoostTokensSpentFieldNumber = 26;
      private uint boostTokensSpent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint BoostTokensSpent {
        get { return boostTokensSpent_; }
        set {
          boostTokensSpent_ = value;
        }
      }

      /// <summary>Field number for the "unclaimed_boost_tokens" field.</summary>
      public const int UnclaimedBoostTokensFieldNumber = 27;
      private uint unclaimedBoostTokens_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint UnclaimedBoostTokens {
        get { return unclaimedBoostTokens_; }
        set {
          unclaimedBoostTokens_ = value;
        }
      }

      /// <summary>Field number for the "boost_tokens_given" field.</summary>
      public const int BoostTokensGivenFieldNumber = 28;
      private uint boostTokensGiven_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint BoostTokensGiven {
        get { return boostTokensGiven_; }
        set {
          boostTokensGiven_ = value;
        }
      }

      /// <summary>Field number for the "gametime_until_next_boost_token" field.</summary>
      public const int GametimeUntilNextBoostTokenFieldNumber = 29;
      private double gametimeUntilNextBoostToken_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double GametimeUntilNextBoostToken {
        get { return gametimeUntilNextBoostToken_; }
        set {
          gametimeUntilNextBoostToken_ = value;
        }
      }

      /// <summary>Field number for the "eggs_shipped" field.</summary>
      public const int EggsShippedFieldNumber = 30;
      private double eggsShipped_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double EggsShipped {
        get { return eggsShipped_; }
        set {
          eggsShipped_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Farm);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Farm other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (EggType != other.EggType) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CashEarned, other.CashEarned)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CashSpent, other.CashSpent)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnclaimedCash, other.UnclaimedCash)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastStepTime, other.LastStepTime)) return false;
        if (NumChickens != other.NumChickens) return false;
        if (NumChickensUnsettled != other.NumChickensUnsettled) return false;
        if (NumChickensRunning != other.NumChickensRunning) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EggsLaid, other.EggsLaid)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EggsPaidFor, other.EggsPaidFor)) return false;
        if (SilosOwned != other.SilosOwned) return false;
        if(!habs_.Equals(other.habs_)) return false;
        if(!habPopulations_.Equals(other.habPopulations_)) return false;
        if(!habPopulationInbounds_.Equals(other.habPopulationInbounds_)) return false;
        if(!habIncubatorPopulations_.Equals(other.habIncubatorPopulations_)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HatcheryPopulation, other.HatcheryPopulation)) return false;
        if(!vehicles_.Equals(other.vehicles_)) return false;
        if(!commonResearch_.Equals(other.commonResearch_)) return false;
        if (FarmType != other.FarmType) return false;
        if (ContractId != other.ContractId) return false;
        if(!hyperloopCars_.Equals(other.hyperloopCars_)) return false;
        if(!activeBoosts_.Equals(other.activeBoosts_)) return false;
        if (TimeCheatsDetected != other.TimeCheatsDetected) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeCheatDebt, other.TimeCheatDebt)) return false;
        if (BoostTokensReceived != other.BoostTokensReceived) return false;
        if (BoostTokensSpent != other.BoostTokensSpent) return false;
        if (UnclaimedBoostTokens != other.UnclaimedBoostTokens) return false;
        if (BoostTokensGiven != other.BoostTokensGiven) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GametimeUntilNextBoostToken, other.GametimeUntilNextBoostToken)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EggsShipped, other.EggsShipped)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (EggType != global::Egg.UndefinedEgg) hash ^= EggType.GetHashCode();
        if (CashEarned != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CashEarned);
        if (CashSpent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CashSpent);
        if (UnclaimedCash != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnclaimedCash);
        if (LastStepTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastStepTime);
        if (NumChickens != 0UL) hash ^= NumChickens.GetHashCode();
        if (NumChickensUnsettled != 0UL) hash ^= NumChickensUnsettled.GetHashCode();
        if (NumChickensRunning != 0UL) hash ^= NumChickensRunning.GetHashCode();
        if (EggsLaid != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EggsLaid);
        if (EggsPaidFor != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EggsPaidFor);
        if (SilosOwned != 0) hash ^= SilosOwned.GetHashCode();
        hash ^= habs_.GetHashCode();
        hash ^= habPopulations_.GetHashCode();
        hash ^= habPopulationInbounds_.GetHashCode();
        hash ^= habIncubatorPopulations_.GetHashCode();
        if (HatcheryPopulation != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HatcheryPopulation);
        hash ^= vehicles_.GetHashCode();
        hash ^= commonResearch_.GetHashCode();
        if (FarmType != global::FarmType.UndefinedFarmType) hash ^= FarmType.GetHashCode();
        if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
        hash ^= hyperloopCars_.GetHashCode();
        hash ^= activeBoosts_.GetHashCode();
        if (TimeCheatsDetected != 0) hash ^= TimeCheatsDetected.GetHashCode();
        if (TimeCheatDebt != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeCheatDebt);
        if (BoostTokensReceived != 0) hash ^= BoostTokensReceived.GetHashCode();
        if (BoostTokensSpent != 0) hash ^= BoostTokensSpent.GetHashCode();
        if (UnclaimedBoostTokens != 0) hash ^= UnclaimedBoostTokens.GetHashCode();
        if (BoostTokensGiven != 0) hash ^= BoostTokensGiven.GetHashCode();
        if (GametimeUntilNextBoostToken != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GametimeUntilNextBoostToken);
        if (EggsShipped != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EggsShipped);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (EggType != global::Egg.UndefinedEgg) {
          output.WriteRawTag(8);
          output.WriteEnum((int) EggType);
        }
        if (CashEarned != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(CashEarned);
        }
        if (CashSpent != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(CashSpent);
        }
        if (UnclaimedCash != 0D) {
          output.WriteRawTag(33);
          output.WriteDouble(UnclaimedCash);
        }
        if (LastStepTime != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(LastStepTime);
        }
        if (NumChickens != 0UL) {
          output.WriteRawTag(48);
          output.WriteUInt64(NumChickens);
        }
        if (NumChickensUnsettled != 0UL) {
          output.WriteRawTag(56);
          output.WriteUInt64(NumChickensUnsettled);
        }
        if (NumChickensRunning != 0UL) {
          output.WriteRawTag(64);
          output.WriteUInt64(NumChickensRunning);
        }
        if (EggsLaid != 0D) {
          output.WriteRawTag(73);
          output.WriteDouble(EggsLaid);
        }
        if (EggsPaidFor != 0D) {
          output.WriteRawTag(81);
          output.WriteDouble(EggsPaidFor);
        }
        if (SilosOwned != 0) {
          output.WriteRawTag(88);
          output.WriteUInt32(SilosOwned);
        }
        habs_.WriteTo(output, _repeated_habs_codec);
        habPopulations_.WriteTo(output, _repeated_habPopulations_codec);
        habPopulationInbounds_.WriteTo(output, _repeated_habPopulationInbounds_codec);
        habIncubatorPopulations_.WriteTo(output, _repeated_habIncubatorPopulations_codec);
        if (HatcheryPopulation != 0D) {
          output.WriteRawTag(129, 1);
          output.WriteDouble(HatcheryPopulation);
        }
        vehicles_.WriteTo(output, _repeated_vehicles_codec);
        commonResearch_.WriteTo(output, _repeated_commonResearch_codec);
        if (FarmType != global::FarmType.UndefinedFarmType) {
          output.WriteRawTag(152, 1);
          output.WriteEnum((int) FarmType);
        }
        if (ContractId.Length != 0) {
          output.WriteRawTag(162, 1);
          output.WriteString(ContractId);
        }
        hyperloopCars_.WriteTo(output, _repeated_hyperloopCars_codec);
        activeBoosts_.WriteTo(output, _repeated_activeBoosts_codec);
        if (TimeCheatsDetected != 0) {
          output.WriteRawTag(184, 1);
          output.WriteUInt32(TimeCheatsDetected);
        }
        if (TimeCheatDebt != 0D) {
          output.WriteRawTag(193, 1);
          output.WriteDouble(TimeCheatDebt);
        }
        if (BoostTokensReceived != 0) {
          output.WriteRawTag(200, 1);
          output.WriteUInt32(BoostTokensReceived);
        }
        if (BoostTokensSpent != 0) {
          output.WriteRawTag(208, 1);
          output.WriteUInt32(BoostTokensSpent);
        }
        if (UnclaimedBoostTokens != 0) {
          output.WriteRawTag(216, 1);
          output.WriteUInt32(UnclaimedBoostTokens);
        }
        if (BoostTokensGiven != 0) {
          output.WriteRawTag(224, 1);
          output.WriteUInt32(BoostTokensGiven);
        }
        if (GametimeUntilNextBoostToken != 0D) {
          output.WriteRawTag(233, 1);
          output.WriteDouble(GametimeUntilNextBoostToken);
        }
        if (EggsShipped != 0D) {
          output.WriteRawTag(241, 1);
          output.WriteDouble(EggsShipped);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (EggType != global::Egg.UndefinedEgg) {
          output.WriteRawTag(8);
          output.WriteEnum((int) EggType);
        }
        if (CashEarned != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(CashEarned);
        }
        if (CashSpent != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(CashSpent);
        }
        if (UnclaimedCash != 0D) {
          output.WriteRawTag(33);
          output.WriteDouble(UnclaimedCash);
        }
        if (LastStepTime != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(LastStepTime);
        }
        if (NumChickens != 0UL) {
          output.WriteRawTag(48);
          output.WriteUInt64(NumChickens);
        }
        if (NumChickensUnsettled != 0UL) {
          output.WriteRawTag(56);
          output.WriteUInt64(NumChickensUnsettled);
        }
        if (NumChickensRunning != 0UL) {
          output.WriteRawTag(64);
          output.WriteUInt64(NumChickensRunning);
        }
        if (EggsLaid != 0D) {
          output.WriteRawTag(73);
          output.WriteDouble(EggsLaid);
        }
        if (EggsPaidFor != 0D) {
          output.WriteRawTag(81);
          output.WriteDouble(EggsPaidFor);
        }
        if (SilosOwned != 0) {
          output.WriteRawTag(88);
          output.WriteUInt32(SilosOwned);
        }
        habs_.WriteTo(ref output, _repeated_habs_codec);
        habPopulations_.WriteTo(ref output, _repeated_habPopulations_codec);
        habPopulationInbounds_.WriteTo(ref output, _repeated_habPopulationInbounds_codec);
        habIncubatorPopulations_.WriteTo(ref output, _repeated_habIncubatorPopulations_codec);
        if (HatcheryPopulation != 0D) {
          output.WriteRawTag(129, 1);
          output.WriteDouble(HatcheryPopulation);
        }
        vehicles_.WriteTo(ref output, _repeated_vehicles_codec);
        commonResearch_.WriteTo(ref output, _repeated_commonResearch_codec);
        if (FarmType != global::FarmType.UndefinedFarmType) {
          output.WriteRawTag(152, 1);
          output.WriteEnum((int) FarmType);
        }
        if (ContractId.Length != 0) {
          output.WriteRawTag(162, 1);
          output.WriteString(ContractId);
        }
        hyperloopCars_.WriteTo(ref output, _repeated_hyperloopCars_codec);
        activeBoosts_.WriteTo(ref output, _repeated_activeBoosts_codec);
        if (TimeCheatsDetected != 0) {
          output.WriteRawTag(184, 1);
          output.WriteUInt32(TimeCheatsDetected);
        }
        if (TimeCheatDebt != 0D) {
          output.WriteRawTag(193, 1);
          output.WriteDouble(TimeCheatDebt);
        }
        if (BoostTokensReceived != 0) {
          output.WriteRawTag(200, 1);
          output.WriteUInt32(BoostTokensReceived);
        }
        if (BoostTokensSpent != 0) {
          output.WriteRawTag(208, 1);
          output.WriteUInt32(BoostTokensSpent);
        }
        if (UnclaimedBoostTokens != 0) {
          output.WriteRawTag(216, 1);
          output.WriteUInt32(UnclaimedBoostTokens);
        }
        if (BoostTokensGiven != 0) {
          output.WriteRawTag(224, 1);
          output.WriteUInt32(BoostTokensGiven);
        }
        if (GametimeUntilNextBoostToken != 0D) {
          output.WriteRawTag(233, 1);
          output.WriteDouble(GametimeUntilNextBoostToken);
        }
        if (EggsShipped != 0D) {
          output.WriteRawTag(241, 1);
          output.WriteDouble(EggsShipped);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (EggType != global::Egg.UndefinedEgg) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EggType);
        }
        if (CashEarned != 0D) {
          size += 1 + 8;
        }
        if (CashSpent != 0D) {
          size += 1 + 8;
        }
        if (UnclaimedCash != 0D) {
          size += 1 + 8;
        }
        if (LastStepTime != 0D) {
          size += 1 + 8;
        }
        if (NumChickens != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumChickens);
        }
        if (NumChickensUnsettled != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumChickensUnsettled);
        }
        if (NumChickensRunning != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumChickensRunning);
        }
        if (EggsLaid != 0D) {
          size += 1 + 8;
        }
        if (EggsPaidFor != 0D) {
          size += 1 + 8;
        }
        if (SilosOwned != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SilosOwned);
        }
        size += habs_.CalculateSize(_repeated_habs_codec);
        size += habPopulations_.CalculateSize(_repeated_habPopulations_codec);
        size += habPopulationInbounds_.CalculateSize(_repeated_habPopulationInbounds_codec);
        size += habIncubatorPopulations_.CalculateSize(_repeated_habIncubatorPopulations_codec);
        if (HatcheryPopulation != 0D) {
          size += 2 + 8;
        }
        size += vehicles_.CalculateSize(_repeated_vehicles_codec);
        size += commonResearch_.CalculateSize(_repeated_commonResearch_codec);
        if (FarmType != global::FarmType.UndefinedFarmType) {
          size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FarmType);
        }
        if (ContractId.Length != 0) {
          size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractId);
        }
        size += hyperloopCars_.CalculateSize(_repeated_hyperloopCars_codec);
        size += activeBoosts_.CalculateSize(_repeated_activeBoosts_codec);
        if (TimeCheatsDetected != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TimeCheatsDetected);
        }
        if (TimeCheatDebt != 0D) {
          size += 2 + 8;
        }
        if (BoostTokensReceived != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BoostTokensReceived);
        }
        if (BoostTokensSpent != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BoostTokensSpent);
        }
        if (UnclaimedBoostTokens != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnclaimedBoostTokens);
        }
        if (BoostTokensGiven != 0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BoostTokensGiven);
        }
        if (GametimeUntilNextBoostToken != 0D) {
          size += 2 + 8;
        }
        if (EggsShipped != 0D) {
          size += 2 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Farm other) {
        if (other == null) {
          return;
        }
        if (other.EggType != global::Egg.UndefinedEgg) {
          EggType = other.EggType;
        }
        if (other.CashEarned != 0D) {
          CashEarned = other.CashEarned;
        }
        if (other.CashSpent != 0D) {
          CashSpent = other.CashSpent;
        }
        if (other.UnclaimedCash != 0D) {
          UnclaimedCash = other.UnclaimedCash;
        }
        if (other.LastStepTime != 0D) {
          LastStepTime = other.LastStepTime;
        }
        if (other.NumChickens != 0UL) {
          NumChickens = other.NumChickens;
        }
        if (other.NumChickensUnsettled != 0UL) {
          NumChickensUnsettled = other.NumChickensUnsettled;
        }
        if (other.NumChickensRunning != 0UL) {
          NumChickensRunning = other.NumChickensRunning;
        }
        if (other.EggsLaid != 0D) {
          EggsLaid = other.EggsLaid;
        }
        if (other.EggsPaidFor != 0D) {
          EggsPaidFor = other.EggsPaidFor;
        }
        if (other.SilosOwned != 0) {
          SilosOwned = other.SilosOwned;
        }
        habs_.Add(other.habs_);
        habPopulations_.Add(other.habPopulations_);
        habPopulationInbounds_.Add(other.habPopulationInbounds_);
        habIncubatorPopulations_.Add(other.habIncubatorPopulations_);
        if (other.HatcheryPopulation != 0D) {
          HatcheryPopulation = other.HatcheryPopulation;
        }
        vehicles_.Add(other.vehicles_);
        commonResearch_.Add(other.commonResearch_);
        if (other.FarmType != global::FarmType.UndefinedFarmType) {
          FarmType = other.FarmType;
        }
        if (other.ContractId.Length != 0) {
          ContractId = other.ContractId;
        }
        hyperloopCars_.Add(other.hyperloopCars_);
        activeBoosts_.Add(other.activeBoosts_);
        if (other.TimeCheatsDetected != 0) {
          TimeCheatsDetected = other.TimeCheatsDetected;
        }
        if (other.TimeCheatDebt != 0D) {
          TimeCheatDebt = other.TimeCheatDebt;
        }
        if (other.BoostTokensReceived != 0) {
          BoostTokensReceived = other.BoostTokensReceived;
        }
        if (other.BoostTokensSpent != 0) {
          BoostTokensSpent = other.BoostTokensSpent;
        }
        if (other.UnclaimedBoostTokens != 0) {
          UnclaimedBoostTokens = other.UnclaimedBoostTokens;
        }
        if (other.BoostTokensGiven != 0) {
          BoostTokensGiven = other.BoostTokensGiven;
        }
        if (other.GametimeUntilNextBoostToken != 0D) {
          GametimeUntilNextBoostToken = other.GametimeUntilNextBoostToken;
        }
        if (other.EggsShipped != 0D) {
          EggsShipped = other.EggsShipped;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              EggType = (global::Egg) input.ReadEnum();
              break;
            }
            case 17: {
              CashEarned = input.ReadDouble();
              break;
            }
            case 25: {
              CashSpent = input.ReadDouble();
              break;
            }
            case 33: {
              UnclaimedCash = input.ReadDouble();
              break;
            }
            case 41: {
              LastStepTime = input.ReadDouble();
              break;
            }
            case 48: {
              NumChickens = input.ReadUInt64();
              break;
            }
            case 56: {
              NumChickensUnsettled = input.ReadUInt64();
              break;
            }
            case 64: {
              NumChickensRunning = input.ReadUInt64();
              break;
            }
            case 73: {
              EggsLaid = input.ReadDouble();
              break;
            }
            case 81: {
              EggsPaidFor = input.ReadDouble();
              break;
            }
            case 88: {
              SilosOwned = input.ReadUInt32();
              break;
            }
            case 98:
            case 96: {
              habs_.AddEntriesFrom(input, _repeated_habs_codec);
              break;
            }
            case 106:
            case 104: {
              habPopulations_.AddEntriesFrom(input, _repeated_habPopulations_codec);
              break;
            }
            case 114:
            case 112: {
              habPopulationInbounds_.AddEntriesFrom(input, _repeated_habPopulationInbounds_codec);
              break;
            }
            case 122:
            case 121: {
              habIncubatorPopulations_.AddEntriesFrom(input, _repeated_habIncubatorPopulations_codec);
              break;
            }
            case 129: {
              HatcheryPopulation = input.ReadDouble();
              break;
            }
            case 138:
            case 136: {
              vehicles_.AddEntriesFrom(input, _repeated_vehicles_codec);
              break;
            }
            case 146: {
              commonResearch_.AddEntriesFrom(input, _repeated_commonResearch_codec);
              break;
            }
            case 152: {
              FarmType = (global::FarmType) input.ReadEnum();
              break;
            }
            case 162: {
              ContractId = input.ReadString();
              break;
            }
            case 170:
            case 168: {
              hyperloopCars_.AddEntriesFrom(input, _repeated_hyperloopCars_codec);
              break;
            }
            case 178: {
              activeBoosts_.AddEntriesFrom(input, _repeated_activeBoosts_codec);
              break;
            }
            case 184: {
              TimeCheatsDetected = input.ReadUInt32();
              break;
            }
            case 193: {
              TimeCheatDebt = input.ReadDouble();
              break;
            }
            case 200: {
              BoostTokensReceived = input.ReadUInt32();
              break;
            }
            case 208: {
              BoostTokensSpent = input.ReadUInt32();
              break;
            }
            case 216: {
              UnclaimedBoostTokens = input.ReadUInt32();
              break;
            }
            case 224: {
              BoostTokensGiven = input.ReadUInt32();
              break;
            }
            case 233: {
              GametimeUntilNextBoostToken = input.ReadDouble();
              break;
            }
            case 241: {
              EggsShipped = input.ReadDouble();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              EggType = (global::Egg) input.ReadEnum();
              break;
            }
            case 17: {
              CashEarned = input.ReadDouble();
              break;
            }
            case 25: {
              CashSpent = input.ReadDouble();
              break;
            }
            case 33: {
              UnclaimedCash = input.ReadDouble();
              break;
            }
            case 41: {
              LastStepTime = input.ReadDouble();
              break;
            }
            case 48: {
              NumChickens = input.ReadUInt64();
              break;
            }
            case 56: {
              NumChickensUnsettled = input.ReadUInt64();
              break;
            }
            case 64: {
              NumChickensRunning = input.ReadUInt64();
              break;
            }
            case 73: {
              EggsLaid = input.ReadDouble();
              break;
            }
            case 81: {
              EggsPaidFor = input.ReadDouble();
              break;
            }
            case 88: {
              SilosOwned = input.ReadUInt32();
              break;
            }
            case 98:
            case 96: {
              habs_.AddEntriesFrom(ref input, _repeated_habs_codec);
              break;
            }
            case 106:
            case 104: {
              habPopulations_.AddEntriesFrom(ref input, _repeated_habPopulations_codec);
              break;
            }
            case 114:
            case 112: {
              habPopulationInbounds_.AddEntriesFrom(ref input, _repeated_habPopulationInbounds_codec);
              break;
            }
            case 122:
            case 121: {
              habIncubatorPopulations_.AddEntriesFrom(ref input, _repeated_habIncubatorPopulations_codec);
              break;
            }
            case 129: {
              HatcheryPopulation = input.ReadDouble();
              break;
            }
            case 138:
            case 136: {
              vehicles_.AddEntriesFrom(ref input, _repeated_vehicles_codec);
              break;
            }
            case 146: {
              commonResearch_.AddEntriesFrom(ref input, _repeated_commonResearch_codec);
              break;
            }
            case 152: {
              FarmType = (global::FarmType) input.ReadEnum();
              break;
            }
            case 162: {
              ContractId = input.ReadString();
              break;
            }
            case 170:
            case 168: {
              hyperloopCars_.AddEntriesFrom(ref input, _repeated_hyperloopCars_codec);
              break;
            }
            case 178: {
              activeBoosts_.AddEntriesFrom(ref input, _repeated_activeBoosts_codec);
              break;
            }
            case 184: {
              TimeCheatsDetected = input.ReadUInt32();
              break;
            }
            case 193: {
              TimeCheatDebt = input.ReadDouble();
              break;
            }
            case 200: {
              BoostTokensReceived = input.ReadUInt32();
              break;
            }
            case 208: {
              BoostTokensSpent = input.ReadUInt32();
              break;
            }
            case 216: {
              UnclaimedBoostTokens = input.ReadUInt32();
              break;
            }
            case 224: {
              BoostTokensGiven = input.ReadUInt32();
              break;
            }
            case 233: {
              GametimeUntilNextBoostToken = input.ReadDouble();
              break;
            }
            case 241: {
              EggsShipped = input.ReadDouble();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Mission : pb::IMessage<Mission>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Mission> _parser = new pb::MessageParser<Mission>(() => new Mission());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Mission> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[11]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Mission() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Mission(Mission other) : this() {
        id_ = other.id_;
        completed_ = other.completed_;
        referenceValue_ = other.referenceValue_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Mission Clone() {
        return new Mission(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private string id_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Id {
        get { return id_; }
        set {
          id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "completed" field.</summary>
      public const int CompletedFieldNumber = 2;
      private bool completed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Completed {
        get { return completed_; }
        set {
          completed_ = value;
        }
      }

      /// <summary>Field number for the "reference_value" field.</summary>
      public const int ReferenceValueFieldNumber = 3;
      private double referenceValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double ReferenceValue {
        get { return referenceValue_; }
        set {
          referenceValue_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Mission);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Mission other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Completed != other.Completed) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReferenceValue, other.ReferenceValue)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id.Length != 0) hash ^= Id.GetHashCode();
        if (Completed != false) hash ^= Completed.GetHashCode();
        if (ReferenceValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReferenceValue);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (Completed != false) {
          output.WriteRawTag(16);
          output.WriteBool(Completed);
        }
        if (ReferenceValue != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(ReferenceValue);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Id.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(Id);
        }
        if (Completed != false) {
          output.WriteRawTag(16);
          output.WriteBool(Completed);
        }
        if (ReferenceValue != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(ReferenceValue);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
        }
        if (Completed != false) {
          size += 1 + 1;
        }
        if (ReferenceValue != 0D) {
          size += 1 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Mission other) {
        if (other == null) {
          return;
        }
        if (other.Id.Length != 0) {
          Id = other.Id;
        }
        if (other.Completed != false) {
          Completed = other.Completed;
        }
        if (other.ReferenceValue != 0D) {
          ReferenceValue = other.ReferenceValue;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 16: {
              Completed = input.ReadBool();
              break;
            }
            case 25: {
              ReferenceValue = input.ReadDouble();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 16: {
              Completed = input.ReadBool();
              break;
            }
            case 25: {
              ReferenceValue = input.ReadDouble();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Missions : pb::IMessage<Missions>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Missions> _parser = new pb::MessageParser<Missions>(() => new Missions());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Missions> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[12]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Missions() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Missions(Missions other) : this() {
        currentMissionName_ = other.currentMissionName_;
        referenceValue_ = other.referenceValue_;
        missions_ = other.missions_.Clone();
        currentMissions_ = other.currentMissions_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Missions Clone() {
        return new Missions(this);
      }

      /// <summary>Field number for the "current_mission_name" field.</summary>
      public const int CurrentMissionNameFieldNumber = 1;
      private string currentMissionName_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string CurrentMissionName {
        get { return currentMissionName_; }
        set {
          currentMissionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "reference_value" field.</summary>
      public const int ReferenceValueFieldNumber = 2;
      private double referenceValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double ReferenceValue {
        get { return referenceValue_; }
        set {
          referenceValue_ = value;
        }
      }

      /// <summary>Field number for the "missions" field.</summary>
      public const int Missions_FieldNumber = 3;
      private static readonly pb::FieldCodec<global::Backup.Types.Mission> _repeated_missions_codec
          = pb::FieldCodec.ForMessage(26, global::Backup.Types.Mission.Parser);
      private readonly pbc::RepeatedField<global::Backup.Types.Mission> missions_ = new pbc::RepeatedField<global::Backup.Types.Mission>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::Backup.Types.Mission> Missions_ {
        get { return missions_; }
      }

      /// <summary>Field number for the "current_missions" field.</summary>
      public const int CurrentMissionsFieldNumber = 4;
      private static readonly pb::FieldCodec<string> _repeated_currentMissions_codec
          = pb::FieldCodec.ForString(34);
      private readonly pbc::RepeatedField<string> currentMissions_ = new pbc::RepeatedField<string>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<string> CurrentMissions {
        get { return currentMissions_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Missions);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Missions other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (CurrentMissionName != other.CurrentMissionName) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReferenceValue, other.ReferenceValue)) return false;
        if(!missions_.Equals(other.missions_)) return false;
        if(!currentMissions_.Equals(other.currentMissions_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (CurrentMissionName.Length != 0) hash ^= CurrentMissionName.GetHashCode();
        if (ReferenceValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReferenceValue);
        hash ^= missions_.GetHashCode();
        hash ^= currentMissions_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (CurrentMissionName.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(CurrentMissionName);
        }
        if (ReferenceValue != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(ReferenceValue);
        }
        missions_.WriteTo(output, _repeated_missions_codec);
        currentMissions_.WriteTo(output, _repeated_currentMissions_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (CurrentMissionName.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(CurrentMissionName);
        }
        if (ReferenceValue != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(ReferenceValue);
        }
        missions_.WriteTo(ref output, _repeated_missions_codec);
        currentMissions_.WriteTo(ref output, _repeated_currentMissions_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (CurrentMissionName.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentMissionName);
        }
        if (ReferenceValue != 0D) {
          size += 1 + 8;
        }
        size += missions_.CalculateSize(_repeated_missions_codec);
        size += currentMissions_.CalculateSize(_repeated_currentMissions_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Missions other) {
        if (other == null) {
          return;
        }
        if (other.CurrentMissionName.Length != 0) {
          CurrentMissionName = other.CurrentMissionName;
        }
        if (other.ReferenceValue != 0D) {
          ReferenceValue = other.ReferenceValue;
        }
        missions_.Add(other.missions_);
        currentMissions_.Add(other.currentMissions_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              CurrentMissionName = input.ReadString();
              break;
            }
            case 17: {
              ReferenceValue = input.ReadDouble();
              break;
            }
            case 26: {
              missions_.AddEntriesFrom(input, _repeated_missions_codec);
              break;
            }
            case 34: {
              currentMissions_.AddEntriesFrom(input, _repeated_currentMissions_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              CurrentMissionName = input.ReadString();
              break;
            }
            case 17: {
              ReferenceValue = input.ReadDouble();
              break;
            }
            case 26: {
              missions_.AddEntriesFrom(ref input, _repeated_missions_codec);
              break;
            }
            case 34: {
              currentMissions_.AddEntriesFrom(ref input, _repeated_currentMissions_codec);
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Misc : pb::IMessage<Misc>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Misc> _parser = new pb::MessageParser<Misc>(() => new Misc());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Misc> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Backup.Descriptor.NestedTypes[13]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Misc() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Misc(Misc other) : this() {
        chickenBtnPrefBig_ = other.chickenBtnPrefBig_;
        freeHatcheryRefillGiven_ = other.freeHatcheryRefillGiven_;
        lastShareFarmValue_ = other.lastShareFarmValue_;
        lastShareSwarmFarmValue_ = other.lastShareSwarmFarmValue_;
        lastShareSwarmSize_ = other.lastShareSwarmSize_;
        friendRank_ = other.friendRank_;
        friendRankPop_ = other.friendRankPop_;
        globalRank_ = other.globalRank_;
        globalRankPop_ = other.globalRankPop_;
        lastPrestigeAlertSoulEggs_ = other.lastPrestigeAlertSoulEggs_;
        trophyAlert_ = other.trophyAlert_;
        arAlert_ = other.arAlert_;
        contractsAlert_ = other.contractsAlert_;
        coopAlert_ = other.coopAlert_;
        switchAlert_ = other.switchAlert_;
        eggOfProphecyAlert_ = other.eggOfProphecyAlert_;
        boostTokenAlert_ = other.boostTokenAlert_;
        soulEggAlert_ = other.soulEggAlert_;
        backupReminderAlert_ = other.backupReminderAlert_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Misc Clone() {
        return new Misc(this);
      }

      /// <summary>Field number for the "chicken_btn_pref_big" field.</summary>
      public const int ChickenBtnPrefBigFieldNumber = 1;
      private bool chickenBtnPrefBig_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool ChickenBtnPrefBig {
        get { return chickenBtnPrefBig_; }
        set {
          chickenBtnPrefBig_ = value;
        }
      }

      /// <summary>Field number for the "free_hatchery_refill_given" field.</summary>
      public const int FreeHatcheryRefillGivenFieldNumber = 2;
      private bool freeHatcheryRefillGiven_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool FreeHatcheryRefillGiven {
        get { return freeHatcheryRefillGiven_; }
        set {
          freeHatcheryRefillGiven_ = value;
        }
      }

      /// <summary>Field number for the "last_share_farm_value" field.</summary>
      public const int LastShareFarmValueFieldNumber = 3;
      private double lastShareFarmValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double LastShareFarmValue {
        get { return lastShareFarmValue_; }
        set {
          lastShareFarmValue_ = value;
        }
      }

      /// <summary>Field number for the "last_share_swarm_farm_value" field.</summary>
      public const int LastShareSwarmFarmValueFieldNumber = 4;
      private double lastShareSwarmFarmValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double LastShareSwarmFarmValue {
        get { return lastShareSwarmFarmValue_; }
        set {
          lastShareSwarmFarmValue_ = value;
        }
      }

      /// <summary>Field number for the "last_share_swarm_size" field.</summary>
      public const int LastShareSwarmSizeFieldNumber = 5;
      private double lastShareSwarmSize_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double LastShareSwarmSize {
        get { return lastShareSwarmSize_; }
        set {
          lastShareSwarmSize_ = value;
        }
      }

      /// <summary>Field number for the "friend_rank" field.</summary>
      public const int FriendRankFieldNumber = 6;
      private ulong friendRank_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong FriendRank {
        get { return friendRank_; }
        set {
          friendRank_ = value;
        }
      }

      /// <summary>Field number for the "friend_rank_pop" field.</summary>
      public const int FriendRankPopFieldNumber = 7;
      private ulong friendRankPop_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong FriendRankPop {
        get { return friendRankPop_; }
        set {
          friendRankPop_ = value;
        }
      }

      /// <summary>Field number for the "global_rank" field.</summary>
      public const int GlobalRankFieldNumber = 8;
      private ulong globalRank_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong GlobalRank {
        get { return globalRank_; }
        set {
          globalRank_ = value;
        }
      }

      /// <summary>Field number for the "global_rank_pop" field.</summary>
      public const int GlobalRankPopFieldNumber = 9;
      private ulong globalRankPop_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong GlobalRankPop {
        get { return globalRankPop_; }
        set {
          globalRankPop_ = value;
        }
      }

      /// <summary>Field number for the "last_prestige_alert_soul_eggs" field.</summary>
      public const int LastPrestigeAlertSoulEggsFieldNumber = 10;
      private ulong lastPrestigeAlertSoulEggs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong LastPrestigeAlertSoulEggs {
        get { return lastPrestigeAlertSoulEggs_; }
        set {
          lastPrestigeAlertSoulEggs_ = value;
        }
      }

      /// <summary>Field number for the "trophy_alert" field.</summary>
      public const int TrophyAlertFieldNumber = 11;
      private bool trophyAlert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool TrophyAlert {
        get { return trophyAlert_; }
        set {
          trophyAlert_ = value;
        }
      }

      /// <summary>Field number for the "ar_alert" field.</summary>
      public const int ArAlertFieldNumber = 12;
      private bool arAlert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool ArAlert {
        get { return arAlert_; }
        set {
          arAlert_ = value;
        }
      }

      /// <summary>Field number for the "contracts_alert" field.</summary>
      public const int ContractsAlertFieldNumber = 13;
      private bool contractsAlert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool ContractsAlert {
        get { return contractsAlert_; }
        set {
          contractsAlert_ = value;
        }
      }

      /// <summary>Field number for the "coop_alert" field.</summary>
      public const int CoopAlertFieldNumber = 14;
      private bool coopAlert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool CoopAlert {
        get { return coopAlert_; }
        set {
          coopAlert_ = value;
        }
      }

      /// <summary>Field number for the "switch_alert" field.</summary>
      public const int SwitchAlertFieldNumber = 15;
      private bool switchAlert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool SwitchAlert {
        get { return switchAlert_; }
        set {
          switchAlert_ = value;
        }
      }

      /// <summary>Field number for the "egg_of_prophecy_alert" field.</summary>
      public const int EggOfProphecyAlertFieldNumber = 16;
      private bool eggOfProphecyAlert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool EggOfProphecyAlert {
        get { return eggOfProphecyAlert_; }
        set {
          eggOfProphecyAlert_ = value;
        }
      }

      /// <summary>Field number for the "boost_token_alert" field.</summary>
      public const int BoostTokenAlertFieldNumber = 17;
      private bool boostTokenAlert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool BoostTokenAlert {
        get { return boostTokenAlert_; }
        set {
          boostTokenAlert_ = value;
        }
      }

      /// <summary>Field number for the "soul_egg_alert" field.</summary>
      public const int SoulEggAlertFieldNumber = 18;
      private bool soulEggAlert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool SoulEggAlert {
        get { return soulEggAlert_; }
        set {
          soulEggAlert_ = value;
        }
      }

      /// <summary>Field number for the "backup_reminder_alert" field.</summary>
      public const int BackupReminderAlertFieldNumber = 19;
      private bool backupReminderAlert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool BackupReminderAlert {
        get { return backupReminderAlert_; }
        set {
          backupReminderAlert_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Misc);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Misc other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ChickenBtnPrefBig != other.ChickenBtnPrefBig) return false;
        if (FreeHatcheryRefillGiven != other.FreeHatcheryRefillGiven) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastShareFarmValue, other.LastShareFarmValue)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastShareSwarmFarmValue, other.LastShareSwarmFarmValue)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastShareSwarmSize, other.LastShareSwarmSize)) return false;
        if (FriendRank != other.FriendRank) return false;
        if (FriendRankPop != other.FriendRankPop) return false;
        if (GlobalRank != other.GlobalRank) return false;
        if (GlobalRankPop != other.GlobalRankPop) return false;
        if (LastPrestigeAlertSoulEggs != other.LastPrestigeAlertSoulEggs) return false;
        if (TrophyAlert != other.TrophyAlert) return false;
        if (ArAlert != other.ArAlert) return false;
        if (ContractsAlert != other.ContractsAlert) return false;
        if (CoopAlert != other.CoopAlert) return false;
        if (SwitchAlert != other.SwitchAlert) return false;
        if (EggOfProphecyAlert != other.EggOfProphecyAlert) return false;
        if (BoostTokenAlert != other.BoostTokenAlert) return false;
        if (SoulEggAlert != other.SoulEggAlert) return false;
        if (BackupReminderAlert != other.BackupReminderAlert) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (ChickenBtnPrefBig != false) hash ^= ChickenBtnPrefBig.GetHashCode();
        if (FreeHatcheryRefillGiven != false) hash ^= FreeHatcheryRefillGiven.GetHashCode();
        if (LastShareFarmValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastShareFarmValue);
        if (LastShareSwarmFarmValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastShareSwarmFarmValue);
        if (LastShareSwarmSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastShareSwarmSize);
        if (FriendRank != 0UL) hash ^= FriendRank.GetHashCode();
        if (FriendRankPop != 0UL) hash ^= FriendRankPop.GetHashCode();
        if (GlobalRank != 0UL) hash ^= GlobalRank.GetHashCode();
        if (GlobalRankPop != 0UL) hash ^= GlobalRankPop.GetHashCode();
        if (LastPrestigeAlertSoulEggs != 0UL) hash ^= LastPrestigeAlertSoulEggs.GetHashCode();
        if (TrophyAlert != false) hash ^= TrophyAlert.GetHashCode();
        if (ArAlert != false) hash ^= ArAlert.GetHashCode();
        if (ContractsAlert != false) hash ^= ContractsAlert.GetHashCode();
        if (CoopAlert != false) hash ^= CoopAlert.GetHashCode();
        if (SwitchAlert != false) hash ^= SwitchAlert.GetHashCode();
        if (EggOfProphecyAlert != false) hash ^= EggOfProphecyAlert.GetHashCode();
        if (BoostTokenAlert != false) hash ^= BoostTokenAlert.GetHashCode();
        if (SoulEggAlert != false) hash ^= SoulEggAlert.GetHashCode();
        if (BackupReminderAlert != false) hash ^= BackupReminderAlert.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (ChickenBtnPrefBig != false) {
          output.WriteRawTag(8);
          output.WriteBool(ChickenBtnPrefBig);
        }
        if (FreeHatcheryRefillGiven != false) {
          output.WriteRawTag(16);
          output.WriteBool(FreeHatcheryRefillGiven);
        }
        if (LastShareFarmValue != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(LastShareFarmValue);
        }
        if (LastShareSwarmFarmValue != 0D) {
          output.WriteRawTag(33);
          output.WriteDouble(LastShareSwarmFarmValue);
        }
        if (LastShareSwarmSize != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(LastShareSwarmSize);
        }
        if (FriendRank != 0UL) {
          output.WriteRawTag(48);
          output.WriteUInt64(FriendRank);
        }
        if (FriendRankPop != 0UL) {
          output.WriteRawTag(56);
          output.WriteUInt64(FriendRankPop);
        }
        if (GlobalRank != 0UL) {
          output.WriteRawTag(64);
          output.WriteUInt64(GlobalRank);
        }
        if (GlobalRankPop != 0UL) {
          output.WriteRawTag(72);
          output.WriteUInt64(GlobalRankPop);
        }
        if (LastPrestigeAlertSoulEggs != 0UL) {
          output.WriteRawTag(80);
          output.WriteUInt64(LastPrestigeAlertSoulEggs);
        }
        if (TrophyAlert != false) {
          output.WriteRawTag(88);
          output.WriteBool(TrophyAlert);
        }
        if (ArAlert != false) {
          output.WriteRawTag(96);
          output.WriteBool(ArAlert);
        }
        if (ContractsAlert != false) {
          output.WriteRawTag(104);
          output.WriteBool(ContractsAlert);
        }
        if (CoopAlert != false) {
          output.WriteRawTag(112);
          output.WriteBool(CoopAlert);
        }
        if (SwitchAlert != false) {
          output.WriteRawTag(120);
          output.WriteBool(SwitchAlert);
        }
        if (EggOfProphecyAlert != false) {
          output.WriteRawTag(128, 1);
          output.WriteBool(EggOfProphecyAlert);
        }
        if (BoostTokenAlert != false) {
          output.WriteRawTag(136, 1);
          output.WriteBool(BoostTokenAlert);
        }
        if (SoulEggAlert != false) {
          output.WriteRawTag(144, 1);
          output.WriteBool(SoulEggAlert);
        }
        if (BackupReminderAlert != false) {
          output.WriteRawTag(152, 1);
          output.WriteBool(BackupReminderAlert);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (ChickenBtnPrefBig != false) {
          output.WriteRawTag(8);
          output.WriteBool(ChickenBtnPrefBig);
        }
        if (FreeHatcheryRefillGiven != false) {
          output.WriteRawTag(16);
          output.WriteBool(FreeHatcheryRefillGiven);
        }
        if (LastShareFarmValue != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(LastShareFarmValue);
        }
        if (LastShareSwarmFarmValue != 0D) {
          output.WriteRawTag(33);
          output.WriteDouble(LastShareSwarmFarmValue);
        }
        if (LastShareSwarmSize != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(LastShareSwarmSize);
        }
        if (FriendRank != 0UL) {
          output.WriteRawTag(48);
          output.WriteUInt64(FriendRank);
        }
        if (FriendRankPop != 0UL) {
          output.WriteRawTag(56);
          output.WriteUInt64(FriendRankPop);
        }
        if (GlobalRank != 0UL) {
          output.WriteRawTag(64);
          output.WriteUInt64(GlobalRank);
        }
        if (GlobalRankPop != 0UL) {
          output.WriteRawTag(72);
          output.WriteUInt64(GlobalRankPop);
        }
        if (LastPrestigeAlertSoulEggs != 0UL) {
          output.WriteRawTag(80);
          output.WriteUInt64(LastPrestigeAlertSoulEggs);
        }
        if (TrophyAlert != false) {
          output.WriteRawTag(88);
          output.WriteBool(TrophyAlert);
        }
        if (ArAlert != false) {
          output.WriteRawTag(96);
          output.WriteBool(ArAlert);
        }
        if (ContractsAlert != false) {
          output.WriteRawTag(104);
          output.WriteBool(ContractsAlert);
        }
        if (CoopAlert != false) {
          output.WriteRawTag(112);
          output.WriteBool(CoopAlert);
        }
        if (SwitchAlert != false) {
          output.WriteRawTag(120);
          output.WriteBool(SwitchAlert);
        }
        if (EggOfProphecyAlert != false) {
          output.WriteRawTag(128, 1);
          output.WriteBool(EggOfProphecyAlert);
        }
        if (BoostTokenAlert != false) {
          output.WriteRawTag(136, 1);
          output.WriteBool(BoostTokenAlert);
        }
        if (SoulEggAlert != false) {
          output.WriteRawTag(144, 1);
          output.WriteBool(SoulEggAlert);
        }
        if (BackupReminderAlert != false) {
          output.WriteRawTag(152, 1);
          output.WriteBool(BackupReminderAlert);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (ChickenBtnPrefBig != false) {
          size += 1 + 1;
        }
        if (FreeHatcheryRefillGiven != false) {
          size += 1 + 1;
        }
        if (LastShareFarmValue != 0D) {
          size += 1 + 8;
        }
        if (LastShareSwarmFarmValue != 0D) {
          size += 1 + 8;
        }
        if (LastShareSwarmSize != 0D) {
          size += 1 + 8;
        }
        if (FriendRank != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FriendRank);
        }
        if (FriendRankPop != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FriendRankPop);
        }
        if (GlobalRank != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GlobalRank);
        }
        if (GlobalRankPop != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GlobalRankPop);
        }
        if (LastPrestigeAlertSoulEggs != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastPrestigeAlertSoulEggs);
        }
        if (TrophyAlert != false) {
          size += 1 + 1;
        }
        if (ArAlert != false) {
          size += 1 + 1;
        }
        if (ContractsAlert != false) {
          size += 1 + 1;
        }
        if (CoopAlert != false) {
          size += 1 + 1;
        }
        if (SwitchAlert != false) {
          size += 1 + 1;
        }
        if (EggOfProphecyAlert != false) {
          size += 2 + 1;
        }
        if (BoostTokenAlert != false) {
          size += 2 + 1;
        }
        if (SoulEggAlert != false) {
          size += 2 + 1;
        }
        if (BackupReminderAlert != false) {
          size += 2 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Misc other) {
        if (other == null) {
          return;
        }
        if (other.ChickenBtnPrefBig != false) {
          ChickenBtnPrefBig = other.ChickenBtnPrefBig;
        }
        if (other.FreeHatcheryRefillGiven != false) {
          FreeHatcheryRefillGiven = other.FreeHatcheryRefillGiven;
        }
        if (other.LastShareFarmValue != 0D) {
          LastShareFarmValue = other.LastShareFarmValue;
        }
        if (other.LastShareSwarmFarmValue != 0D) {
          LastShareSwarmFarmValue = other.LastShareSwarmFarmValue;
        }
        if (other.LastShareSwarmSize != 0D) {
          LastShareSwarmSize = other.LastShareSwarmSize;
        }
        if (other.FriendRank != 0UL) {
          FriendRank = other.FriendRank;
        }
        if (other.FriendRankPop != 0UL) {
          FriendRankPop = other.FriendRankPop;
        }
        if (other.GlobalRank != 0UL) {
          GlobalRank = other.GlobalRank;
        }
        if (other.GlobalRankPop != 0UL) {
          GlobalRankPop = other.GlobalRankPop;
        }
        if (other.LastPrestigeAlertSoulEggs != 0UL) {
          LastPrestigeAlertSoulEggs = other.LastPrestigeAlertSoulEggs;
        }
        if (other.TrophyAlert != false) {
          TrophyAlert = other.TrophyAlert;
        }
        if (other.ArAlert != false) {
          ArAlert = other.ArAlert;
        }
        if (other.ContractsAlert != false) {
          ContractsAlert = other.ContractsAlert;
        }
        if (other.CoopAlert != false) {
          CoopAlert = other.CoopAlert;
        }
        if (other.SwitchAlert != false) {
          SwitchAlert = other.SwitchAlert;
        }
        if (other.EggOfProphecyAlert != false) {
          EggOfProphecyAlert = other.EggOfProphecyAlert;
        }
        if (other.BoostTokenAlert != false) {
          BoostTokenAlert = other.BoostTokenAlert;
        }
        if (other.SoulEggAlert != false) {
          SoulEggAlert = other.SoulEggAlert;
        }
        if (other.BackupReminderAlert != false) {
          BackupReminderAlert = other.BackupReminderAlert;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ChickenBtnPrefBig = input.ReadBool();
              break;
            }
            case 16: {
              FreeHatcheryRefillGiven = input.ReadBool();
              break;
            }
            case 25: {
              LastShareFarmValue = input.ReadDouble();
              break;
            }
            case 33: {
              LastShareSwarmFarmValue = input.ReadDouble();
              break;
            }
            case 41: {
              LastShareSwarmSize = input.ReadDouble();
              break;
            }
            case 48: {
              FriendRank = input.ReadUInt64();
              break;
            }
            case 56: {
              FriendRankPop = input.ReadUInt64();
              break;
            }
            case 64: {
              GlobalRank = input.ReadUInt64();
              break;
            }
            case 72: {
              GlobalRankPop = input.ReadUInt64();
              break;
            }
            case 80: {
              LastPrestigeAlertSoulEggs = input.ReadUInt64();
              break;
            }
            case 88: {
              TrophyAlert = input.ReadBool();
              break;
            }
            case 96: {
              ArAlert = input.ReadBool();
              break;
            }
            case 104: {
              ContractsAlert = input.ReadBool();
              break;
            }
            case 112: {
              CoopAlert = input.ReadBool();
              break;
            }
            case 120: {
              SwitchAlert = input.ReadBool();
              break;
            }
            case 128: {
              EggOfProphecyAlert = input.ReadBool();
              break;
            }
            case 136: {
              BoostTokenAlert = input.ReadBool();
              break;
            }
            case 144: {
              SoulEggAlert = input.ReadBool();
              break;
            }
            case 152: {
              BackupReminderAlert = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ChickenBtnPrefBig = input.ReadBool();
              break;
            }
            case 16: {
              FreeHatcheryRefillGiven = input.ReadBool();
              break;
            }
            case 25: {
              LastShareFarmValue = input.ReadDouble();
              break;
            }
            case 33: {
              LastShareSwarmFarmValue = input.ReadDouble();
              break;
            }
            case 41: {
              LastShareSwarmSize = input.ReadDouble();
              break;
            }
            case 48: {
              FriendRank = input.ReadUInt64();
              break;
            }
            case 56: {
              FriendRankPop = input.ReadUInt64();
              break;
            }
            case 64: {
              GlobalRank = input.ReadUInt64();
              break;
            }
            case 72: {
              GlobalRankPop = input.ReadUInt64();
              break;
            }
            case 80: {
              LastPrestigeAlertSoulEggs = input.ReadUInt64();
              break;
            }
            case 88: {
              TrophyAlert = input.ReadBool();
              break;
            }
            case 96: {
              ArAlert = input.ReadBool();
              break;
            }
            case 104: {
              ContractsAlert = input.ReadBool();
              break;
            }
            case 112: {
              CoopAlert = input.ReadBool();
              break;
            }
            case 120: {
              SwitchAlert = input.ReadBool();
              break;
            }
            case 128: {
              EggOfProphecyAlert = input.ReadBool();
              break;
            }
            case 136: {
              BoostTokenAlert = input.ReadBool();
              break;
            }
            case 144: {
              SoulEggAlert = input.ReadBool();
              break;
            }
            case 152: {
              BackupReminderAlert = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class FirstContactRequest : pb::IMessage<FirstContactRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<FirstContactRequest> _parser = new pb::MessageParser<FirstContactRequest>(() => new FirstContactRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FirstContactRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstContactRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstContactRequest(FirstContactRequest other) : this() {
    userId_ = other.userId_;
    clientVersion_ = other.clientVersion_;
    platform_ = other.platform_;
    eiUserId_ = other.eiUserId_;
    deviceId_ = other.deviceId_;
    username_ = other.username_;
    gameServicesId_ = other.gameServicesId_;
    requestInfo_ = other.requestInfo_ != null ? other.requestInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstContactRequest Clone() {
    return new FirstContactRequest(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "client_version" field.</summary>
  public const int ClientVersionFieldNumber = 2;
  private uint clientVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClientVersion {
    get { return clientVersion_; }
    set {
      clientVersion_ = value;
    }
  }

  /// <summary>Field number for the "platform" field.</summary>
  public const int PlatformFieldNumber = 3;
  private uint platform_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Platform {
    get { return platform_; }
    set {
      platform_ = value;
    }
  }

  /// <summary>Field number for the "ei_user_id" field.</summary>
  public const int EiUserIdFieldNumber = 4;
  private string eiUserId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EiUserId {
    get { return eiUserId_; }
    set {
      eiUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "device_id" field.</summary>
  public const int DeviceIdFieldNumber = 5;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 6;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "game_services_id" field.</summary>
  public const int GameServicesIdFieldNumber = 7;
  private string gameServicesId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameServicesId {
    get { return gameServicesId_; }
    set {
      gameServicesId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "request_info" field.</summary>
  public const int RequestInfoFieldNumber = 8;
  private global::BasicRequestInfo requestInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BasicRequestInfo RequestInfo {
    get { return requestInfo_; }
    set {
      requestInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FirstContactRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FirstContactRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (ClientVersion != other.ClientVersion) return false;
    if (Platform != other.Platform) return false;
    if (EiUserId != other.EiUserId) return false;
    if (DeviceId != other.DeviceId) return false;
    if (Username != other.Username) return false;
    if (GameServicesId != other.GameServicesId) return false;
    if (!object.Equals(RequestInfo, other.RequestInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (ClientVersion != 0) hash ^= ClientVersion.GetHashCode();
    if (Platform != 0) hash ^= Platform.GetHashCode();
    if (EiUserId.Length != 0) hash ^= EiUserId.GetHashCode();
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (GameServicesId.Length != 0) hash ^= GameServicesId.GetHashCode();
    if (requestInfo_ != null) hash ^= RequestInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClientVersion);
    }
    if (Platform != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Platform);
    }
    if (EiUserId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(EiUserId);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(DeviceId);
    }
    if (Username.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Username);
    }
    if (GameServicesId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(GameServicesId);
    }
    if (requestInfo_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(RequestInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClientVersion);
    }
    if (Platform != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Platform);
    }
    if (EiUserId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(EiUserId);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(DeviceId);
    }
    if (Username.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Username);
    }
    if (GameServicesId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(GameServicesId);
    }
    if (requestInfo_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(RequestInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (ClientVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientVersion);
    }
    if (Platform != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Platform);
    }
    if (EiUserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EiUserId);
    }
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (GameServicesId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServicesId);
    }
    if (requestInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FirstContactRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.ClientVersion != 0) {
      ClientVersion = other.ClientVersion;
    }
    if (other.Platform != 0) {
      Platform = other.Platform;
    }
    if (other.EiUserId.Length != 0) {
      EiUserId = other.EiUserId;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.GameServicesId.Length != 0) {
      GameServicesId = other.GameServicesId;
    }
    if (other.requestInfo_ != null) {
      if (requestInfo_ == null) {
        RequestInfo = new global::BasicRequestInfo();
      }
      RequestInfo.MergeFrom(other.RequestInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 24: {
          Platform = input.ReadUInt32();
          break;
        }
        case 34: {
          EiUserId = input.ReadString();
          break;
        }
        case 42: {
          DeviceId = input.ReadString();
          break;
        }
        case 50: {
          Username = input.ReadString();
          break;
        }
        case 58: {
          GameServicesId = input.ReadString();
          break;
        }
        case 66: {
          if (requestInfo_ == null) {
            RequestInfo = new global::BasicRequestInfo();
          }
          input.ReadMessage(RequestInfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 24: {
          Platform = input.ReadUInt32();
          break;
        }
        case 34: {
          EiUserId = input.ReadString();
          break;
        }
        case 42: {
          DeviceId = input.ReadString();
          break;
        }
        case 50: {
          Username = input.ReadString();
          break;
        }
        case 58: {
          GameServicesId = input.ReadString();
          break;
        }
        case 66: {
          if (requestInfo_ == null) {
            RequestInfo = new global::BasicRequestInfo();
          }
          input.ReadMessage(RequestInfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class FirstContactResponse : pb::IMessage<FirstContactResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<FirstContactResponse> _parser = new pb::MessageParser<FirstContactResponse>(() => new FirstContactResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FirstContactResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstContactResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstContactResponse(FirstContactResponse other) : this() {
    firstContact_ = other.firstContact_ != null ? other.firstContact_.Clone() : null;
    checksum_ = other.checksum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstContactResponse Clone() {
    return new FirstContactResponse(this);
  }

  /// <summary>Field number for the "first_contact" field.</summary>
  public const int FirstContactFieldNumber = 1;
  private global::FirstContact firstContact_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FirstContact FirstContact {
    get { return firstContact_; }
    set {
      firstContact_ = value;
    }
  }

  /// <summary>Field number for the "checksum" field.</summary>
  public const int ChecksumFieldNumber = 2;
  private string checksum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Checksum {
    get { return checksum_; }
    set {
      checksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FirstContactResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FirstContactResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(FirstContact, other.FirstContact)) return false;
    if (Checksum != other.Checksum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (firstContact_ != null) hash ^= FirstContact.GetHashCode();
    if (Checksum.Length != 0) hash ^= Checksum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (firstContact_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(FirstContact);
    }
    if (Checksum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Checksum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (firstContact_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(FirstContact);
    }
    if (Checksum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Checksum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (firstContact_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FirstContact);
    }
    if (Checksum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Checksum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FirstContactResponse other) {
    if (other == null) {
      return;
    }
    if (other.firstContact_ != null) {
      if (firstContact_ == null) {
        FirstContact = new global::FirstContact();
      }
      FirstContact.MergeFrom(other.FirstContact);
    }
    if (other.Checksum.Length != 0) {
      Checksum = other.Checksum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (firstContact_ == null) {
            FirstContact = new global::FirstContact();
          }
          input.ReadMessage(FirstContact);
          break;
        }
        case 18: {
          Checksum = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (firstContact_ == null) {
            FirstContact = new global::FirstContact();
          }
          input.ReadMessage(FirstContact);
          break;
        }
        case 18: {
          Checksum = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class FirstContact : pb::IMessage<FirstContact>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<FirstContact> _parser = new pb::MessageParser<FirstContact>(() => new FirstContact());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FirstContact> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstContact() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstContact(FirstContact other) : this() {
    backup_ = other.backup_ != null ? other.backup_.Clone() : null;
    eiUserId_ = other.eiUserId_;
    idsTransferred_ = other.idsTransferred_.Clone();
    errorCode_ = other.errorCode_;
    errorMessage_ = other.errorMessage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FirstContact Clone() {
    return new FirstContact(this);
  }

  /// <summary>Field number for the "backup" field.</summary>
  public const int BackupFieldNumber = 1;
  private global::Backup backup_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Backup Backup {
    get { return backup_; }
    set {
      backup_ = value;
    }
  }

  /// <summary>Field number for the "ei_user_id" field.</summary>
  public const int EiUserIdFieldNumber = 2;
  private string eiUserId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EiUserId {
    get { return eiUserId_; }
    set {
      eiUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ids_transferred" field.</summary>
  public const int IdsTransferredFieldNumber = 3;
  private static readonly pb::FieldCodec<string> _repeated_idsTransferred_codec
      = pb::FieldCodec.ForString(26);
  private readonly pbc::RepeatedField<string> idsTransferred_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> IdsTransferred {
    get { return idsTransferred_; }
  }

  /// <summary>Field number for the "error_code" field.</summary>
  public const int ErrorCodeFieldNumber = 4;
  private global::ErrorCode errorCode_ = global::ErrorCode.NoError;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ErrorCode ErrorCode {
    get { return errorCode_; }
    set {
      errorCode_ = value;
    }
  }

  /// <summary>Field number for the "error_message" field.</summary>
  public const int ErrorMessageFieldNumber = 5;
  private string errorMessage_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ErrorMessage {
    get { return errorMessage_; }
    set {
      errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FirstContact);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FirstContact other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Backup, other.Backup)) return false;
    if (EiUserId != other.EiUserId) return false;
    if(!idsTransferred_.Equals(other.idsTransferred_)) return false;
    if (ErrorCode != other.ErrorCode) return false;
    if (ErrorMessage != other.ErrorMessage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (backup_ != null) hash ^= Backup.GetHashCode();
    if (EiUserId.Length != 0) hash ^= EiUserId.GetHashCode();
    hash ^= idsTransferred_.GetHashCode();
    if (ErrorCode != global::ErrorCode.NoError) hash ^= ErrorCode.GetHashCode();
    if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (backup_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Backup);
    }
    if (EiUserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(EiUserId);
    }
    idsTransferred_.WriteTo(output, _repeated_idsTransferred_codec);
    if (ErrorCode != global::ErrorCode.NoError) {
      output.WriteRawTag(32);
      output.WriteEnum((int) ErrorCode);
    }
    if (ErrorMessage.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ErrorMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (backup_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Backup);
    }
    if (EiUserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(EiUserId);
    }
    idsTransferred_.WriteTo(ref output, _repeated_idsTransferred_codec);
    if (ErrorCode != global::ErrorCode.NoError) {
      output.WriteRawTag(32);
      output.WriteEnum((int) ErrorCode);
    }
    if (ErrorMessage.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ErrorMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (backup_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Backup);
    }
    if (EiUserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EiUserId);
    }
    size += idsTransferred_.CalculateSize(_repeated_idsTransferred_codec);
    if (ErrorCode != global::ErrorCode.NoError) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
    }
    if (ErrorMessage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FirstContact other) {
    if (other == null) {
      return;
    }
    if (other.backup_ != null) {
      if (backup_ == null) {
        Backup = new global::Backup();
      }
      Backup.MergeFrom(other.Backup);
    }
    if (other.EiUserId.Length != 0) {
      EiUserId = other.EiUserId;
    }
    idsTransferred_.Add(other.idsTransferred_);
    if (other.ErrorCode != global::ErrorCode.NoError) {
      ErrorCode = other.ErrorCode;
    }
    if (other.ErrorMessage.Length != 0) {
      ErrorMessage = other.ErrorMessage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (backup_ == null) {
            Backup = new global::Backup();
          }
          input.ReadMessage(Backup);
          break;
        }
        case 18: {
          EiUserId = input.ReadString();
          break;
        }
        case 26: {
          idsTransferred_.AddEntriesFrom(input, _repeated_idsTransferred_codec);
          break;
        }
        case 32: {
          ErrorCode = (global::ErrorCode) input.ReadEnum();
          break;
        }
        case 42: {
          ErrorMessage = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (backup_ == null) {
            Backup = new global::Backup();
          }
          input.ReadMessage(Backup);
          break;
        }
        case 18: {
          EiUserId = input.ReadString();
          break;
        }
        case 26: {
          idsTransferred_.AddEntriesFrom(ref input, _repeated_idsTransferred_codec);
          break;
        }
        case 32: {
          ErrorCode = (global::ErrorCode) input.ReadEnum();
          break;
        }
        case 42: {
          ErrorMessage = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Reward : pb::IMessage<Reward>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Reward> _parser = new pb::MessageParser<Reward>(() => new Reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Reward(Reward other) : this() {
    rewardType_ = other.rewardType_;
    rewardSubType_ = other.rewardSubType_;
    rewardAmount_ = other.rewardAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Reward Clone() {
    return new Reward(this);
  }

  /// <summary>Field number for the "reward_type" field.</summary>
  public const int RewardTypeFieldNumber = 1;
  private global::RewardType rewardType_ = global::RewardType.UndefinedRewardType;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RewardType RewardType {
    get { return rewardType_; }
    set {
      rewardType_ = value;
    }
  }

  /// <summary>Field number for the "reward_sub_type" field.</summary>
  public const int RewardSubTypeFieldNumber = 2;
  private string rewardSubType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RewardSubType {
    get { return rewardSubType_; }
    set {
      rewardSubType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "reward_amount" field.</summary>
  public const int RewardAmountFieldNumber = 3;
  private double rewardAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double RewardAmount {
    get { return rewardAmount_; }
    set {
      rewardAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RewardType != other.RewardType) return false;
    if (RewardSubType != other.RewardSubType) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RewardAmount, other.RewardAmount)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RewardType != global::RewardType.UndefinedRewardType) hash ^= RewardType.GetHashCode();
    if (RewardSubType.Length != 0) hash ^= RewardSubType.GetHashCode();
    if (RewardAmount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RewardAmount);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RewardType != global::RewardType.UndefinedRewardType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) RewardType);
    }
    if (RewardSubType.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RewardSubType);
    }
    if (RewardAmount != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(RewardAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RewardType != global::RewardType.UndefinedRewardType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) RewardType);
    }
    if (RewardSubType.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RewardSubType);
    }
    if (RewardAmount != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(RewardAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RewardType != global::RewardType.UndefinedRewardType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RewardType);
    }
    if (RewardSubType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardSubType);
    }
    if (RewardAmount != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Reward other) {
    if (other == null) {
      return;
    }
    if (other.RewardType != global::RewardType.UndefinedRewardType) {
      RewardType = other.RewardType;
    }
    if (other.RewardSubType.Length != 0) {
      RewardSubType = other.RewardSubType;
    }
    if (other.RewardAmount != 0D) {
      RewardAmount = other.RewardAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RewardType = (global::RewardType) input.ReadEnum();
          break;
        }
        case 18: {
          RewardSubType = input.ReadString();
          break;
        }
        case 25: {
          RewardAmount = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RewardType = (global::RewardType) input.ReadEnum();
          break;
        }
        case 18: {
          RewardSubType = input.ReadString();
          break;
        }
        case 25: {
          RewardAmount = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Contract : pb::IMessage<Contract>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Contract> _parser = new pb::MessageParser<Contract>(() => new Contract());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Contract> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Contract() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Contract(Contract other) : this() {
    id_ = other.id_;
    egg_ = other.egg_;
    goals_ = other.goals_.Clone();
    coopAllowed_ = other.coopAllowed_;
    maxCoopSize_ = other.maxCoopSize_;
    expirationTime_ = other.expirationTime_;
    lengthSeconds_ = other.lengthSeconds_;
    name_ = other.name_;
    description_ = other.description_;
    debug_ = other.debug_;
    maxBoosts_ = other.maxBoosts_;
    maxSoulEggs_ = other.maxSoulEggs_;
    minClientVersion_ = other.minClientVersion_;
    minutesPerToken_ = other.minutesPerToken_;
    goalSets_ = other.goalSets_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Contract Clone() {
    return new Contract(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "egg" field.</summary>
  public const int EggFieldNumber = 2;
  private global::Egg egg_ = global::Egg.UndefinedEgg;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Egg Egg {
    get { return egg_; }
    set {
      egg_ = value;
    }
  }

  /// <summary>Field number for the "goals" field.</summary>
  public const int GoalsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::Contract.Types.Goal> _repeated_goals_codec
      = pb::FieldCodec.ForMessage(26, global::Contract.Types.Goal.Parser);
  private readonly pbc::RepeatedField<global::Contract.Types.Goal> goals_ = new pbc::RepeatedField<global::Contract.Types.Goal>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Contract.Types.Goal> Goals {
    get { return goals_; }
  }

  /// <summary>Field number for the "coop_allowed" field.</summary>
  public const int CoopAllowedFieldNumber = 4;
  private bool coopAllowed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CoopAllowed {
    get { return coopAllowed_; }
    set {
      coopAllowed_ = value;
    }
  }

  /// <summary>Field number for the "max_coop_size" field.</summary>
  public const int MaxCoopSizeFieldNumber = 5;
  private uint maxCoopSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint MaxCoopSize {
    get { return maxCoopSize_; }
    set {
      maxCoopSize_ = value;
    }
  }

  /// <summary>Field number for the "expiration_time" field.</summary>
  public const int ExpirationTimeFieldNumber = 6;
  private double expirationTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double ExpirationTime {
    get { return expirationTime_; }
    set {
      expirationTime_ = value;
    }
  }

  /// <summary>Field number for the "length_seconds" field.</summary>
  public const int LengthSecondsFieldNumber = 7;
  private double lengthSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double LengthSeconds {
    get { return lengthSeconds_; }
    set {
      lengthSeconds_ = value;
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 9;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 10;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "debug" field.</summary>
  public const int DebugFieldNumber = 11;
  private bool debug_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Debug {
    get { return debug_; }
    set {
      debug_ = value;
    }
  }

  /// <summary>Field number for the "max_boosts" field.</summary>
  public const int MaxBoostsFieldNumber = 12;
  private uint maxBoosts_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint MaxBoosts {
    get { return maxBoosts_; }
    set {
      maxBoosts_ = value;
    }
  }

  /// <summary>Field number for the "max_soul_eggs" field.</summary>
  public const int MaxSoulEggsFieldNumber = 13;
  private double maxSoulEggs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double MaxSoulEggs {
    get { return maxSoulEggs_; }
    set {
      maxSoulEggs_ = value;
    }
  }

  /// <summary>Field number for the "min_client_version" field.</summary>
  public const int MinClientVersionFieldNumber = 14;
  private uint minClientVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint MinClientVersion {
    get { return minClientVersion_; }
    set {
      minClientVersion_ = value;
    }
  }

  /// <summary>Field number for the "minutes_per_token" field.</summary>
  public const int MinutesPerTokenFieldNumber = 15;
  private double minutesPerToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double MinutesPerToken {
    get { return minutesPerToken_; }
    set {
      minutesPerToken_ = value;
    }
  }

  /// <summary>Field number for the "goal_sets" field.</summary>
  public const int GoalSetsFieldNumber = 16;
  private static readonly pb::FieldCodec<global::Contract.Types.GoalSet> _repeated_goalSets_codec
      = pb::FieldCodec.ForMessage(130, global::Contract.Types.GoalSet.Parser);
  private readonly pbc::RepeatedField<global::Contract.Types.GoalSet> goalSets_ = new pbc::RepeatedField<global::Contract.Types.GoalSet>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Contract.Types.GoalSet> GoalSets {
    get { return goalSets_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Contract);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Contract other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Egg != other.Egg) return false;
    if(!goals_.Equals(other.goals_)) return false;
    if (CoopAllowed != other.CoopAllowed) return false;
    if (MaxCoopSize != other.MaxCoopSize) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ExpirationTime, other.ExpirationTime)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LengthSeconds, other.LengthSeconds)) return false;
    if (Name != other.Name) return false;
    if (Description != other.Description) return false;
    if (Debug != other.Debug) return false;
    if (MaxBoosts != other.MaxBoosts) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxSoulEggs, other.MaxSoulEggs)) return false;
    if (MinClientVersion != other.MinClientVersion) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinutesPerToken, other.MinutesPerToken)) return false;
    if(!goalSets_.Equals(other.goalSets_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Egg != global::Egg.UndefinedEgg) hash ^= Egg.GetHashCode();
    hash ^= goals_.GetHashCode();
    if (CoopAllowed != false) hash ^= CoopAllowed.GetHashCode();
    if (MaxCoopSize != 0) hash ^= MaxCoopSize.GetHashCode();
    if (ExpirationTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ExpirationTime);
    if (LengthSeconds != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LengthSeconds);
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (Debug != false) hash ^= Debug.GetHashCode();
    if (MaxBoosts != 0) hash ^= MaxBoosts.GetHashCode();
    if (MaxSoulEggs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxSoulEggs);
    if (MinClientVersion != 0) hash ^= MinClientVersion.GetHashCode();
    if (MinutesPerToken != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinutesPerToken);
    hash ^= goalSets_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Egg != global::Egg.UndefinedEgg) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Egg);
    }
    goals_.WriteTo(output, _repeated_goals_codec);
    if (CoopAllowed != false) {
      output.WriteRawTag(32);
      output.WriteBool(CoopAllowed);
    }
    if (MaxCoopSize != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(MaxCoopSize);
    }
    if (ExpirationTime != 0D) {
      output.WriteRawTag(49);
      output.WriteDouble(ExpirationTime);
    }
    if (LengthSeconds != 0D) {
      output.WriteRawTag(57);
      output.WriteDouble(LengthSeconds);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Name);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Description);
    }
    if (Debug != false) {
      output.WriteRawTag(88);
      output.WriteBool(Debug);
    }
    if (MaxBoosts != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(MaxBoosts);
    }
    if (MaxSoulEggs != 0D) {
      output.WriteRawTag(105);
      output.WriteDouble(MaxSoulEggs);
    }
    if (MinClientVersion != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(MinClientVersion);
    }
    if (MinutesPerToken != 0D) {
      output.WriteRawTag(121);
      output.WriteDouble(MinutesPerToken);
    }
    goalSets_.WriteTo(output, _repeated_goalSets_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Egg != global::Egg.UndefinedEgg) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Egg);
    }
    goals_.WriteTo(ref output, _repeated_goals_codec);
    if (CoopAllowed != false) {
      output.WriteRawTag(32);
      output.WriteBool(CoopAllowed);
    }
    if (MaxCoopSize != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(MaxCoopSize);
    }
    if (ExpirationTime != 0D) {
      output.WriteRawTag(49);
      output.WriteDouble(ExpirationTime);
    }
    if (LengthSeconds != 0D) {
      output.WriteRawTag(57);
      output.WriteDouble(LengthSeconds);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Name);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Description);
    }
    if (Debug != false) {
      output.WriteRawTag(88);
      output.WriteBool(Debug);
    }
    if (MaxBoosts != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(MaxBoosts);
    }
    if (MaxSoulEggs != 0D) {
      output.WriteRawTag(105);
      output.WriteDouble(MaxSoulEggs);
    }
    if (MinClientVersion != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(MinClientVersion);
    }
    if (MinutesPerToken != 0D) {
      output.WriteRawTag(121);
      output.WriteDouble(MinutesPerToken);
    }
    goalSets_.WriteTo(ref output, _repeated_goalSets_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Egg != global::Egg.UndefinedEgg) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Egg);
    }
    size += goals_.CalculateSize(_repeated_goals_codec);
    if (CoopAllowed != false) {
      size += 1 + 1;
    }
    if (MaxCoopSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCoopSize);
    }
    if (ExpirationTime != 0D) {
      size += 1 + 8;
    }
    if (LengthSeconds != 0D) {
      size += 1 + 8;
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (Debug != false) {
      size += 1 + 1;
    }
    if (MaxBoosts != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxBoosts);
    }
    if (MaxSoulEggs != 0D) {
      size += 1 + 8;
    }
    if (MinClientVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinClientVersion);
    }
    if (MinutesPerToken != 0D) {
      size += 1 + 8;
    }
    size += goalSets_.CalculateSize(_repeated_goalSets_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Contract other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Egg != global::Egg.UndefinedEgg) {
      Egg = other.Egg;
    }
    goals_.Add(other.goals_);
    if (other.CoopAllowed != false) {
      CoopAllowed = other.CoopAllowed;
    }
    if (other.MaxCoopSize != 0) {
      MaxCoopSize = other.MaxCoopSize;
    }
    if (other.ExpirationTime != 0D) {
      ExpirationTime = other.ExpirationTime;
    }
    if (other.LengthSeconds != 0D) {
      LengthSeconds = other.LengthSeconds;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    if (other.Debug != false) {
      Debug = other.Debug;
    }
    if (other.MaxBoosts != 0) {
      MaxBoosts = other.MaxBoosts;
    }
    if (other.MaxSoulEggs != 0D) {
      MaxSoulEggs = other.MaxSoulEggs;
    }
    if (other.MinClientVersion != 0) {
      MinClientVersion = other.MinClientVersion;
    }
    if (other.MinutesPerToken != 0D) {
      MinutesPerToken = other.MinutesPerToken;
    }
    goalSets_.Add(other.goalSets_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 16: {
          Egg = (global::Egg) input.ReadEnum();
          break;
        }
        case 26: {
          goals_.AddEntriesFrom(input, _repeated_goals_codec);
          break;
        }
        case 32: {
          CoopAllowed = input.ReadBool();
          break;
        }
        case 40: {
          MaxCoopSize = input.ReadUInt32();
          break;
        }
        case 49: {
          ExpirationTime = input.ReadDouble();
          break;
        }
        case 57: {
          LengthSeconds = input.ReadDouble();
          break;
        }
        case 74: {
          Name = input.ReadString();
          break;
        }
        case 82: {
          Description = input.ReadString();
          break;
        }
        case 88: {
          Debug = input.ReadBool();
          break;
        }
        case 96: {
          MaxBoosts = input.ReadUInt32();
          break;
        }
        case 105: {
          MaxSoulEggs = input.ReadDouble();
          break;
        }
        case 112: {
          MinClientVersion = input.ReadUInt32();
          break;
        }
        case 121: {
          MinutesPerToken = input.ReadDouble();
          break;
        }
        case 130: {
          goalSets_.AddEntriesFrom(input, _repeated_goalSets_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 16: {
          Egg = (global::Egg) input.ReadEnum();
          break;
        }
        case 26: {
          goals_.AddEntriesFrom(ref input, _repeated_goals_codec);
          break;
        }
        case 32: {
          CoopAllowed = input.ReadBool();
          break;
        }
        case 40: {
          MaxCoopSize = input.ReadUInt32();
          break;
        }
        case 49: {
          ExpirationTime = input.ReadDouble();
          break;
        }
        case 57: {
          LengthSeconds = input.ReadDouble();
          break;
        }
        case 74: {
          Name = input.ReadString();
          break;
        }
        case 82: {
          Description = input.ReadString();
          break;
        }
        case 88: {
          Debug = input.ReadBool();
          break;
        }
        case 96: {
          MaxBoosts = input.ReadUInt32();
          break;
        }
        case 105: {
          MaxSoulEggs = input.ReadDouble();
          break;
        }
        case 112: {
          MinClientVersion = input.ReadUInt32();
          break;
        }
        case 121: {
          MinutesPerToken = input.ReadDouble();
          break;
        }
        case 130: {
          goalSets_.AddEntriesFrom(ref input, _repeated_goalSets_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the Contract message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class Goal : pb::IMessage<Goal>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Goal> _parser = new pb::MessageParser<Goal>(() => new Goal());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Goal> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Contract.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Goal() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Goal(Goal other) : this() {
        type_ = other.type_;
        targetAmount_ = other.targetAmount_;
        rewardType_ = other.rewardType_;
        rewardSubType_ = other.rewardSubType_;
        rewardAmount_ = other.rewardAmount_;
        targetSoulEggs_ = other.targetSoulEggs_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Goal Clone() {
        return new Goal(this);
      }

      /// <summary>Field number for the "type" field.</summary>
      public const int TypeFieldNumber = 1;
      private global::GoalType type_ = global::GoalType.UndefinedGoalType;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::GoalType Type {
        get { return type_; }
        set {
          type_ = value;
        }
      }

      /// <summary>Field number for the "target_amount" field.</summary>
      public const int TargetAmountFieldNumber = 2;
      private double targetAmount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double TargetAmount {
        get { return targetAmount_; }
        set {
          targetAmount_ = value;
        }
      }

      /// <summary>Field number for the "reward_type" field.</summary>
      public const int RewardTypeFieldNumber = 3;
      private global::RewardType rewardType_ = global::RewardType.UndefinedRewardType;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::RewardType RewardType {
        get { return rewardType_; }
        set {
          rewardType_ = value;
        }
      }

      /// <summary>Field number for the "reward_sub_type" field.</summary>
      public const int RewardSubTypeFieldNumber = 4;
      private string rewardSubType_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string RewardSubType {
        get { return rewardSubType_; }
        set {
          rewardSubType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "reward_amount" field.</summary>
      public const int RewardAmountFieldNumber = 5;
      private double rewardAmount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double RewardAmount {
        get { return rewardAmount_; }
        set {
          rewardAmount_ = value;
        }
      }

      /// <summary>Field number for the "target_soul_eggs" field.</summary>
      public const int TargetSoulEggsFieldNumber = 6;
      private double targetSoulEggs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double TargetSoulEggs {
        get { return targetSoulEggs_; }
        set {
          targetSoulEggs_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Goal);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Goal other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Type != other.Type) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TargetAmount, other.TargetAmount)) return false;
        if (RewardType != other.RewardType) return false;
        if (RewardSubType != other.RewardSubType) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RewardAmount, other.RewardAmount)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TargetSoulEggs, other.TargetSoulEggs)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Type != global::GoalType.UndefinedGoalType) hash ^= Type.GetHashCode();
        if (TargetAmount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TargetAmount);
        if (RewardType != global::RewardType.UndefinedRewardType) hash ^= RewardType.GetHashCode();
        if (RewardSubType.Length != 0) hash ^= RewardSubType.GetHashCode();
        if (RewardAmount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RewardAmount);
        if (TargetSoulEggs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TargetSoulEggs);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Type != global::GoalType.UndefinedGoalType) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Type);
        }
        if (TargetAmount != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(TargetAmount);
        }
        if (RewardType != global::RewardType.UndefinedRewardType) {
          output.WriteRawTag(24);
          output.WriteEnum((int) RewardType);
        }
        if (RewardSubType.Length != 0) {
          output.WriteRawTag(34);
          output.WriteString(RewardSubType);
        }
        if (RewardAmount != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(RewardAmount);
        }
        if (TargetSoulEggs != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(TargetSoulEggs);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Type != global::GoalType.UndefinedGoalType) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Type);
        }
        if (TargetAmount != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(TargetAmount);
        }
        if (RewardType != global::RewardType.UndefinedRewardType) {
          output.WriteRawTag(24);
          output.WriteEnum((int) RewardType);
        }
        if (RewardSubType.Length != 0) {
          output.WriteRawTag(34);
          output.WriteString(RewardSubType);
        }
        if (RewardAmount != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(RewardAmount);
        }
        if (TargetSoulEggs != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(TargetSoulEggs);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Type != global::GoalType.UndefinedGoalType) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
        }
        if (TargetAmount != 0D) {
          size += 1 + 8;
        }
        if (RewardType != global::RewardType.UndefinedRewardType) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RewardType);
        }
        if (RewardSubType.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardSubType);
        }
        if (RewardAmount != 0D) {
          size += 1 + 8;
        }
        if (TargetSoulEggs != 0D) {
          size += 1 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Goal other) {
        if (other == null) {
          return;
        }
        if (other.Type != global::GoalType.UndefinedGoalType) {
          Type = other.Type;
        }
        if (other.TargetAmount != 0D) {
          TargetAmount = other.TargetAmount;
        }
        if (other.RewardType != global::RewardType.UndefinedRewardType) {
          RewardType = other.RewardType;
        }
        if (other.RewardSubType.Length != 0) {
          RewardSubType = other.RewardSubType;
        }
        if (other.RewardAmount != 0D) {
          RewardAmount = other.RewardAmount;
        }
        if (other.TargetSoulEggs != 0D) {
          TargetSoulEggs = other.TargetSoulEggs;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Type = (global::GoalType) input.ReadEnum();
              break;
            }
            case 17: {
              TargetAmount = input.ReadDouble();
              break;
            }
            case 24: {
              RewardType = (global::RewardType) input.ReadEnum();
              break;
            }
            case 34: {
              RewardSubType = input.ReadString();
              break;
            }
            case 41: {
              RewardAmount = input.ReadDouble();
              break;
            }
            case 49: {
              TargetSoulEggs = input.ReadDouble();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Type = (global::GoalType) input.ReadEnum();
              break;
            }
            case 17: {
              TargetAmount = input.ReadDouble();
              break;
            }
            case 24: {
              RewardType = (global::RewardType) input.ReadEnum();
              break;
            }
            case 34: {
              RewardSubType = input.ReadString();
              break;
            }
            case 41: {
              RewardAmount = input.ReadDouble();
              break;
            }
            case 49: {
              TargetSoulEggs = input.ReadDouble();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class GoalSet : pb::IMessage<GoalSet>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<GoalSet> _parser = new pb::MessageParser<GoalSet>(() => new GoalSet());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<GoalSet> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Contract.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public GoalSet() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public GoalSet(GoalSet other) : this() {
        goals_ = other.goals_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public GoalSet Clone() {
        return new GoalSet(this);
      }

      /// <summary>Field number for the "goals" field.</summary>
      public const int GoalsFieldNumber = 1;
      private static readonly pb::FieldCodec<global::Contract.Types.Goal> _repeated_goals_codec
          = pb::FieldCodec.ForMessage(10, global::Contract.Types.Goal.Parser);
      private readonly pbc::RepeatedField<global::Contract.Types.Goal> goals_ = new pbc::RepeatedField<global::Contract.Types.Goal>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::Contract.Types.Goal> Goals {
        get { return goals_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as GoalSet);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(GoalSet other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if(!goals_.Equals(other.goals_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        hash ^= goals_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        goals_.WriteTo(output, _repeated_goals_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        goals_.WriteTo(ref output, _repeated_goals_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        size += goals_.CalculateSize(_repeated_goals_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(GoalSet other) {
        if (other == null) {
          return;
        }
        goals_.Add(other.goals_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              goals_.AddEntriesFrom(input, _repeated_goals_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              goals_.AddEntriesFrom(ref input, _repeated_goals_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class BasicRequestInfo : pb::IMessage<BasicRequestInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BasicRequestInfo> _parser = new pb::MessageParser<BasicRequestInfo>(() => new BasicRequestInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BasicRequestInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BasicRequestInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BasicRequestInfo(BasicRequestInfo other) : this() {
    eiUserId_ = other.eiUserId_;
    clientVersion_ = other.clientVersion_;
    version_ = other.version_;
    build_ = other.build_;
    platform_ = other.platform_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BasicRequestInfo Clone() {
    return new BasicRequestInfo(this);
  }

  /// <summary>Field number for the "ei_user_id" field.</summary>
  public const int EiUserIdFieldNumber = 1;
  private string eiUserId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EiUserId {
    get { return eiUserId_; }
    set {
      eiUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "client_version" field.</summary>
  public const int ClientVersionFieldNumber = 2;
  private uint clientVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClientVersion {
    get { return clientVersion_; }
    set {
      clientVersion_ = value;
    }
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 3;
  private string version_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Version {
    get { return version_; }
    set {
      version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "build" field.</summary>
  public const int BuildFieldNumber = 4;
  private string build_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Build {
    get { return build_; }
    set {
      build_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "platform" field.</summary>
  public const int PlatformFieldNumber = 5;
  private string platform_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Platform {
    get { return platform_; }
    set {
      platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BasicRequestInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BasicRequestInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EiUserId != other.EiUserId) return false;
    if (ClientVersion != other.ClientVersion) return false;
    if (Version != other.Version) return false;
    if (Build != other.Build) return false;
    if (Platform != other.Platform) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EiUserId.Length != 0) hash ^= EiUserId.GetHashCode();
    if (ClientVersion != 0) hash ^= ClientVersion.GetHashCode();
    if (Version.Length != 0) hash ^= Version.GetHashCode();
    if (Build.Length != 0) hash ^= Build.GetHashCode();
    if (Platform.Length != 0) hash ^= Platform.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (EiUserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(EiUserId);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClientVersion);
    }
    if (Version.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Version);
    }
    if (Build.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Build);
    }
    if (Platform.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Platform);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (EiUserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(EiUserId);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClientVersion);
    }
    if (Version.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Version);
    }
    if (Build.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Build);
    }
    if (Platform.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Platform);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EiUserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EiUserId);
    }
    if (ClientVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientVersion);
    }
    if (Version.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
    }
    if (Build.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Build);
    }
    if (Platform.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BasicRequestInfo other) {
    if (other == null) {
      return;
    }
    if (other.EiUserId.Length != 0) {
      EiUserId = other.EiUserId;
    }
    if (other.ClientVersion != 0) {
      ClientVersion = other.ClientVersion;
    }
    if (other.Version.Length != 0) {
      Version = other.Version;
    }
    if (other.Build.Length != 0) {
      Build = other.Build;
    }
    if (other.Platform.Length != 0) {
      Platform = other.Platform;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          EiUserId = input.ReadString();
          break;
        }
        case 16: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 26: {
          Version = input.ReadString();
          break;
        }
        case 34: {
          Build = input.ReadString();
          break;
        }
        case 42: {
          Platform = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          EiUserId = input.ReadString();
          break;
        }
        case 16: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 26: {
          Version = input.ReadString();
          break;
        }
        case 34: {
          Build = input.ReadString();
          break;
        }
        case 42: {
          Platform = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ContractsResponse : pb::IMessage<ContractsResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ContractsResponse> _parser = new pb::MessageParser<ContractsResponse>(() => new ContractsResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ContractsResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ContractsResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ContractsResponse(ContractsResponse other) : this() {
    contracts_ = other.contracts_.Clone();
    serverTime_ = other.serverTime_;
    maxEop_ = other.maxEop_;
    warningMessage_ = other.warningMessage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ContractsResponse Clone() {
    return new ContractsResponse(this);
  }

  /// <summary>Field number for the "contracts" field.</summary>
  public const int ContractsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Contract> _repeated_contracts_codec
      = pb::FieldCodec.ForMessage(10, global::Contract.Parser);
  private readonly pbc::RepeatedField<global::Contract> contracts_ = new pbc::RepeatedField<global::Contract>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Contract> Contracts {
    get { return contracts_; }
  }

  /// <summary>Field number for the "server_time" field.</summary>
  public const int ServerTimeFieldNumber = 2;
  private double serverTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double ServerTime {
    get { return serverTime_; }
    set {
      serverTime_ = value;
    }
  }

  /// <summary>Field number for the "max_eop" field.</summary>
  public const int MaxEopFieldNumber = 3;
  private uint maxEop_;
  /// <summary>
  /// Unknown
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint MaxEop {
    get { return maxEop_; }
    set {
      maxEop_ = value;
    }
  }

  /// <summary>Field number for the "warning_message" field.</summary>
  public const int WarningMessageFieldNumber = 4;
  private string warningMessage_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string WarningMessage {
    get { return warningMessage_; }
    set {
      warningMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ContractsResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ContractsResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!contracts_.Equals(other.contracts_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ServerTime, other.ServerTime)) return false;
    if (MaxEop != other.MaxEop) return false;
    if (WarningMessage != other.WarningMessage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= contracts_.GetHashCode();
    if (ServerTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ServerTime);
    if (MaxEop != 0) hash ^= MaxEop.GetHashCode();
    if (WarningMessage.Length != 0) hash ^= WarningMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    contracts_.WriteTo(output, _repeated_contracts_codec);
    if (ServerTime != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(ServerTime);
    }
    if (MaxEop != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(MaxEop);
    }
    if (WarningMessage.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(WarningMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    contracts_.WriteTo(ref output, _repeated_contracts_codec);
    if (ServerTime != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(ServerTime);
    }
    if (MaxEop != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(MaxEop);
    }
    if (WarningMessage.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(WarningMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += contracts_.CalculateSize(_repeated_contracts_codec);
    if (ServerTime != 0D) {
      size += 1 + 8;
    }
    if (MaxEop != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxEop);
    }
    if (WarningMessage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WarningMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ContractsResponse other) {
    if (other == null) {
      return;
    }
    contracts_.Add(other.contracts_);
    if (other.ServerTime != 0D) {
      ServerTime = other.ServerTime;
    }
    if (other.MaxEop != 0) {
      MaxEop = other.MaxEop;
    }
    if (other.WarningMessage.Length != 0) {
      WarningMessage = other.WarningMessage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          contracts_.AddEntriesFrom(input, _repeated_contracts_codec);
          break;
        }
        case 17: {
          ServerTime = input.ReadDouble();
          break;
        }
        case 24: {
          MaxEop = input.ReadUInt32();
          break;
        }
        case 34: {
          WarningMessage = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          contracts_.AddEntriesFrom(ref input, _repeated_contracts_codec);
          break;
        }
        case 17: {
          ServerTime = input.ReadDouble();
          break;
        }
        case 24: {
          MaxEop = input.ReadUInt32();
          break;
        }
        case 34: {
          WarningMessage = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CoopStatusRequest : pb::IMessage<CoopStatusRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CoopStatusRequest> _parser = new pb::MessageParser<CoopStatusRequest>(() => new CoopStatusRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CoopStatusRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopStatusRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopStatusRequest(CoopStatusRequest other) : this() {
    contractId_ = other.contractId_;
    coopId_ = other.coopId_;
    userId_ = other.userId_;
    clientVersion_ = other.clientVersion_;
    requestInfo_ = other.requestInfo_ != null ? other.requestInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopStatusRequest Clone() {
    return new CoopStatusRequest(this);
  }

  /// <summary>Field number for the "contract_id" field.</summary>
  public const int ContractIdFieldNumber = 1;
  private string contractId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContractId {
    get { return contractId_; }
    set {
      contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "coop_id" field.</summary>
  public const int CoopIdFieldNumber = 2;
  private string coopId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CoopId {
    get { return coopId_; }
    set {
      coopId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 3;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "client_version" field.</summary>
  public const int ClientVersionFieldNumber = 4;
  private uint clientVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClientVersion {
    get { return clientVersion_; }
    set {
      clientVersion_ = value;
    }
  }

  /// <summary>Field number for the "request_info" field.</summary>
  public const int RequestInfoFieldNumber = 5;
  private global::BasicRequestInfo requestInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BasicRequestInfo RequestInfo {
    get { return requestInfo_; }
    set {
      requestInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CoopStatusRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CoopStatusRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ContractId != other.ContractId) return false;
    if (CoopId != other.CoopId) return false;
    if (UserId != other.UserId) return false;
    if (ClientVersion != other.ClientVersion) return false;
    if (!object.Equals(RequestInfo, other.RequestInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
    if (CoopId.Length != 0) hash ^= CoopId.GetHashCode();
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (ClientVersion != 0) hash ^= ClientVersion.GetHashCode();
    if (requestInfo_ != null) hash ^= RequestInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ContractId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ContractId);
    }
    if (CoopId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CoopId);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(UserId);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(ClientVersion);
    }
    if (requestInfo_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(RequestInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ContractId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ContractId);
    }
    if (CoopId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CoopId);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(UserId);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(ClientVersion);
    }
    if (requestInfo_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(RequestInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ContractId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
    }
    if (CoopId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CoopId);
    }
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (ClientVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientVersion);
    }
    if (requestInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CoopStatusRequest other) {
    if (other == null) {
      return;
    }
    if (other.ContractId.Length != 0) {
      ContractId = other.ContractId;
    }
    if (other.CoopId.Length != 0) {
      CoopId = other.CoopId;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.ClientVersion != 0) {
      ClientVersion = other.ClientVersion;
    }
    if (other.requestInfo_ != null) {
      if (requestInfo_ == null) {
        RequestInfo = new global::BasicRequestInfo();
      }
      RequestInfo.MergeFrom(other.RequestInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ContractId = input.ReadString();
          break;
        }
        case 18: {
          CoopId = input.ReadString();
          break;
        }
        case 26: {
          UserId = input.ReadString();
          break;
        }
        case 32: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 42: {
          if (requestInfo_ == null) {
            RequestInfo = new global::BasicRequestInfo();
          }
          input.ReadMessage(RequestInfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ContractId = input.ReadString();
          break;
        }
        case 18: {
          CoopId = input.ReadString();
          break;
        }
        case 26: {
          UserId = input.ReadString();
          break;
        }
        case 32: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 42: {
          if (requestInfo_ == null) {
            RequestInfo = new global::BasicRequestInfo();
          }
          input.ReadMessage(RequestInfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CoopStatusResponse : pb::IMessage<CoopStatusResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CoopStatusResponse> _parser = new pb::MessageParser<CoopStatusResponse>(() => new CoopStatusResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CoopStatusResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopStatusResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopStatusResponse(CoopStatusResponse other) : this() {
    coopStatus_ = other.coopStatus_ != null ? other.coopStatus_.Clone() : null;
    checksum_ = other.checksum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopStatusResponse Clone() {
    return new CoopStatusResponse(this);
  }

  /// <summary>Field number for the "coopStatus" field.</summary>
  public const int CoopStatusFieldNumber = 1;
  private global::CoopStatus coopStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CoopStatus CoopStatus {
    get { return coopStatus_; }
    set {
      coopStatus_ = value;
    }
  }

  /// <summary>Field number for the "checksum" field.</summary>
  public const int ChecksumFieldNumber = 2;
  private string checksum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Checksum {
    get { return checksum_; }
    set {
      checksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CoopStatusResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CoopStatusResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CoopStatus, other.CoopStatus)) return false;
    if (Checksum != other.Checksum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (coopStatus_ != null) hash ^= CoopStatus.GetHashCode();
    if (Checksum.Length != 0) hash ^= Checksum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (coopStatus_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CoopStatus);
    }
    if (Checksum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Checksum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (coopStatus_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CoopStatus);
    }
    if (Checksum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Checksum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (coopStatus_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoopStatus);
    }
    if (Checksum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Checksum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CoopStatusResponse other) {
    if (other == null) {
      return;
    }
    if (other.coopStatus_ != null) {
      if (coopStatus_ == null) {
        CoopStatus = new global::CoopStatus();
      }
      CoopStatus.MergeFrom(other.CoopStatus);
    }
    if (other.Checksum.Length != 0) {
      Checksum = other.Checksum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (coopStatus_ == null) {
            CoopStatus = new global::CoopStatus();
          }
          input.ReadMessage(CoopStatus);
          break;
        }
        case 18: {
          Checksum = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (coopStatus_ == null) {
            CoopStatus = new global::CoopStatus();
          }
          input.ReadMessage(CoopStatus);
          break;
        }
        case 18: {
          Checksum = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CoopStatus : pb::IMessage<CoopStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CoopStatus> _parser = new pb::MessageParser<CoopStatus>(() => new CoopStatus());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CoopStatus> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopStatus() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopStatus(CoopStatus other) : this() {
    contractId_ = other.contractId_;
    totalAmount_ = other.totalAmount_;
    coopId_ = other.coopId_;
    contributors_ = other.contributors_.Clone();
    secondsRemaining_ = other.secondsRemaining_;
    allMembersReporting_ = other.allMembersReporting_;
    gracePeriodSecondsRemaining_ = other.gracePeriodSecondsRemaining_;
    autoGenerated_ = other.autoGenerated_;
    creatorId_ = other.creatorId_;
    public_ = other.public_;
    gifts_ = other.gifts_.Clone();
    localTimestamp_ = other.localTimestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopStatus Clone() {
    return new CoopStatus(this);
  }

  /// <summary>Field number for the "contract_id" field.</summary>
  public const int ContractIdFieldNumber = 1;
  private string contractId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContractId {
    get { return contractId_; }
    set {
      contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "total_amount" field.</summary>
  public const int TotalAmountFieldNumber = 2;
  private double totalAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double TotalAmount {
    get { return totalAmount_; }
    set {
      totalAmount_ = value;
    }
  }

  /// <summary>Field number for the "coop_id" field.</summary>
  public const int CoopIdFieldNumber = 3;
  private string coopId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CoopId {
    get { return coopId_; }
    set {
      coopId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contributors" field.</summary>
  public const int ContributorsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CoopStatus.Types.ContributionInfo> _repeated_contributors_codec
      = pb::FieldCodec.ForMessage(34, global::CoopStatus.Types.ContributionInfo.Parser);
  private readonly pbc::RepeatedField<global::CoopStatus.Types.ContributionInfo> contributors_ = new pbc::RepeatedField<global::CoopStatus.Types.ContributionInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CoopStatus.Types.ContributionInfo> Contributors {
    get { return contributors_; }
  }

  /// <summary>Field number for the "seconds_remaining" field.</summary>
  public const int SecondsRemainingFieldNumber = 5;
  private double secondsRemaining_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double SecondsRemaining {
    get { return secondsRemaining_; }
    set {
      secondsRemaining_ = value;
    }
  }

  /// <summary>Field number for the "all_members_reporting" field.</summary>
  public const int AllMembersReportingFieldNumber = 6;
  private bool allMembersReporting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool AllMembersReporting {
    get { return allMembersReporting_; }
    set {
      allMembersReporting_ = value;
    }
  }

  /// <summary>Field number for the "grace_period_seconds_remaining" field.</summary>
  public const int GracePeriodSecondsRemainingFieldNumber = 7;
  private double gracePeriodSecondsRemaining_;
  /// <summary>
  /// After 48 hours contract becomes inactive (172800 seconds) more than time_left.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double GracePeriodSecondsRemaining {
    get { return gracePeriodSecondsRemaining_; }
    set {
      gracePeriodSecondsRemaining_ = value;
    }
  }

  /// <summary>Field number for the "auto_generated" field.</summary>
  public const int AutoGeneratedFieldNumber = 8;
  private bool autoGenerated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool AutoGenerated {
    get { return autoGenerated_; }
    set {
      autoGenerated_ = value;
    }
  }

  /// <summary>Field number for the "creator_id" field.</summary>
  public const int CreatorIdFieldNumber = 9;
  private string creatorId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CreatorId {
    get { return creatorId_; }
    set {
      creatorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "public" field.</summary>
  public const int PublicFieldNumber = 10;
  private bool public_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Public {
    get { return public_; }
    set {
      public_ = value;
    }
  }

  /// <summary>Field number for the "gifts" field.</summary>
  public const int GiftsFieldNumber = 11;
  private static readonly pb::FieldCodec<global::CoopStatus.Types.CoopGift> _repeated_gifts_codec
      = pb::FieldCodec.ForMessage(90, global::CoopStatus.Types.CoopGift.Parser);
  private readonly pbc::RepeatedField<global::CoopStatus.Types.CoopGift> gifts_ = new pbc::RepeatedField<global::CoopStatus.Types.CoopGift>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CoopStatus.Types.CoopGift> Gifts {
    get { return gifts_; }
  }

  /// <summary>Field number for the "local_timestamp" field.</summary>
  public const int LocalTimestampFieldNumber = 12;
  private double localTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double LocalTimestamp {
    get { return localTimestamp_; }
    set {
      localTimestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CoopStatus);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CoopStatus other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ContractId != other.ContractId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalAmount, other.TotalAmount)) return false;
    if (CoopId != other.CoopId) return false;
    if(!contributors_.Equals(other.contributors_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SecondsRemaining, other.SecondsRemaining)) return false;
    if (AllMembersReporting != other.AllMembersReporting) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GracePeriodSecondsRemaining, other.GracePeriodSecondsRemaining)) return false;
    if (AutoGenerated != other.AutoGenerated) return false;
    if (CreatorId != other.CreatorId) return false;
    if (Public != other.Public) return false;
    if(!gifts_.Equals(other.gifts_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LocalTimestamp, other.LocalTimestamp)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
    if (TotalAmount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalAmount);
    if (CoopId.Length != 0) hash ^= CoopId.GetHashCode();
    hash ^= contributors_.GetHashCode();
    if (SecondsRemaining != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SecondsRemaining);
    if (AllMembersReporting != false) hash ^= AllMembersReporting.GetHashCode();
    if (GracePeriodSecondsRemaining != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GracePeriodSecondsRemaining);
    if (AutoGenerated != false) hash ^= AutoGenerated.GetHashCode();
    if (CreatorId.Length != 0) hash ^= CreatorId.GetHashCode();
    if (Public != false) hash ^= Public.GetHashCode();
    hash ^= gifts_.GetHashCode();
    if (LocalTimestamp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LocalTimestamp);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ContractId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ContractId);
    }
    if (TotalAmount != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(TotalAmount);
    }
    if (CoopId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(CoopId);
    }
    contributors_.WriteTo(output, _repeated_contributors_codec);
    if (SecondsRemaining != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(SecondsRemaining);
    }
    if (AllMembersReporting != false) {
      output.WriteRawTag(48);
      output.WriteBool(AllMembersReporting);
    }
    if (GracePeriodSecondsRemaining != 0D) {
      output.WriteRawTag(57);
      output.WriteDouble(GracePeriodSecondsRemaining);
    }
    if (AutoGenerated != false) {
      output.WriteRawTag(64);
      output.WriteBool(AutoGenerated);
    }
    if (CreatorId.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(CreatorId);
    }
    if (Public != false) {
      output.WriteRawTag(80);
      output.WriteBool(Public);
    }
    gifts_.WriteTo(output, _repeated_gifts_codec);
    if (LocalTimestamp != 0D) {
      output.WriteRawTag(97);
      output.WriteDouble(LocalTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ContractId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ContractId);
    }
    if (TotalAmount != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(TotalAmount);
    }
    if (CoopId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(CoopId);
    }
    contributors_.WriteTo(ref output, _repeated_contributors_codec);
    if (SecondsRemaining != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(SecondsRemaining);
    }
    if (AllMembersReporting != false) {
      output.WriteRawTag(48);
      output.WriteBool(AllMembersReporting);
    }
    if (GracePeriodSecondsRemaining != 0D) {
      output.WriteRawTag(57);
      output.WriteDouble(GracePeriodSecondsRemaining);
    }
    if (AutoGenerated != false) {
      output.WriteRawTag(64);
      output.WriteBool(AutoGenerated);
    }
    if (CreatorId.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(CreatorId);
    }
    if (Public != false) {
      output.WriteRawTag(80);
      output.WriteBool(Public);
    }
    gifts_.WriteTo(ref output, _repeated_gifts_codec);
    if (LocalTimestamp != 0D) {
      output.WriteRawTag(97);
      output.WriteDouble(LocalTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ContractId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
    }
    if (TotalAmount != 0D) {
      size += 1 + 8;
    }
    if (CoopId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CoopId);
    }
    size += contributors_.CalculateSize(_repeated_contributors_codec);
    if (SecondsRemaining != 0D) {
      size += 1 + 8;
    }
    if (AllMembersReporting != false) {
      size += 1 + 1;
    }
    if (GracePeriodSecondsRemaining != 0D) {
      size += 1 + 8;
    }
    if (AutoGenerated != false) {
      size += 1 + 1;
    }
    if (CreatorId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatorId);
    }
    if (Public != false) {
      size += 1 + 1;
    }
    size += gifts_.CalculateSize(_repeated_gifts_codec);
    if (LocalTimestamp != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CoopStatus other) {
    if (other == null) {
      return;
    }
    if (other.ContractId.Length != 0) {
      ContractId = other.ContractId;
    }
    if (other.TotalAmount != 0D) {
      TotalAmount = other.TotalAmount;
    }
    if (other.CoopId.Length != 0) {
      CoopId = other.CoopId;
    }
    contributors_.Add(other.contributors_);
    if (other.SecondsRemaining != 0D) {
      SecondsRemaining = other.SecondsRemaining;
    }
    if (other.AllMembersReporting != false) {
      AllMembersReporting = other.AllMembersReporting;
    }
    if (other.GracePeriodSecondsRemaining != 0D) {
      GracePeriodSecondsRemaining = other.GracePeriodSecondsRemaining;
    }
    if (other.AutoGenerated != false) {
      AutoGenerated = other.AutoGenerated;
    }
    if (other.CreatorId.Length != 0) {
      CreatorId = other.CreatorId;
    }
    if (other.Public != false) {
      Public = other.Public;
    }
    gifts_.Add(other.gifts_);
    if (other.LocalTimestamp != 0D) {
      LocalTimestamp = other.LocalTimestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ContractId = input.ReadString();
          break;
        }
        case 17: {
          TotalAmount = input.ReadDouble();
          break;
        }
        case 26: {
          CoopId = input.ReadString();
          break;
        }
        case 34: {
          contributors_.AddEntriesFrom(input, _repeated_contributors_codec);
          break;
        }
        case 41: {
          SecondsRemaining = input.ReadDouble();
          break;
        }
        case 48: {
          AllMembersReporting = input.ReadBool();
          break;
        }
        case 57: {
          GracePeriodSecondsRemaining = input.ReadDouble();
          break;
        }
        case 64: {
          AutoGenerated = input.ReadBool();
          break;
        }
        case 74: {
          CreatorId = input.ReadString();
          break;
        }
        case 80: {
          Public = input.ReadBool();
          break;
        }
        case 90: {
          gifts_.AddEntriesFrom(input, _repeated_gifts_codec);
          break;
        }
        case 97: {
          LocalTimestamp = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ContractId = input.ReadString();
          break;
        }
        case 17: {
          TotalAmount = input.ReadDouble();
          break;
        }
        case 26: {
          CoopId = input.ReadString();
          break;
        }
        case 34: {
          contributors_.AddEntriesFrom(ref input, _repeated_contributors_codec);
          break;
        }
        case 41: {
          SecondsRemaining = input.ReadDouble();
          break;
        }
        case 48: {
          AllMembersReporting = input.ReadBool();
          break;
        }
        case 57: {
          GracePeriodSecondsRemaining = input.ReadDouble();
          break;
        }
        case 64: {
          AutoGenerated = input.ReadBool();
          break;
        }
        case 74: {
          CreatorId = input.ReadString();
          break;
        }
        case 80: {
          Public = input.ReadBool();
          break;
        }
        case 90: {
          gifts_.AddEntriesFrom(ref input, _repeated_gifts_codec);
          break;
        }
        case 97: {
          LocalTimestamp = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CoopStatus message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class CoopGift : pb::IMessage<CoopGift>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<CoopGift> _parser = new pb::MessageParser<CoopGift>(() => new CoopGift());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<CoopGift> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CoopStatus.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CoopGift() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CoopGift(CoopGift other) : this() {
        userId_ = other.userId_;
        amount_ = other.amount_;
        userName_ = other.userName_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CoopGift Clone() {
        return new CoopGift(this);
      }

      /// <summary>Field number for the "user_id" field.</summary>
      public const int UserIdFieldNumber = 1;
      private string userId_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string UserId {
        get { return userId_; }
        set {
          userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "amount" field.</summary>
      public const int AmountFieldNumber = 2;
      private uint amount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint Amount {
        get { return amount_; }
        set {
          amount_ = value;
        }
      }

      /// <summary>Field number for the "user_name" field.</summary>
      public const int UserNameFieldNumber = 3;
      private string userName_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string UserName {
        get { return userName_; }
        set {
          userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as CoopGift);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(CoopGift other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (UserId != other.UserId) return false;
        if (Amount != other.Amount) return false;
        if (UserName != other.UserName) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (UserId.Length != 0) hash ^= UserId.GetHashCode();
        if (Amount != 0) hash ^= Amount.GetHashCode();
        if (UserName.Length != 0) hash ^= UserName.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (UserId.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(UserId);
        }
        if (Amount != 0) {
          output.WriteRawTag(16);
          output.WriteUInt32(Amount);
        }
        if (UserName.Length != 0) {
          output.WriteRawTag(26);
          output.WriteString(UserName);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (UserId.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(UserId);
        }
        if (Amount != 0) {
          output.WriteRawTag(16);
          output.WriteUInt32(Amount);
        }
        if (UserName.Length != 0) {
          output.WriteRawTag(26);
          output.WriteString(UserName);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (UserId.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
        }
        if (Amount != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
        }
        if (UserName.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(CoopGift other) {
        if (other == null) {
          return;
        }
        if (other.UserId.Length != 0) {
          UserId = other.UserId;
        }
        if (other.Amount != 0) {
          Amount = other.Amount;
        }
        if (other.UserName.Length != 0) {
          UserName = other.UserName;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              UserId = input.ReadString();
              break;
            }
            case 16: {
              Amount = input.ReadUInt32();
              break;
            }
            case 26: {
              UserName = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              UserId = input.ReadString();
              break;
            }
            case 16: {
              Amount = input.ReadUInt32();
              break;
            }
            case 26: {
              UserName = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ContributionInfo : pb::IMessage<ContributionInfo>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ContributionInfo> _parser = new pb::MessageParser<ContributionInfo>(() => new ContributionInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<ContributionInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CoopStatus.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ContributionInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ContributionInfo(ContributionInfo other) : this() {
        userId_ = other.userId_;
        userName_ = other.userName_;
        contributionAmount_ = other.contributionAmount_;
        active_ = other.active_;
        platform_ = other.platform_;
        contributionRate_ = other.contributionRate_;
        timeCheatDetected_ = other.timeCheatDetected_;
        rankChange_ = other.rankChange_;
        pushId_ = other.pushId_;
        banVotes_ = other.banVotes_;
        soulPower_ = other.soulPower_;
        boostTokens_ = other.boostTokens_;
        buffHistory_ = other.buffHistory_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ContributionInfo Clone() {
        return new ContributionInfo(this);
      }

      /// <summary>Field number for the "user_id" field.</summary>
      public const int UserIdFieldNumber = 1;
      private string userId_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string UserId {
        get { return userId_; }
        set {
          userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "user_name" field.</summary>
      public const int UserNameFieldNumber = 2;
      private string userName_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string UserName {
        get { return userName_; }
        set {
          userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "contribution_amount" field.</summary>
      public const int ContributionAmountFieldNumber = 3;
      private double contributionAmount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double ContributionAmount {
        get { return contributionAmount_; }
        set {
          contributionAmount_ = value;
        }
      }

      /// <summary>Field number for the "active" field.</summary>
      public const int ActiveFieldNumber = 4;
      private bool active_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Active {
        get { return active_; }
        set {
          active_ = value;
        }
      }

      /// <summary>Field number for the "platform" field.</summary>
      public const int PlatformFieldNumber = 5;
      private uint platform_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint Platform {
        get { return platform_; }
        set {
          platform_ = value;
        }
      }

      /// <summary>Field number for the "contribution_rate" field.</summary>
      public const int ContributionRateFieldNumber = 6;
      private double contributionRate_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double ContributionRate {
        get { return contributionRate_; }
        set {
          contributionRate_ = value;
        }
      }

      /// <summary>Field number for the "time_cheat_detected" field.</summary>
      public const int TimeCheatDetectedFieldNumber = 7;
      private bool timeCheatDetected_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool TimeCheatDetected {
        get { return timeCheatDetected_; }
        set {
          timeCheatDetected_ = value;
        }
      }

      /// <summary>Field number for the "rank_change" field.</summary>
      public const int RankChangeFieldNumber = 8;
      private int rankChange_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int RankChange {
        get { return rankChange_; }
        set {
          rankChange_ = value;
        }
      }

      /// <summary>Field number for the "push_id" field.</summary>
      public const int PushIdFieldNumber = 9;
      private string pushId_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string PushId {
        get { return pushId_; }
        set {
          pushId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "ban_votes" field.</summary>
      public const int BanVotesFieldNumber = 10;
      private uint banVotes_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint BanVotes {
        get { return banVotes_; }
        set {
          banVotes_ = value;
        }
      }

      /// <summary>Field number for the "soul_power" field.</summary>
      public const int SoulPowerFieldNumber = 11;
      private double soulPower_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double SoulPower {
        get { return soulPower_; }
        set {
          soulPower_ = value;
        }
      }

      /// <summary>Field number for the "boost_tokens" field.</summary>
      public const int BoostTokensFieldNumber = 12;
      private uint boostTokens_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint BoostTokens {
        get { return boostTokens_; }
        set {
          boostTokens_ = value;
        }
      }

      /// <summary>Field number for the "buff_history" field.</summary>
      public const int BuffHistoryFieldNumber = 13;
      private static readonly pb::FieldCodec<global::CoopBuffState> _repeated_buffHistory_codec
          = pb::FieldCodec.ForMessage(106, global::CoopBuffState.Parser);
      private readonly pbc::RepeatedField<global::CoopBuffState> buffHistory_ = new pbc::RepeatedField<global::CoopBuffState>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::CoopBuffState> BuffHistory {
        get { return buffHistory_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as ContributionInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(ContributionInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (UserId != other.UserId) return false;
        if (UserName != other.UserName) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ContributionAmount, other.ContributionAmount)) return false;
        if (Active != other.Active) return false;
        if (Platform != other.Platform) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ContributionRate, other.ContributionRate)) return false;
        if (TimeCheatDetected != other.TimeCheatDetected) return false;
        if (RankChange != other.RankChange) return false;
        if (PushId != other.PushId) return false;
        if (BanVotes != other.BanVotes) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SoulPower, other.SoulPower)) return false;
        if (BoostTokens != other.BoostTokens) return false;
        if(!buffHistory_.Equals(other.buffHistory_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (UserId.Length != 0) hash ^= UserId.GetHashCode();
        if (UserName.Length != 0) hash ^= UserName.GetHashCode();
        if (ContributionAmount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ContributionAmount);
        if (Active != false) hash ^= Active.GetHashCode();
        if (Platform != 0) hash ^= Platform.GetHashCode();
        if (ContributionRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ContributionRate);
        if (TimeCheatDetected != false) hash ^= TimeCheatDetected.GetHashCode();
        if (RankChange != 0) hash ^= RankChange.GetHashCode();
        if (PushId.Length != 0) hash ^= PushId.GetHashCode();
        if (BanVotes != 0) hash ^= BanVotes.GetHashCode();
        if (SoulPower != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SoulPower);
        if (BoostTokens != 0) hash ^= BoostTokens.GetHashCode();
        hash ^= buffHistory_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (UserId.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(UserId);
        }
        if (UserName.Length != 0) {
          output.WriteRawTag(18);
          output.WriteString(UserName);
        }
        if (ContributionAmount != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(ContributionAmount);
        }
        if (Active != false) {
          output.WriteRawTag(32);
          output.WriteBool(Active);
        }
        if (Platform != 0) {
          output.WriteRawTag(40);
          output.WriteUInt32(Platform);
        }
        if (ContributionRate != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(ContributionRate);
        }
        if (TimeCheatDetected != false) {
          output.WriteRawTag(56);
          output.WriteBool(TimeCheatDetected);
        }
        if (RankChange != 0) {
          output.WriteRawTag(64);
          output.WriteInt32(RankChange);
        }
        if (PushId.Length != 0) {
          output.WriteRawTag(74);
          output.WriteString(PushId);
        }
        if (BanVotes != 0) {
          output.WriteRawTag(80);
          output.WriteUInt32(BanVotes);
        }
        if (SoulPower != 0D) {
          output.WriteRawTag(89);
          output.WriteDouble(SoulPower);
        }
        if (BoostTokens != 0) {
          output.WriteRawTag(96);
          output.WriteUInt32(BoostTokens);
        }
        buffHistory_.WriteTo(output, _repeated_buffHistory_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (UserId.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(UserId);
        }
        if (UserName.Length != 0) {
          output.WriteRawTag(18);
          output.WriteString(UserName);
        }
        if (ContributionAmount != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(ContributionAmount);
        }
        if (Active != false) {
          output.WriteRawTag(32);
          output.WriteBool(Active);
        }
        if (Platform != 0) {
          output.WriteRawTag(40);
          output.WriteUInt32(Platform);
        }
        if (ContributionRate != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(ContributionRate);
        }
        if (TimeCheatDetected != false) {
          output.WriteRawTag(56);
          output.WriteBool(TimeCheatDetected);
        }
        if (RankChange != 0) {
          output.WriteRawTag(64);
          output.WriteInt32(RankChange);
        }
        if (PushId.Length != 0) {
          output.WriteRawTag(74);
          output.WriteString(PushId);
        }
        if (BanVotes != 0) {
          output.WriteRawTag(80);
          output.WriteUInt32(BanVotes);
        }
        if (SoulPower != 0D) {
          output.WriteRawTag(89);
          output.WriteDouble(SoulPower);
        }
        if (BoostTokens != 0) {
          output.WriteRawTag(96);
          output.WriteUInt32(BoostTokens);
        }
        buffHistory_.WriteTo(ref output, _repeated_buffHistory_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (UserId.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
        }
        if (UserName.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
        }
        if (ContributionAmount != 0D) {
          size += 1 + 8;
        }
        if (Active != false) {
          size += 1 + 1;
        }
        if (Platform != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Platform);
        }
        if (ContributionRate != 0D) {
          size += 1 + 8;
        }
        if (TimeCheatDetected != false) {
          size += 1 + 1;
        }
        if (RankChange != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankChange);
        }
        if (PushId.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(PushId);
        }
        if (BanVotes != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BanVotes);
        }
        if (SoulPower != 0D) {
          size += 1 + 8;
        }
        if (BoostTokens != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BoostTokens);
        }
        size += buffHistory_.CalculateSize(_repeated_buffHistory_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(ContributionInfo other) {
        if (other == null) {
          return;
        }
        if (other.UserId.Length != 0) {
          UserId = other.UserId;
        }
        if (other.UserName.Length != 0) {
          UserName = other.UserName;
        }
        if (other.ContributionAmount != 0D) {
          ContributionAmount = other.ContributionAmount;
        }
        if (other.Active != false) {
          Active = other.Active;
        }
        if (other.Platform != 0) {
          Platform = other.Platform;
        }
        if (other.ContributionRate != 0D) {
          ContributionRate = other.ContributionRate;
        }
        if (other.TimeCheatDetected != false) {
          TimeCheatDetected = other.TimeCheatDetected;
        }
        if (other.RankChange != 0) {
          RankChange = other.RankChange;
        }
        if (other.PushId.Length != 0) {
          PushId = other.PushId;
        }
        if (other.BanVotes != 0) {
          BanVotes = other.BanVotes;
        }
        if (other.SoulPower != 0D) {
          SoulPower = other.SoulPower;
        }
        if (other.BoostTokens != 0) {
          BoostTokens = other.BoostTokens;
        }
        buffHistory_.Add(other.buffHistory_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              UserId = input.ReadString();
              break;
            }
            case 18: {
              UserName = input.ReadString();
              break;
            }
            case 25: {
              ContributionAmount = input.ReadDouble();
              break;
            }
            case 32: {
              Active = input.ReadBool();
              break;
            }
            case 40: {
              Platform = input.ReadUInt32();
              break;
            }
            case 49: {
              ContributionRate = input.ReadDouble();
              break;
            }
            case 56: {
              TimeCheatDetected = input.ReadBool();
              break;
            }
            case 64: {
              RankChange = input.ReadInt32();
              break;
            }
            case 74: {
              PushId = input.ReadString();
              break;
            }
            case 80: {
              BanVotes = input.ReadUInt32();
              break;
            }
            case 89: {
              SoulPower = input.ReadDouble();
              break;
            }
            case 96: {
              BoostTokens = input.ReadUInt32();
              break;
            }
            case 106: {
              buffHistory_.AddEntriesFrom(input, _repeated_buffHistory_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              UserId = input.ReadString();
              break;
            }
            case 18: {
              UserName = input.ReadString();
              break;
            }
            case 25: {
              ContributionAmount = input.ReadDouble();
              break;
            }
            case 32: {
              Active = input.ReadBool();
              break;
            }
            case 40: {
              Platform = input.ReadUInt32();
              break;
            }
            case 49: {
              ContributionRate = input.ReadDouble();
              break;
            }
            case 56: {
              TimeCheatDetected = input.ReadBool();
              break;
            }
            case 64: {
              RankChange = input.ReadInt32();
              break;
            }
            case 74: {
              PushId = input.ReadString();
              break;
            }
            case 80: {
              BanVotes = input.ReadUInt32();
              break;
            }
            case 89: {
              SoulPower = input.ReadDouble();
              break;
            }
            case 96: {
              BoostTokens = input.ReadUInt32();
              break;
            }
            case 106: {
              buffHistory_.AddEntriesFrom(ref input, _repeated_buffHistory_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class LocalContract : pb::IMessage<LocalContract>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LocalContract> _parser = new pb::MessageParser<LocalContract>(() => new LocalContract());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LocalContract> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LocalContract() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LocalContract(LocalContract other) : this() {
    contract_ = other.contract_ != null ? other.contract_.Clone() : null;
    coopId_ = other.coopId_;
    timeAccepted_ = other.timeAccepted_;
    cancelled_ = other.cancelled_;
    coopSharedEndTime_ = other.coopSharedEndTime_;
    lastAmountWhenRewardGiven_ = other.lastAmountWhenRewardGiven_;
    accepted_ = other.accepted_;
    new_ = other.new_;
    coopGracePeriodEndTime_ = other.coopGracePeriodEndTime_;
    coopContributionFinalized_ = other.coopContributionFinalized_;
    coopLastUploadedContribution_ = other.coopLastUploadedContribution_;
    boostsUsed_ = other.boostsUsed_;
    coopUserId_ = other.coopUserId_;
    numGoalsAchieved_ = other.numGoalsAchieved_;
    league_ = other.league_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LocalContract Clone() {
    return new LocalContract(this);
  }

  /// <summary>Field number for the "contract" field.</summary>
  public const int ContractFieldNumber = 1;
  private global::Contract contract_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Contract Contract {
    get { return contract_; }
    set {
      contract_ = value;
    }
  }

  /// <summary>Field number for the "coop_id" field.</summary>
  public const int CoopIdFieldNumber = 2;
  private string coopId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CoopId {
    get { return coopId_; }
    set {
      coopId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time_accepted" field.</summary>
  public const int TimeAcceptedFieldNumber = 3;
  private double timeAccepted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double TimeAccepted {
    get { return timeAccepted_; }
    set {
      timeAccepted_ = value;
    }
  }

  /// <summary>Field number for the "cancelled" field.</summary>
  public const int CancelledFieldNumber = 4;
  private bool cancelled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Cancelled {
    get { return cancelled_; }
    set {
      cancelled_ = value;
    }
  }

  /// <summary>Field number for the "coop_shared_end_time" field.</summary>
  public const int CoopSharedEndTimeFieldNumber = 5;
  private double coopSharedEndTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double CoopSharedEndTime {
    get { return coopSharedEndTime_; }
    set {
      coopSharedEndTime_ = value;
    }
  }

  /// <summary>Field number for the "last_amount_when_reward_given" field.</summary>
  public const int LastAmountWhenRewardGivenFieldNumber = 6;
  private double lastAmountWhenRewardGiven_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double LastAmountWhenRewardGiven {
    get { return lastAmountWhenRewardGiven_; }
    set {
      lastAmountWhenRewardGiven_ = value;
    }
  }

  /// <summary>Field number for the "accepted" field.</summary>
  public const int AcceptedFieldNumber = 7;
  private bool accepted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Accepted {
    get { return accepted_; }
    set {
      accepted_ = value;
    }
  }

  /// <summary>Field number for the "new" field.</summary>
  public const int NewFieldNumber = 8;
  private bool new_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool New {
    get { return new_; }
    set {
      new_ = value;
    }
  }

  /// <summary>Field number for the "coop_grace_period_end_time" field.</summary>
  public const int CoopGracePeriodEndTimeFieldNumber = 9;
  private double coopGracePeriodEndTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double CoopGracePeriodEndTime {
    get { return coopGracePeriodEndTime_; }
    set {
      coopGracePeriodEndTime_ = value;
    }
  }

  /// <summary>Field number for the "coop_contribution_finalized" field.</summary>
  public const int CoopContributionFinalizedFieldNumber = 10;
  private bool coopContributionFinalized_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CoopContributionFinalized {
    get { return coopContributionFinalized_; }
    set {
      coopContributionFinalized_ = value;
    }
  }

  /// <summary>Field number for the "coop_last_uploaded_contribution" field.</summary>
  public const int CoopLastUploadedContributionFieldNumber = 11;
  private double coopLastUploadedContribution_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double CoopLastUploadedContribution {
    get { return coopLastUploadedContribution_; }
    set {
      coopLastUploadedContribution_ = value;
    }
  }

  /// <summary>Field number for the "boosts_used" field.</summary>
  public const int BoostsUsedFieldNumber = 12;
  private uint boostsUsed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint BoostsUsed {
    get { return boostsUsed_; }
    set {
      boostsUsed_ = value;
    }
  }

  /// <summary>Field number for the "coop_user_id" field.</summary>
  public const int CoopUserIdFieldNumber = 13;
  private string coopUserId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CoopUserId {
    get { return coopUserId_; }
    set {
      coopUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "num_goals_achieved" field.</summary>
  public const int NumGoalsAchievedFieldNumber = 14;
  private uint numGoalsAchieved_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint NumGoalsAchieved {
    get { return numGoalsAchieved_; }
    set {
      numGoalsAchieved_ = value;
    }
  }

  /// <summary>Field number for the "league" field.</summary>
  public const int LeagueFieldNumber = 15;
  private uint league_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint League {
    get { return league_; }
    set {
      league_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LocalContract);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LocalContract other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Contract, other.Contract)) return false;
    if (CoopId != other.CoopId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeAccepted, other.TimeAccepted)) return false;
    if (Cancelled != other.Cancelled) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CoopSharedEndTime, other.CoopSharedEndTime)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastAmountWhenRewardGiven, other.LastAmountWhenRewardGiven)) return false;
    if (Accepted != other.Accepted) return false;
    if (New != other.New) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CoopGracePeriodEndTime, other.CoopGracePeriodEndTime)) return false;
    if (CoopContributionFinalized != other.CoopContributionFinalized) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CoopLastUploadedContribution, other.CoopLastUploadedContribution)) return false;
    if (BoostsUsed != other.BoostsUsed) return false;
    if (CoopUserId != other.CoopUserId) return false;
    if (NumGoalsAchieved != other.NumGoalsAchieved) return false;
    if (League != other.League) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (contract_ != null) hash ^= Contract.GetHashCode();
    if (CoopId.Length != 0) hash ^= CoopId.GetHashCode();
    if (TimeAccepted != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeAccepted);
    if (Cancelled != false) hash ^= Cancelled.GetHashCode();
    if (CoopSharedEndTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CoopSharedEndTime);
    if (LastAmountWhenRewardGiven != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastAmountWhenRewardGiven);
    if (Accepted != false) hash ^= Accepted.GetHashCode();
    if (New != false) hash ^= New.GetHashCode();
    if (CoopGracePeriodEndTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CoopGracePeriodEndTime);
    if (CoopContributionFinalized != false) hash ^= CoopContributionFinalized.GetHashCode();
    if (CoopLastUploadedContribution != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CoopLastUploadedContribution);
    if (BoostsUsed != 0) hash ^= BoostsUsed.GetHashCode();
    if (CoopUserId.Length != 0) hash ^= CoopUserId.GetHashCode();
    if (NumGoalsAchieved != 0) hash ^= NumGoalsAchieved.GetHashCode();
    if (League != 0) hash ^= League.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (contract_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Contract);
    }
    if (CoopId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CoopId);
    }
    if (TimeAccepted != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(TimeAccepted);
    }
    if (Cancelled != false) {
      output.WriteRawTag(32);
      output.WriteBool(Cancelled);
    }
    if (CoopSharedEndTime != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(CoopSharedEndTime);
    }
    if (LastAmountWhenRewardGiven != 0D) {
      output.WriteRawTag(49);
      output.WriteDouble(LastAmountWhenRewardGiven);
    }
    if (Accepted != false) {
      output.WriteRawTag(56);
      output.WriteBool(Accepted);
    }
    if (New != false) {
      output.WriteRawTag(64);
      output.WriteBool(New);
    }
    if (CoopGracePeriodEndTime != 0D) {
      output.WriteRawTag(73);
      output.WriteDouble(CoopGracePeriodEndTime);
    }
    if (CoopContributionFinalized != false) {
      output.WriteRawTag(80);
      output.WriteBool(CoopContributionFinalized);
    }
    if (CoopLastUploadedContribution != 0D) {
      output.WriteRawTag(89);
      output.WriteDouble(CoopLastUploadedContribution);
    }
    if (BoostsUsed != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(BoostsUsed);
    }
    if (CoopUserId.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(CoopUserId);
    }
    if (NumGoalsAchieved != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(NumGoalsAchieved);
    }
    if (League != 0) {
      output.WriteRawTag(120);
      output.WriteUInt32(League);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (contract_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Contract);
    }
    if (CoopId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CoopId);
    }
    if (TimeAccepted != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(TimeAccepted);
    }
    if (Cancelled != false) {
      output.WriteRawTag(32);
      output.WriteBool(Cancelled);
    }
    if (CoopSharedEndTime != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(CoopSharedEndTime);
    }
    if (LastAmountWhenRewardGiven != 0D) {
      output.WriteRawTag(49);
      output.WriteDouble(LastAmountWhenRewardGiven);
    }
    if (Accepted != false) {
      output.WriteRawTag(56);
      output.WriteBool(Accepted);
    }
    if (New != false) {
      output.WriteRawTag(64);
      output.WriteBool(New);
    }
    if (CoopGracePeriodEndTime != 0D) {
      output.WriteRawTag(73);
      output.WriteDouble(CoopGracePeriodEndTime);
    }
    if (CoopContributionFinalized != false) {
      output.WriteRawTag(80);
      output.WriteBool(CoopContributionFinalized);
    }
    if (CoopLastUploadedContribution != 0D) {
      output.WriteRawTag(89);
      output.WriteDouble(CoopLastUploadedContribution);
    }
    if (BoostsUsed != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(BoostsUsed);
    }
    if (CoopUserId.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(CoopUserId);
    }
    if (NumGoalsAchieved != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(NumGoalsAchieved);
    }
    if (League != 0) {
      output.WriteRawTag(120);
      output.WriteUInt32(League);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (contract_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contract);
    }
    if (CoopId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CoopId);
    }
    if (TimeAccepted != 0D) {
      size += 1 + 8;
    }
    if (Cancelled != false) {
      size += 1 + 1;
    }
    if (CoopSharedEndTime != 0D) {
      size += 1 + 8;
    }
    if (LastAmountWhenRewardGiven != 0D) {
      size += 1 + 8;
    }
    if (Accepted != false) {
      size += 1 + 1;
    }
    if (New != false) {
      size += 1 + 1;
    }
    if (CoopGracePeriodEndTime != 0D) {
      size += 1 + 8;
    }
    if (CoopContributionFinalized != false) {
      size += 1 + 1;
    }
    if (CoopLastUploadedContribution != 0D) {
      size += 1 + 8;
    }
    if (BoostsUsed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BoostsUsed);
    }
    if (CoopUserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CoopUserId);
    }
    if (NumGoalsAchieved != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumGoalsAchieved);
    }
    if (League != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(League);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LocalContract other) {
    if (other == null) {
      return;
    }
    if (other.contract_ != null) {
      if (contract_ == null) {
        Contract = new global::Contract();
      }
      Contract.MergeFrom(other.Contract);
    }
    if (other.CoopId.Length != 0) {
      CoopId = other.CoopId;
    }
    if (other.TimeAccepted != 0D) {
      TimeAccepted = other.TimeAccepted;
    }
    if (other.Cancelled != false) {
      Cancelled = other.Cancelled;
    }
    if (other.CoopSharedEndTime != 0D) {
      CoopSharedEndTime = other.CoopSharedEndTime;
    }
    if (other.LastAmountWhenRewardGiven != 0D) {
      LastAmountWhenRewardGiven = other.LastAmountWhenRewardGiven;
    }
    if (other.Accepted != false) {
      Accepted = other.Accepted;
    }
    if (other.New != false) {
      New = other.New;
    }
    if (other.CoopGracePeriodEndTime != 0D) {
      CoopGracePeriodEndTime = other.CoopGracePeriodEndTime;
    }
    if (other.CoopContributionFinalized != false) {
      CoopContributionFinalized = other.CoopContributionFinalized;
    }
    if (other.CoopLastUploadedContribution != 0D) {
      CoopLastUploadedContribution = other.CoopLastUploadedContribution;
    }
    if (other.BoostsUsed != 0) {
      BoostsUsed = other.BoostsUsed;
    }
    if (other.CoopUserId.Length != 0) {
      CoopUserId = other.CoopUserId;
    }
    if (other.NumGoalsAchieved != 0) {
      NumGoalsAchieved = other.NumGoalsAchieved;
    }
    if (other.League != 0) {
      League = other.League;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (contract_ == null) {
            Contract = new global::Contract();
          }
          input.ReadMessage(Contract);
          break;
        }
        case 18: {
          CoopId = input.ReadString();
          break;
        }
        case 25: {
          TimeAccepted = input.ReadDouble();
          break;
        }
        case 32: {
          Cancelled = input.ReadBool();
          break;
        }
        case 41: {
          CoopSharedEndTime = input.ReadDouble();
          break;
        }
        case 49: {
          LastAmountWhenRewardGiven = input.ReadDouble();
          break;
        }
        case 56: {
          Accepted = input.ReadBool();
          break;
        }
        case 64: {
          New = input.ReadBool();
          break;
        }
        case 73: {
          CoopGracePeriodEndTime = input.ReadDouble();
          break;
        }
        case 80: {
          CoopContributionFinalized = input.ReadBool();
          break;
        }
        case 89: {
          CoopLastUploadedContribution = input.ReadDouble();
          break;
        }
        case 96: {
          BoostsUsed = input.ReadUInt32();
          break;
        }
        case 106: {
          CoopUserId = input.ReadString();
          break;
        }
        case 112: {
          NumGoalsAchieved = input.ReadUInt32();
          break;
        }
        case 120: {
          League = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (contract_ == null) {
            Contract = new global::Contract();
          }
          input.ReadMessage(Contract);
          break;
        }
        case 18: {
          CoopId = input.ReadString();
          break;
        }
        case 25: {
          TimeAccepted = input.ReadDouble();
          break;
        }
        case 32: {
          Cancelled = input.ReadBool();
          break;
        }
        case 41: {
          CoopSharedEndTime = input.ReadDouble();
          break;
        }
        case 49: {
          LastAmountWhenRewardGiven = input.ReadDouble();
          break;
        }
        case 56: {
          Accepted = input.ReadBool();
          break;
        }
        case 64: {
          New = input.ReadBool();
          break;
        }
        case 73: {
          CoopGracePeriodEndTime = input.ReadDouble();
          break;
        }
        case 80: {
          CoopContributionFinalized = input.ReadBool();
          break;
        }
        case 89: {
          CoopLastUploadedContribution = input.ReadDouble();
          break;
        }
        case 96: {
          BoostsUsed = input.ReadUInt32();
          break;
        }
        case 106: {
          CoopUserId = input.ReadString();
          break;
        }
        case 112: {
          NumGoalsAchieved = input.ReadUInt32();
          break;
        }
        case 120: {
          League = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MyContracts : pb::IMessage<MyContracts>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MyContracts> _parser = new pb::MessageParser<MyContracts>(() => new MyContracts());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MyContracts> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MyContracts() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MyContracts(MyContracts other) : this() {
    contracts_ = other.contracts_.Clone();
    archived_ = other.archived_.Clone();
    contractIdsSeen_ = other.contractIdsSeen_.Clone();
    coopStatuses_ = other.coopStatuses_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MyContracts Clone() {
    return new MyContracts(this);
  }

  /// <summary>Field number for the "contracts" field.</summary>
  public const int ContractsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::LocalContract> _repeated_contracts_codec
      = pb::FieldCodec.ForMessage(10, global::LocalContract.Parser);
  private readonly pbc::RepeatedField<global::LocalContract> contracts_ = new pbc::RepeatedField<global::LocalContract>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::LocalContract> Contracts {
    get { return contracts_; }
  }

  /// <summary>Field number for the "archived" field.</summary>
  public const int ArchivedFieldNumber = 2;
  private static readonly pb::FieldCodec<global::LocalContract> _repeated_archived_codec
      = pb::FieldCodec.ForMessage(18, global::LocalContract.Parser);
  private readonly pbc::RepeatedField<global::LocalContract> archived_ = new pbc::RepeatedField<global::LocalContract>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::LocalContract> Archived {
    get { return archived_; }
  }

  /// <summary>Field number for the "contract_ids_seen" field.</summary>
  public const int ContractIdsSeenFieldNumber = 3;
  private static readonly pb::FieldCodec<string> _repeated_contractIdsSeen_codec
      = pb::FieldCodec.ForString(26);
  private readonly pbc::RepeatedField<string> contractIdsSeen_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> ContractIdsSeen {
    get { return contractIdsSeen_; }
  }

  /// <summary>Field number for the "coop_statuses" field.</summary>
  public const int CoopStatusesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CoopStatus> _repeated_coopStatuses_codec
      = pb::FieldCodec.ForMessage(34, global::CoopStatus.Parser);
  private readonly pbc::RepeatedField<global::CoopStatus> coopStatuses_ = new pbc::RepeatedField<global::CoopStatus>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CoopStatus> CoopStatuses {
    get { return coopStatuses_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MyContracts);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MyContracts other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!contracts_.Equals(other.contracts_)) return false;
    if(!archived_.Equals(other.archived_)) return false;
    if(!contractIdsSeen_.Equals(other.contractIdsSeen_)) return false;
    if(!coopStatuses_.Equals(other.coopStatuses_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= contracts_.GetHashCode();
    hash ^= archived_.GetHashCode();
    hash ^= contractIdsSeen_.GetHashCode();
    hash ^= coopStatuses_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    contracts_.WriteTo(output, _repeated_contracts_codec);
    archived_.WriteTo(output, _repeated_archived_codec);
    contractIdsSeen_.WriteTo(output, _repeated_contractIdsSeen_codec);
    coopStatuses_.WriteTo(output, _repeated_coopStatuses_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    contracts_.WriteTo(ref output, _repeated_contracts_codec);
    archived_.WriteTo(ref output, _repeated_archived_codec);
    contractIdsSeen_.WriteTo(ref output, _repeated_contractIdsSeen_codec);
    coopStatuses_.WriteTo(ref output, _repeated_coopStatuses_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += contracts_.CalculateSize(_repeated_contracts_codec);
    size += archived_.CalculateSize(_repeated_archived_codec);
    size += contractIdsSeen_.CalculateSize(_repeated_contractIdsSeen_codec);
    size += coopStatuses_.CalculateSize(_repeated_coopStatuses_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MyContracts other) {
    if (other == null) {
      return;
    }
    contracts_.Add(other.contracts_);
    archived_.Add(other.archived_);
    contractIdsSeen_.Add(other.contractIdsSeen_);
    coopStatuses_.Add(other.coopStatuses_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          contracts_.AddEntriesFrom(input, _repeated_contracts_codec);
          break;
        }
        case 18: {
          archived_.AddEntriesFrom(input, _repeated_archived_codec);
          break;
        }
        case 26: {
          contractIdsSeen_.AddEntriesFrom(input, _repeated_contractIdsSeen_codec);
          break;
        }
        case 34: {
          coopStatuses_.AddEntriesFrom(input, _repeated_coopStatuses_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          contracts_.AddEntriesFrom(ref input, _repeated_contracts_codec);
          break;
        }
        case 18: {
          archived_.AddEntriesFrom(ref input, _repeated_archived_codec);
          break;
        }
        case 26: {
          contractIdsSeen_.AddEntriesFrom(ref input, _repeated_contractIdsSeen_codec);
          break;
        }
        case 34: {
          coopStatuses_.AddEntriesFrom(ref input, _repeated_coopStatuses_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CoopBuffState : pb::IMessage<CoopBuffState>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CoopBuffState> _parser = new pb::MessageParser<CoopBuffState>(() => new CoopBuffState());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CoopBuffState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopBuffState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopBuffState(CoopBuffState other) : this() {
    eggLayingRate_ = other.eggLayingRate_;
    earnings_ = other.earnings_;
    serverTimestamp_ = other.serverTimestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopBuffState Clone() {
    return new CoopBuffState(this);
  }

  /// <summary>Field number for the "egg_laying_rate" field.</summary>
  public const int EggLayingRateFieldNumber = 1;
  private double eggLayingRate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double EggLayingRate {
    get { return eggLayingRate_; }
    set {
      eggLayingRate_ = value;
    }
  }

  /// <summary>Field number for the "earnings" field.</summary>
  public const int EarningsFieldNumber = 2;
  private double earnings_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Earnings {
    get { return earnings_; }
    set {
      earnings_ = value;
    }
  }

  /// <summary>Field number for the "server_timestamp" field.</summary>
  public const int ServerTimestampFieldNumber = 3;
  private double serverTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double ServerTimestamp {
    get { return serverTimestamp_; }
    set {
      serverTimestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CoopBuffState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CoopBuffState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EggLayingRate, other.EggLayingRate)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Earnings, other.Earnings)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ServerTimestamp, other.ServerTimestamp)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EggLayingRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EggLayingRate);
    if (Earnings != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Earnings);
    if (ServerTimestamp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ServerTimestamp);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (EggLayingRate != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(EggLayingRate);
    }
    if (Earnings != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Earnings);
    }
    if (ServerTimestamp != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(ServerTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (EggLayingRate != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(EggLayingRate);
    }
    if (Earnings != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Earnings);
    }
    if (ServerTimestamp != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(ServerTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EggLayingRate != 0D) {
      size += 1 + 8;
    }
    if (Earnings != 0D) {
      size += 1 + 8;
    }
    if (ServerTimestamp != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CoopBuffState other) {
    if (other == null) {
      return;
    }
    if (other.EggLayingRate != 0D) {
      EggLayingRate = other.EggLayingRate;
    }
    if (other.Earnings != 0D) {
      Earnings = other.Earnings;
    }
    if (other.ServerTimestamp != 0D) {
      ServerTimestamp = other.ServerTimestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          EggLayingRate = input.ReadDouble();
          break;
        }
        case 17: {
          Earnings = input.ReadDouble();
          break;
        }
        case 25: {
          ServerTimestamp = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          EggLayingRate = input.ReadDouble();
          break;
        }
        case 17: {
          Earnings = input.ReadDouble();
          break;
        }
        case 25: {
          ServerTimestamp = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CoopBuffHistory : pb::IMessage<CoopBuffHistory>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CoopBuffHistory> _parser = new pb::MessageParser<CoopBuffHistory>(() => new CoopBuffHistory());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CoopBuffHistory> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopBuffHistory() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopBuffHistory(CoopBuffHistory other) : this() {
    history_ = other.history_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoopBuffHistory Clone() {
    return new CoopBuffHistory(this);
  }

  /// <summary>Field number for the "history" field.</summary>
  public const int HistoryFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CoopBuffState> _repeated_history_codec
      = pb::FieldCodec.ForMessage(10, global::CoopBuffState.Parser);
  private readonly pbc::RepeatedField<global::CoopBuffState> history_ = new pbc::RepeatedField<global::CoopBuffState>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CoopBuffState> History {
    get { return history_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CoopBuffHistory);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CoopBuffHistory other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!history_.Equals(other.history_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= history_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    history_.WriteTo(output, _repeated_history_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    history_.WriteTo(ref output, _repeated_history_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += history_.CalculateSize(_repeated_history_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CoopBuffHistory other) {
    if (other == null) {
      return;
    }
    history_.Add(other.history_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          history_.AddEntriesFrom(input, _repeated_history_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          history_.AddEntriesFrom(ref input, _repeated_history_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ServerGift : pb::IMessage<ServerGift>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ServerGift> _parser = new pb::MessageParser<ServerGift>(() => new ServerGift());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerGift> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerGift() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerGift(ServerGift other) : this() {
    userId_ = other.userId_;
    rewardType_ = other.rewardType_;
    rewardSubType_ = other.rewardSubType_;
    rewardAmount_ = other.rewardAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerGift Clone() {
    return new ServerGift(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "reward_type" field.</summary>
  public const int RewardTypeFieldNumber = 3;
  private global::RewardType rewardType_ = global::RewardType.UndefinedRewardType;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RewardType RewardType {
    get { return rewardType_; }
    set {
      rewardType_ = value;
    }
  }

  /// <summary>Field number for the "reward_sub_type" field.</summary>
  public const int RewardSubTypeFieldNumber = 4;
  private string rewardSubType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RewardSubType {
    get { return rewardSubType_; }
    set {
      rewardSubType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "reward_amount" field.</summary>
  public const int RewardAmountFieldNumber = 5;
  private double rewardAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double RewardAmount {
    get { return rewardAmount_; }
    set {
      rewardAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerGift);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerGift other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (RewardType != other.RewardType) return false;
    if (RewardSubType != other.RewardSubType) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RewardAmount, other.RewardAmount)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (RewardType != global::RewardType.UndefinedRewardType) hash ^= RewardType.GetHashCode();
    if (RewardSubType.Length != 0) hash ^= RewardSubType.GetHashCode();
    if (RewardAmount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RewardAmount);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (RewardType != global::RewardType.UndefinedRewardType) {
      output.WriteRawTag(24);
      output.WriteEnum((int) RewardType);
    }
    if (RewardSubType.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(RewardSubType);
    }
    if (RewardAmount != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(RewardAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (RewardType != global::RewardType.UndefinedRewardType) {
      output.WriteRawTag(24);
      output.WriteEnum((int) RewardType);
    }
    if (RewardSubType.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(RewardSubType);
    }
    if (RewardAmount != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(RewardAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (RewardType != global::RewardType.UndefinedRewardType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RewardType);
    }
    if (RewardSubType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardSubType);
    }
    if (RewardAmount != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerGift other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.RewardType != global::RewardType.UndefinedRewardType) {
      RewardType = other.RewardType;
    }
    if (other.RewardSubType.Length != 0) {
      RewardSubType = other.RewardSubType;
    }
    if (other.RewardAmount != 0D) {
      RewardAmount = other.RewardAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 24: {
          RewardType = (global::RewardType) input.ReadEnum();
          break;
        }
        case 34: {
          RewardSubType = input.ReadString();
          break;
        }
        case 41: {
          RewardAmount = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 24: {
          RewardType = (global::RewardType) input.ReadEnum();
          break;
        }
        case 34: {
          RewardSubType = input.ReadString();
          break;
        }
        case 41: {
          RewardAmount = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PeriodicalsRequest : pb::IMessage<PeriodicalsRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PeriodicalsRequest> _parser = new pb::MessageParser<PeriodicalsRequest>(() => new PeriodicalsRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PeriodicalsRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeriodicalsRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeriodicalsRequest(PeriodicalsRequest other) : this() {
    userId_ = other.userId_;
    piggyFull_ = other.piggyFull_;
    piggyFoundFull_ = other.piggyFoundFull_;
    secondsFullRealtime_ = other.secondsFullRealtime_;
    secondsFullGametime_ = other.secondsFullGametime_;
    lostIncrements_ = other.lostIncrements_;
    soulEggs_ = other.soulEggs_;
    clientVersion_ = other.clientVersion_;
    debug_ = other.debug_;
    requestInfo_ = other.requestInfo_ != null ? other.requestInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeriodicalsRequest Clone() {
    return new PeriodicalsRequest(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "piggy_full" field.</summary>
  public const int PiggyFullFieldNumber = 2;
  private bool piggyFull_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool PiggyFull {
    get { return piggyFull_; }
    set {
      piggyFull_ = value;
    }
  }

  /// <summary>Field number for the "piggy_found_full" field.</summary>
  public const int PiggyFoundFullFieldNumber = 3;
  private bool piggyFoundFull_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool PiggyFoundFull {
    get { return piggyFoundFull_; }
    set {
      piggyFoundFull_ = value;
    }
  }

  /// <summary>Field number for the "seconds_full_realtime" field.</summary>
  public const int SecondsFullRealtimeFieldNumber = 4;
  private double secondsFullRealtime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double SecondsFullRealtime {
    get { return secondsFullRealtime_; }
    set {
      secondsFullRealtime_ = value;
    }
  }

  /// <summary>Field number for the "seconds_full_gametime" field.</summary>
  public const int SecondsFullGametimeFieldNumber = 5;
  private double secondsFullGametime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double SecondsFullGametime {
    get { return secondsFullGametime_; }
    set {
      secondsFullGametime_ = value;
    }
  }

  /// <summary>Field number for the "lost_increments" field.</summary>
  public const int LostIncrementsFieldNumber = 7;
  private uint lostIncrements_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint LostIncrements {
    get { return lostIncrements_; }
    set {
      lostIncrements_ = value;
    }
  }

  /// <summary>Field number for the "soul_eggs" field.</summary>
  public const int SoulEggsFieldNumber = 8;
  private double soulEggs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double SoulEggs {
    get { return soulEggs_; }
    set {
      soulEggs_ = value;
    }
  }

  /// <summary>Field number for the "client_version" field.</summary>
  public const int ClientVersionFieldNumber = 10;
  private uint clientVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClientVersion {
    get { return clientVersion_; }
    set {
      clientVersion_ = value;
    }
  }

  /// <summary>Field number for the "debug" field.</summary>
  public const int DebugFieldNumber = 11;
  private bool debug_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Debug {
    get { return debug_; }
    set {
      debug_ = value;
    }
  }

  /// <summary>Field number for the "request_info" field.</summary>
  public const int RequestInfoFieldNumber = 12;
  private global::BasicRequestInfo requestInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BasicRequestInfo RequestInfo {
    get { return requestInfo_; }
    set {
      requestInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PeriodicalsRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PeriodicalsRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (PiggyFull != other.PiggyFull) return false;
    if (PiggyFoundFull != other.PiggyFoundFull) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SecondsFullRealtime, other.SecondsFullRealtime)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SecondsFullGametime, other.SecondsFullGametime)) return false;
    if (LostIncrements != other.LostIncrements) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SoulEggs, other.SoulEggs)) return false;
    if (ClientVersion != other.ClientVersion) return false;
    if (Debug != other.Debug) return false;
    if (!object.Equals(RequestInfo, other.RequestInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (PiggyFull != false) hash ^= PiggyFull.GetHashCode();
    if (PiggyFoundFull != false) hash ^= PiggyFoundFull.GetHashCode();
    if (SecondsFullRealtime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SecondsFullRealtime);
    if (SecondsFullGametime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SecondsFullGametime);
    if (LostIncrements != 0) hash ^= LostIncrements.GetHashCode();
    if (SoulEggs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SoulEggs);
    if (ClientVersion != 0) hash ^= ClientVersion.GetHashCode();
    if (Debug != false) hash ^= Debug.GetHashCode();
    if (requestInfo_ != null) hash ^= RequestInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (PiggyFull != false) {
      output.WriteRawTag(16);
      output.WriteBool(PiggyFull);
    }
    if (PiggyFoundFull != false) {
      output.WriteRawTag(24);
      output.WriteBool(PiggyFoundFull);
    }
    if (SecondsFullRealtime != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(SecondsFullRealtime);
    }
    if (SecondsFullGametime != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(SecondsFullGametime);
    }
    if (LostIncrements != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(LostIncrements);
    }
    if (SoulEggs != 0D) {
      output.WriteRawTag(65);
      output.WriteDouble(SoulEggs);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(ClientVersion);
    }
    if (Debug != false) {
      output.WriteRawTag(88);
      output.WriteBool(Debug);
    }
    if (requestInfo_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(RequestInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (PiggyFull != false) {
      output.WriteRawTag(16);
      output.WriteBool(PiggyFull);
    }
    if (PiggyFoundFull != false) {
      output.WriteRawTag(24);
      output.WriteBool(PiggyFoundFull);
    }
    if (SecondsFullRealtime != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(SecondsFullRealtime);
    }
    if (SecondsFullGametime != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(SecondsFullGametime);
    }
    if (LostIncrements != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(LostIncrements);
    }
    if (SoulEggs != 0D) {
      output.WriteRawTag(65);
      output.WriteDouble(SoulEggs);
    }
    if (ClientVersion != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(ClientVersion);
    }
    if (Debug != false) {
      output.WriteRawTag(88);
      output.WriteBool(Debug);
    }
    if (requestInfo_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(RequestInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (PiggyFull != false) {
      size += 1 + 1;
    }
    if (PiggyFoundFull != false) {
      size += 1 + 1;
    }
    if (SecondsFullRealtime != 0D) {
      size += 1 + 8;
    }
    if (SecondsFullGametime != 0D) {
      size += 1 + 8;
    }
    if (LostIncrements != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LostIncrements);
    }
    if (SoulEggs != 0D) {
      size += 1 + 8;
    }
    if (ClientVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientVersion);
    }
    if (Debug != false) {
      size += 1 + 1;
    }
    if (requestInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PeriodicalsRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.PiggyFull != false) {
      PiggyFull = other.PiggyFull;
    }
    if (other.PiggyFoundFull != false) {
      PiggyFoundFull = other.PiggyFoundFull;
    }
    if (other.SecondsFullRealtime != 0D) {
      SecondsFullRealtime = other.SecondsFullRealtime;
    }
    if (other.SecondsFullGametime != 0D) {
      SecondsFullGametime = other.SecondsFullGametime;
    }
    if (other.LostIncrements != 0) {
      LostIncrements = other.LostIncrements;
    }
    if (other.SoulEggs != 0D) {
      SoulEggs = other.SoulEggs;
    }
    if (other.ClientVersion != 0) {
      ClientVersion = other.ClientVersion;
    }
    if (other.Debug != false) {
      Debug = other.Debug;
    }
    if (other.requestInfo_ != null) {
      if (requestInfo_ == null) {
        RequestInfo = new global::BasicRequestInfo();
      }
      RequestInfo.MergeFrom(other.RequestInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          PiggyFull = input.ReadBool();
          break;
        }
        case 24: {
          PiggyFoundFull = input.ReadBool();
          break;
        }
        case 33: {
          SecondsFullRealtime = input.ReadDouble();
          break;
        }
        case 41: {
          SecondsFullGametime = input.ReadDouble();
          break;
        }
        case 56: {
          LostIncrements = input.ReadUInt32();
          break;
        }
        case 65: {
          SoulEggs = input.ReadDouble();
          break;
        }
        case 80: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 88: {
          Debug = input.ReadBool();
          break;
        }
        case 98: {
          if (requestInfo_ == null) {
            RequestInfo = new global::BasicRequestInfo();
          }
          input.ReadMessage(RequestInfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          PiggyFull = input.ReadBool();
          break;
        }
        case 24: {
          PiggyFoundFull = input.ReadBool();
          break;
        }
        case 33: {
          SecondsFullRealtime = input.ReadDouble();
          break;
        }
        case 41: {
          SecondsFullGametime = input.ReadDouble();
          break;
        }
        case 56: {
          LostIncrements = input.ReadUInt32();
          break;
        }
        case 65: {
          SoulEggs = input.ReadDouble();
          break;
        }
        case 80: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 88: {
          Debug = input.ReadBool();
          break;
        }
        case 98: {
          if (requestInfo_ == null) {
            RequestInfo = new global::BasicRequestInfo();
          }
          input.ReadMessage(RequestInfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PeriodicalsResponse : pb::IMessage<PeriodicalsResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PeriodicalsResponse> _parser = new pb::MessageParser<PeriodicalsResponse>(() => new PeriodicalsResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PeriodicalsResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeriodicalsResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeriodicalsResponse(PeriodicalsResponse other) : this() {
    periodicals_ = other.periodicals_ != null ? other.periodicals_.Clone() : null;
    checksum_ = other.checksum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeriodicalsResponse Clone() {
    return new PeriodicalsResponse(this);
  }

  /// <summary>Field number for the "periodicals" field.</summary>
  public const int PeriodicalsFieldNumber = 1;
  private global::Periodicals periodicals_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Periodicals Periodicals {
    get { return periodicals_; }
    set {
      periodicals_ = value;
    }
  }

  /// <summary>Field number for the "checksum" field.</summary>
  public const int ChecksumFieldNumber = 2;
  private string checksum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Checksum {
    get { return checksum_; }
    set {
      checksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PeriodicalsResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PeriodicalsResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Periodicals, other.Periodicals)) return false;
    if (Checksum != other.Checksum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (periodicals_ != null) hash ^= Periodicals.GetHashCode();
    if (Checksum.Length != 0) hash ^= Checksum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (periodicals_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Periodicals);
    }
    if (Checksum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Checksum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (periodicals_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Periodicals);
    }
    if (Checksum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Checksum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (periodicals_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Periodicals);
    }
    if (Checksum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Checksum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PeriodicalsResponse other) {
    if (other == null) {
      return;
    }
    if (other.periodicals_ != null) {
      if (periodicals_ == null) {
        Periodicals = new global::Periodicals();
      }
      Periodicals.MergeFrom(other.Periodicals);
    }
    if (other.Checksum.Length != 0) {
      Checksum = other.Checksum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (periodicals_ == null) {
            Periodicals = new global::Periodicals();
          }
          input.ReadMessage(Periodicals);
          break;
        }
        case 18: {
          Checksum = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (periodicals_ == null) {
            Periodicals = new global::Periodicals();
          }
          input.ReadMessage(Periodicals);
          break;
        }
        case 18: {
          Checksum = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Periodicals : pb::IMessage<Periodicals>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Periodicals> _parser = new pb::MessageParser<Periodicals>(() => new Periodicals());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Periodicals> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Periodicals() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Periodicals(Periodicals other) : this() {
    sales_ = other.sales_;
    events_ = other.events_;
    contracts_ = other.contracts_ != null ? other.contracts_.Clone() : null;
    gifts_ = other.gifts_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Periodicals Clone() {
    return new Periodicals(this);
  }

  /// <summary>Field number for the "sales" field.</summary>
  public const int SalesFieldNumber = 1;
  private uint sales_;
  /// <summary>
  /// SalesInfo
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Sales {
    get { return sales_; }
    set {
      sales_ = value;
    }
  }

  /// <summary>Field number for the "events" field.</summary>
  public const int EventsFieldNumber = 2;
  private uint events_;
  /// <summary>
  /// CurrentEventsInfo
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Events {
    get { return events_; }
    set {
      events_ = value;
    }
  }

  /// <summary>Field number for the "contracts" field.</summary>
  public const int ContractsFieldNumber = 3;
  private global::ContractsResponse contracts_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ContractsResponse Contracts {
    get { return contracts_; }
    set {
      contracts_ = value;
    }
  }

  /// <summary>Field number for the "gifts" field.</summary>
  public const int GiftsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::ServerGift> _repeated_gifts_codec
      = pb::FieldCodec.ForMessage(34, global::ServerGift.Parser);
  private readonly pbc::RepeatedField<global::ServerGift> gifts_ = new pbc::RepeatedField<global::ServerGift>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ServerGift> Gifts {
    get { return gifts_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Periodicals);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Periodicals other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sales != other.Sales) return false;
    if (Events != other.Events) return false;
    if (!object.Equals(Contracts, other.Contracts)) return false;
    if(!gifts_.Equals(other.gifts_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Sales != 0) hash ^= Sales.GetHashCode();
    if (Events != 0) hash ^= Events.GetHashCode();
    if (contracts_ != null) hash ^= Contracts.GetHashCode();
    hash ^= gifts_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Sales != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Sales);
    }
    if (Events != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Events);
    }
    if (contracts_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Contracts);
    }
    gifts_.WriteTo(output, _repeated_gifts_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Sales != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Sales);
    }
    if (Events != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Events);
    }
    if (contracts_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Contracts);
    }
    gifts_.WriteTo(ref output, _repeated_gifts_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Sales != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sales);
    }
    if (Events != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Events);
    }
    if (contracts_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contracts);
    }
    size += gifts_.CalculateSize(_repeated_gifts_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Periodicals other) {
    if (other == null) {
      return;
    }
    if (other.Sales != 0) {
      Sales = other.Sales;
    }
    if (other.Events != 0) {
      Events = other.Events;
    }
    if (other.contracts_ != null) {
      if (contracts_ == null) {
        Contracts = new global::ContractsResponse();
      }
      Contracts.MergeFrom(other.Contracts);
    }
    gifts_.Add(other.gifts_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Sales = input.ReadUInt32();
          break;
        }
        case 16: {
          Events = input.ReadUInt32();
          break;
        }
        case 26: {
          if (contracts_ == null) {
            Contracts = new global::ContractsResponse();
          }
          input.ReadMessage(Contracts);
          break;
        }
        case 34: {
          gifts_.AddEntriesFrom(input, _repeated_gifts_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Sales = input.ReadUInt32();
          break;
        }
        case 16: {
          Events = input.ReadUInt32();
          break;
        }
        case 26: {
          if (contracts_ == null) {
            Contracts = new global::ContractsResponse();
          }
          input.ReadMessage(Contracts);
          break;
        }
        case 34: {
          gifts_.AddEntriesFrom(ref input, _repeated_gifts_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Mission : pb::IMessage<Mission>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Mission> _parser = new pb::MessageParser<Mission>(() => new Mission());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Mission> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Mission() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Mission(Mission other) : this() {
    ship_ = other.ship_;
    status_ = other.status_;
    durationType_ = other.durationType_;
    fuels_ = other.fuels_.Clone();
    durationSeconds_ = other.durationSeconds_;
    secondsRemaining_ = other.secondsRemaining_;
    identifier_ = other.identifier_;
    startTimeDerived_ = other.startTimeDerived_;
    capacity_ = other.capacity_;
    missionLog_ = other.missionLog_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Mission Clone() {
    return new Mission(this);
  }

  /// <summary>Field number for the "ship" field.</summary>
  public const int ShipFieldNumber = 1;
  private global::Mission.Types.Spaceship ship_ = global::Mission.Types.Spaceship.ChickenOne;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Mission.Types.Spaceship Ship {
    get { return ship_; }
    set {
      ship_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 2;
  private global::Mission.Types.Status status_ = global::Mission.Types.Status.Fueling;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Mission.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "duration_type" field.</summary>
  public const int DurationTypeFieldNumber = 3;
  private global::Mission.Types.DurationType durationType_ = global::Mission.Types.DurationType.Short;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Mission.Types.DurationType DurationType {
    get { return durationType_; }
    set {
      durationType_ = value;
    }
  }

  /// <summary>Field number for the "fuels" field.</summary>
  public const int FuelsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::Mission.Types.Fuel> _repeated_fuels_codec
      = pb::FieldCodec.ForMessage(34, global::Mission.Types.Fuel.Parser);
  private readonly pbc::RepeatedField<global::Mission.Types.Fuel> fuels_ = new pbc::RepeatedField<global::Mission.Types.Fuel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Mission.Types.Fuel> Fuels {
    get { return fuels_; }
  }

  /// <summary>Field number for the "duration_seconds" field.</summary>
  public const int DurationSecondsFieldNumber = 5;
  private double durationSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double DurationSeconds {
    get { return durationSeconds_; }
    set {
      durationSeconds_ = value;
    }
  }

  /// <summary>Field number for the "seconds_remaining" field.</summary>
  public const int SecondsRemainingFieldNumber = 6;
  private double secondsRemaining_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double SecondsRemaining {
    get { return secondsRemaining_; }
    set {
      secondsRemaining_ = value;
    }
  }

  /// <summary>Field number for the "identifier" field.</summary>
  public const int IdentifierFieldNumber = 7;
  private string identifier_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Identifier {
    get { return identifier_; }
    set {
      identifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "start_time_derived" field.</summary>
  public const int StartTimeDerivedFieldNumber = 8;
  private double startTimeDerived_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double StartTimeDerived {
    get { return startTimeDerived_; }
    set {
      startTimeDerived_ = value;
    }
  }

  /// <summary>Field number for the "capacity" field.</summary>
  public const int CapacityFieldNumber = 9;
  private uint capacity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Capacity {
    get { return capacity_; }
    set {
      capacity_ = value;
    }
  }

  /// <summary>Field number for the "mission_log" field.</summary>
  public const int MissionLogFieldNumber = 10;
  private string missionLog_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MissionLog {
    get { return missionLog_; }
    set {
      missionLog_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Mission);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Mission other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ship != other.Ship) return false;
    if (Status != other.Status) return false;
    if (DurationType != other.DurationType) return false;
    if(!fuels_.Equals(other.fuels_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DurationSeconds, other.DurationSeconds)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SecondsRemaining, other.SecondsRemaining)) return false;
    if (Identifier != other.Identifier) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StartTimeDerived, other.StartTimeDerived)) return false;
    if (Capacity != other.Capacity) return false;
    if (MissionLog != other.MissionLog) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Ship != global::Mission.Types.Spaceship.ChickenOne) hash ^= Ship.GetHashCode();
    if (Status != global::Mission.Types.Status.Fueling) hash ^= Status.GetHashCode();
    if (DurationType != global::Mission.Types.DurationType.Short) hash ^= DurationType.GetHashCode();
    hash ^= fuels_.GetHashCode();
    if (DurationSeconds != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DurationSeconds);
    if (SecondsRemaining != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SecondsRemaining);
    if (Identifier.Length != 0) hash ^= Identifier.GetHashCode();
    if (StartTimeDerived != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StartTimeDerived);
    if (Capacity != 0) hash ^= Capacity.GetHashCode();
    if (MissionLog.Length != 0) hash ^= MissionLog.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Ship != global::Mission.Types.Spaceship.ChickenOne) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Ship);
    }
    if (Status != global::Mission.Types.Status.Fueling) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Status);
    }
    if (DurationType != global::Mission.Types.DurationType.Short) {
      output.WriteRawTag(24);
      output.WriteEnum((int) DurationType);
    }
    fuels_.WriteTo(output, _repeated_fuels_codec);
    if (DurationSeconds != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(DurationSeconds);
    }
    if (SecondsRemaining != 0D) {
      output.WriteRawTag(49);
      output.WriteDouble(SecondsRemaining);
    }
    if (Identifier.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Identifier);
    }
    if (StartTimeDerived != 0D) {
      output.WriteRawTag(65);
      output.WriteDouble(StartTimeDerived);
    }
    if (Capacity != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(Capacity);
    }
    if (MissionLog.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(MissionLog);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Ship != global::Mission.Types.Spaceship.ChickenOne) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Ship);
    }
    if (Status != global::Mission.Types.Status.Fueling) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Status);
    }
    if (DurationType != global::Mission.Types.DurationType.Short) {
      output.WriteRawTag(24);
      output.WriteEnum((int) DurationType);
    }
    fuels_.WriteTo(ref output, _repeated_fuels_codec);
    if (DurationSeconds != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(DurationSeconds);
    }
    if (SecondsRemaining != 0D) {
      output.WriteRawTag(49);
      output.WriteDouble(SecondsRemaining);
    }
    if (Identifier.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Identifier);
    }
    if (StartTimeDerived != 0D) {
      output.WriteRawTag(65);
      output.WriteDouble(StartTimeDerived);
    }
    if (Capacity != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(Capacity);
    }
    if (MissionLog.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(MissionLog);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Ship != global::Mission.Types.Spaceship.ChickenOne) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ship);
    }
    if (Status != global::Mission.Types.Status.Fueling) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (DurationType != global::Mission.Types.DurationType.Short) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DurationType);
    }
    size += fuels_.CalculateSize(_repeated_fuels_codec);
    if (DurationSeconds != 0D) {
      size += 1 + 8;
    }
    if (SecondsRemaining != 0D) {
      size += 1 + 8;
    }
    if (Identifier.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Identifier);
    }
    if (StartTimeDerived != 0D) {
      size += 1 + 8;
    }
    if (Capacity != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Capacity);
    }
    if (MissionLog.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MissionLog);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Mission other) {
    if (other == null) {
      return;
    }
    if (other.Ship != global::Mission.Types.Spaceship.ChickenOne) {
      Ship = other.Ship;
    }
    if (other.Status != global::Mission.Types.Status.Fueling) {
      Status = other.Status;
    }
    if (other.DurationType != global::Mission.Types.DurationType.Short) {
      DurationType = other.DurationType;
    }
    fuels_.Add(other.fuels_);
    if (other.DurationSeconds != 0D) {
      DurationSeconds = other.DurationSeconds;
    }
    if (other.SecondsRemaining != 0D) {
      SecondsRemaining = other.SecondsRemaining;
    }
    if (other.Identifier.Length != 0) {
      Identifier = other.Identifier;
    }
    if (other.StartTimeDerived != 0D) {
      StartTimeDerived = other.StartTimeDerived;
    }
    if (other.Capacity != 0) {
      Capacity = other.Capacity;
    }
    if (other.MissionLog.Length != 0) {
      MissionLog = other.MissionLog;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ship = (global::Mission.Types.Spaceship) input.ReadEnum();
          break;
        }
        case 16: {
          Status = (global::Mission.Types.Status) input.ReadEnum();
          break;
        }
        case 24: {
          DurationType = (global::Mission.Types.DurationType) input.ReadEnum();
          break;
        }
        case 34: {
          fuels_.AddEntriesFrom(input, _repeated_fuels_codec);
          break;
        }
        case 41: {
          DurationSeconds = input.ReadDouble();
          break;
        }
        case 49: {
          SecondsRemaining = input.ReadDouble();
          break;
        }
        case 58: {
          Identifier = input.ReadString();
          break;
        }
        case 65: {
          StartTimeDerived = input.ReadDouble();
          break;
        }
        case 72: {
          Capacity = input.ReadUInt32();
          break;
        }
        case 82: {
          MissionLog = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ship = (global::Mission.Types.Spaceship) input.ReadEnum();
          break;
        }
        case 16: {
          Status = (global::Mission.Types.Status) input.ReadEnum();
          break;
        }
        case 24: {
          DurationType = (global::Mission.Types.DurationType) input.ReadEnum();
          break;
        }
        case 34: {
          fuels_.AddEntriesFrom(ref input, _repeated_fuels_codec);
          break;
        }
        case 41: {
          DurationSeconds = input.ReadDouble();
          break;
        }
        case 49: {
          SecondsRemaining = input.ReadDouble();
          break;
        }
        case 58: {
          Identifier = input.ReadString();
          break;
        }
        case 65: {
          StartTimeDerived = input.ReadDouble();
          break;
        }
        case 72: {
          Capacity = input.ReadUInt32();
          break;
        }
        case 82: {
          MissionLog = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the Mission message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Spaceship {
      [pbr::OriginalName("CHICKEN_ONE")] ChickenOne = 0,
      [pbr::OriginalName("CHICKEN_NINE")] ChickenNine = 1,
      [pbr::OriginalName("CHICKEN_HEAVY")] ChickenHeavy = 2,
      [pbr::OriginalName("BCR")] Bcr = 3,
      [pbr::OriginalName("MILLENNIUM_CHICKEN")] MillenniumChicken = 4,
      [pbr::OriginalName("CORELLIHEN_CORVETTE")] CorellihenCorvette = 5,
      [pbr::OriginalName("GALEGGTICA")] Galeggtica = 6,
      [pbr::OriginalName("CHICKFIANT")] Chickfiant = 7,
      [pbr::OriginalName("VOYEGGER")] Voyegger = 8,
      [pbr::OriginalName("HENERPRISE")] Henerprise = 9,
    }

    public enum DurationType {
      [pbr::OriginalName("SHORT")] Short = 0,
      [pbr::OriginalName("LONG")] Long = 1,
      [pbr::OriginalName("EPIC")] Epic = 2,
      [pbr::OriginalName("TUTORIAL")] Tutorial = 3,
    }

    public enum Status {
      [pbr::OriginalName("FUELING")] Fueling = 0,
      [pbr::OriginalName("PREPARE_TO_LAUNCH")] PrepareToLaunch = 5,
      [pbr::OriginalName("EXPLORING")] Exploring = 10,
      [pbr::OriginalName("RETURNED")] Returned = 15,
      [pbr::OriginalName("ANALYZING")] Analyzing = 16,
      [pbr::OriginalName("COMPLETE")] Complete = 20,
      [pbr::OriginalName("ARCHIVED")] Archived = 25,
    }

    public sealed partial class Fuel : pb::IMessage<Fuel>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Fuel> _parser = new pb::MessageParser<Fuel>(() => new Fuel());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Fuel> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Mission.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Fuel() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Fuel(Fuel other) : this() {
        egg_ = other.egg_;
        amount_ = other.amount_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Fuel Clone() {
        return new Fuel(this);
      }

      /// <summary>Field number for the "egg" field.</summary>
      public const int EggFieldNumber = 1;
      private global::Egg egg_ = global::Egg.UndefinedEgg;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Egg Egg {
        get { return egg_; }
        set {
          egg_ = value;
        }
      }

      /// <summary>Field number for the "amount" field.</summary>
      public const int AmountFieldNumber = 2;
      private double amount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double Amount {
        get { return amount_; }
        set {
          amount_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Fuel);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Fuel other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Egg != other.Egg) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Amount, other.Amount)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Egg != global::Egg.UndefinedEgg) hash ^= Egg.GetHashCode();
        if (Amount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Amount);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Egg != global::Egg.UndefinedEgg) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Egg);
        }
        if (Amount != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(Amount);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Egg != global::Egg.UndefinedEgg) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Egg);
        }
        if (Amount != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(Amount);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Egg != global::Egg.UndefinedEgg) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Egg);
        }
        if (Amount != 0D) {
          size += 1 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Fuel other) {
        if (other == null) {
          return;
        }
        if (other.Egg != global::Egg.UndefinedEgg) {
          Egg = other.Egg;
        }
        if (other.Amount != 0D) {
          Amount = other.Amount;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Egg = (global::Egg) input.ReadEnum();
              break;
            }
            case 17: {
              Amount = input.ReadDouble();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Egg = (global::Egg) input.ReadEnum();
              break;
            }
            case 17: {
              Amount = input.ReadDouble();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class Artifact : pb::IMessage<Artifact>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Artifact> _parser = new pb::MessageParser<Artifact>(() => new Artifact());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Artifact> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Artifact() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Artifact(Artifact other) : this() {
    name_ = other.name_;
    level_ = other.level_;
    rarity_ = other.rarity_;
    egg_ = other.egg_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Artifact Clone() {
    return new Artifact(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private global::Artifact.Types.Name name_ = global::Artifact.Types.Name.LunarTotem;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Artifact.Types.Name Name {
    get { return name_; }
    set {
      name_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 2;
  private global::Artifact.Types.Level level_ = global::Artifact.Types.Level.Inferior;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Artifact.Types.Level Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "rarity" field.</summary>
  public const int RarityFieldNumber = 3;
  private global::Artifact.Types.Rarity rarity_ = global::Artifact.Types.Rarity.Common;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Artifact.Types.Rarity Rarity {
    get { return rarity_; }
    set {
      rarity_ = value;
    }
  }

  /// <summary>Field number for the "egg" field.</summary>
  public const int EggFieldNumber = 4;
  private global::Egg egg_ = global::Egg.UndefinedEgg;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Egg Egg {
    get { return egg_; }
    set {
      egg_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Artifact);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Artifact other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Level != other.Level) return false;
    if (Rarity != other.Rarity) return false;
    if (Egg != other.Egg) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name != global::Artifact.Types.Name.LunarTotem) hash ^= Name.GetHashCode();
    if (Level != global::Artifact.Types.Level.Inferior) hash ^= Level.GetHashCode();
    if (Rarity != global::Artifact.Types.Rarity.Common) hash ^= Rarity.GetHashCode();
    if (Egg != global::Egg.UndefinedEgg) hash ^= Egg.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Name != global::Artifact.Types.Name.LunarTotem) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Name);
    }
    if (Level != global::Artifact.Types.Level.Inferior) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Level);
    }
    if (Rarity != global::Artifact.Types.Rarity.Common) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Rarity);
    }
    if (Egg != global::Egg.UndefinedEgg) {
      output.WriteRawTag(32);
      output.WriteEnum((int) Egg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Name != global::Artifact.Types.Name.LunarTotem) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Name);
    }
    if (Level != global::Artifact.Types.Level.Inferior) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Level);
    }
    if (Rarity != global::Artifact.Types.Rarity.Common) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Rarity);
    }
    if (Egg != global::Egg.UndefinedEgg) {
      output.WriteRawTag(32);
      output.WriteEnum((int) Egg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name != global::Artifact.Types.Name.LunarTotem) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Name);
    }
    if (Level != global::Artifact.Types.Level.Inferior) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
    }
    if (Rarity != global::Artifact.Types.Rarity.Common) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Rarity);
    }
    if (Egg != global::Egg.UndefinedEgg) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Egg);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Artifact other) {
    if (other == null) {
      return;
    }
    if (other.Name != global::Artifact.Types.Name.LunarTotem) {
      Name = other.Name;
    }
    if (other.Level != global::Artifact.Types.Level.Inferior) {
      Level = other.Level;
    }
    if (other.Rarity != global::Artifact.Types.Rarity.Common) {
      Rarity = other.Rarity;
    }
    if (other.Egg != global::Egg.UndefinedEgg) {
      Egg = other.Egg;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Name = (global::Artifact.Types.Name) input.ReadEnum();
          break;
        }
        case 16: {
          Level = (global::Artifact.Types.Level) input.ReadEnum();
          break;
        }
        case 24: {
          Rarity = (global::Artifact.Types.Rarity) input.ReadEnum();
          break;
        }
        case 32: {
          Egg = (global::Egg) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Name = (global::Artifact.Types.Name) input.ReadEnum();
          break;
        }
        case 16: {
          Level = (global::Artifact.Types.Level) input.ReadEnum();
          break;
        }
        case 24: {
          Rarity = (global::Artifact.Types.Rarity) input.ReadEnum();
          break;
        }
        case 32: {
          Egg = (global::Egg) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the Artifact message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("ARTIFACT")] Artifact = 0,
      [pbr::OriginalName("STONE")] Stone = 1,
      [pbr::OriginalName("INGREDIENT")] Ingredient = 2,
      [pbr::OriginalName("STONE_INGREDIENT")] StoneIngredient = 3,
    }

    public enum Name {
      [pbr::OriginalName("LUNAR_TOTEM")] LunarTotem = 0,
      [pbr::OriginalName("TACHYON_STONE")] TachyonStone = 1,
      [pbr::OriginalName("TACHYON_STONE_FRAGMENT")] TachyonStoneFragment = 2,
      [pbr::OriginalName("NEODYMIUM_MEDALLION")] NeodymiumMedallion = 3,
      [pbr::OriginalName("BEAK_OF_MIDAS")] BeakOfMidas = 4,
      [pbr::OriginalName("LIGHT_OF_EGGENDIL")] LightOfEggendil = 5,
      [pbr::OriginalName("DEMETERS_NECKLACE")] DemetersNecklace = 6,
      [pbr::OriginalName("VIAL_OF_MARTIAN_DUST")] VialOfMartianDust = 7,
      [pbr::OriginalName("GUSSET")] Gusset = 8,
      [pbr::OriginalName("CHALICE")] Chalice = 9,
      [pbr::OriginalName("BOOK_OF_BASAN")] BookOfBasan = 10,
      [pbr::OriginalName("PHOENIX_FEATHER")] PhoenixFeather = 11,
      [pbr::OriginalName("TUNGSTEN_ANKH")] TungstenAnkh = 12,
      [pbr::OriginalName("EXTRATERRESTRIAL_ALUMINUM")] ExtraterrestrialAluminum = 13,
      [pbr::OriginalName("ANCIENT_TUNGSTEN")] AncientTungsten = 14,
      [pbr::OriginalName("SPACE_ROCKS")] SpaceRocks = 15,
      [pbr::OriginalName("ALIEN_WOOD")] AlienWood = 16,
      [pbr::OriginalName("GOLD_METEORITE")] GoldMeteorite = 17,
      [pbr::OriginalName("TAU_CETI_GEODE")] TauCetiGeode = 18,
      [pbr::OriginalName("CENTAURIAN_STEEL")] CentaurianSteel = 19,
      [pbr::OriginalName("ERIDANI_FEATHER")] EridaniFeather = 20,
      [pbr::OriginalName("AURELIAN_BROOCH")] AurelianBrooch = 21,
      [pbr::OriginalName("CARVED_RAINSTICK")] CarvedRainstick = 22,
      [pbr::OriginalName("PUZZLE_CUBE")] PuzzleCube = 23,
      [pbr::OriginalName("QUANTUM_METRONOME")] QuantumMetronome = 24,
      [pbr::OriginalName("SHIP_IN_A_BOTTLE")] ShipInABottle = 25,
      [pbr::OriginalName("TACHYON_DEFLECTOR")] TachyonDeflector = 26,
      [pbr::OriginalName("INTERSTELLAR_COMPASS")] InterstellarCompass = 27,
      [pbr::OriginalName("DILITHIUM_MONOCLE")] DilithiumMonocle = 28,
      [pbr::OriginalName("TITANIUM_ACTUATOR")] TitaniumActuator = 29,
      [pbr::OriginalName("MERCURYS_LENS")] MercurysLens = 30,
      [pbr::OriginalName("DILITHIUM_STONE")] DilithiumStone = 31,
      [pbr::OriginalName("SHELL_STONE")] ShellStone = 32,
      [pbr::OriginalName("LUNAR_STONE")] LunarStone = 33,
      [pbr::OriginalName("SOUL_STONE")] SoulStone = 34,
      [pbr::OriginalName("DRONE_PARTS")] DroneParts = 35,
      [pbr::OriginalName("QUANTUM_STONE")] QuantumStone = 36,
      [pbr::OriginalName("TERRA_STONE")] TerraStone = 37,
      [pbr::OriginalName("LIFE_STONE")] LifeStone = 38,
      [pbr::OriginalName("PROPHECY_STONE")] ProphecyStone = 39,
      [pbr::OriginalName("CLARITY_STONE")] ClarityStone = 40,
      [pbr::OriginalName("CELESTIAL_BRONZE")] CelestialBronze = 41,
      [pbr::OriginalName("LALANDE_HIDE")] LalandeHide = 42,
      [pbr::OriginalName("SOLAR_TITANIUM")] SolarTitanium = 43,
      [pbr::OriginalName("DILITHIUM_STONE_FRAGMENT")] DilithiumStoneFragment = 44,
      [pbr::OriginalName("SHELL_STONE_FRAGMENT")] ShellStoneFragment = 45,
      [pbr::OriginalName("LUNAR_STONE_FRAGMENT")] LunarStoneFragment = 46,
      [pbr::OriginalName("SOUL_STONE_FRAGMENT")] SoulStoneFragment = 47,
      [pbr::OriginalName("PROPHECY_STONE_FRAGMENT")] ProphecyStoneFragment = 48,
      [pbr::OriginalName("QUANTUM_STONE_FRAGMENT")] QuantumStoneFragment = 49,
      [pbr::OriginalName("TERRA_STONE_FRAGMENT")] TerraStoneFragment = 50,
      [pbr::OriginalName("LIFE_STONE_FRAGMENT")] LifeStoneFragment = 51,
      [pbr::OriginalName("CLARITY_STONE_FRAGMENT")] ClarityStoneFragment = 52,
      [pbr::OriginalName("UNKNOWN")] Unknown = 65533,
    }

    public enum Level {
      [pbr::OriginalName("INFERIOR")] Inferior = 0,
      [pbr::OriginalName("LESSER")] Lesser = 1,
      [pbr::OriginalName("NORMAL")] Normal = 2,
      [pbr::OriginalName("GREATER")] Greater = 3,
      [pbr::OriginalName("SUPERIOR")] Superior = 4,
    }

    public enum Rarity {
      [pbr::OriginalName("COMMON")] Common = 0,
      [pbr::OriginalName("RARE")] Rare = 1,
      [pbr::OriginalName("EPIC")] Epic = 2,
      [pbr::OriginalName("LEGENDARY")] Legendary = 3,
    }

  }
  #endregion

}

public sealed partial class CompleteArtifact : pb::IMessage<CompleteArtifact>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CompleteArtifact> _parser = new pb::MessageParser<CompleteArtifact>(() => new CompleteArtifact());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CompleteArtifact> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CompleteArtifact() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CompleteArtifact(CompleteArtifact other) : this() {
    artifactBase_ = other.artifactBase_ != null ? other.artifactBase_.Clone() : null;
    stones_ = other.stones_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CompleteArtifact Clone() {
    return new CompleteArtifact(this);
  }

  /// <summary>Field number for the "artifact_base" field.</summary>
  public const int ArtifactBaseFieldNumber = 1;
  private global::Artifact artifactBase_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Artifact ArtifactBase {
    get { return artifactBase_; }
    set {
      artifactBase_ = value;
    }
  }

  /// <summary>Field number for the "stones" field.</summary>
  public const int StonesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Artifact> _repeated_stones_codec
      = pb::FieldCodec.ForMessage(18, global::Artifact.Parser);
  private readonly pbc::RepeatedField<global::Artifact> stones_ = new pbc::RepeatedField<global::Artifact>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Artifact> Stones {
    get { return stones_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CompleteArtifact);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CompleteArtifact other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ArtifactBase, other.ArtifactBase)) return false;
    if(!stones_.Equals(other.stones_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (artifactBase_ != null) hash ^= ArtifactBase.GetHashCode();
    hash ^= stones_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (artifactBase_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ArtifactBase);
    }
    stones_.WriteTo(output, _repeated_stones_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (artifactBase_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ArtifactBase);
    }
    stones_.WriteTo(ref output, _repeated_stones_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (artifactBase_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactBase);
    }
    size += stones_.CalculateSize(_repeated_stones_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CompleteArtifact other) {
    if (other == null) {
      return;
    }
    if (other.artifactBase_ != null) {
      if (artifactBase_ == null) {
        ArtifactBase = new global::Artifact();
      }
      ArtifactBase.MergeFrom(other.ArtifactBase);
    }
    stones_.Add(other.stones_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (artifactBase_ == null) {
            ArtifactBase = new global::Artifact();
          }
          input.ReadMessage(ArtifactBase);
          break;
        }
        case 18: {
          stones_.AddEntriesFrom(input, _repeated_stones_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (artifactBase_ == null) {
            ArtifactBase = new global::Artifact();
          }
          input.ReadMessage(ArtifactBase);
          break;
        }
        case 18: {
          stones_.AddEntriesFrom(ref input, _repeated_stones_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ArtifactInventoryItem : pb::IMessage<ArtifactInventoryItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ArtifactInventoryItem> _parser = new pb::MessageParser<ArtifactInventoryItem>(() => new ArtifactInventoryItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArtifactInventoryItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactInventoryItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactInventoryItem(ArtifactInventoryItem other) : this() {
    itemId_ = other.itemId_;
    artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
    quantity_ = other.quantity_;
    serverId_ = other.serverId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactInventoryItem Clone() {
    return new ArtifactInventoryItem(this);
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private ulong itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "artifact" field.</summary>
  public const int ArtifactFieldNumber = 2;
  private global::CompleteArtifact artifact_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CompleteArtifact Artifact {
    get { return artifact_; }
    set {
      artifact_ = value;
    }
  }

  /// <summary>Field number for the "quantity" field.</summary>
  public const int QuantityFieldNumber = 3;
  private double quantity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Quantity {
    get { return quantity_; }
    set {
      quantity_ = value;
    }
  }

  /// <summary>Field number for the "server_id" field.</summary>
  public const int ServerIdFieldNumber = 4;
  private string serverId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ServerId {
    get { return serverId_; }
    set {
      serverId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArtifactInventoryItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArtifactInventoryItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (!object.Equals(Artifact, other.Artifact)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Quantity, other.Quantity)) return false;
    if (ServerId != other.ServerId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0UL) hash ^= ItemId.GetHashCode();
    if (artifact_ != null) hash ^= Artifact.GetHashCode();
    if (Quantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Quantity);
    if (ServerId.Length != 0) hash ^= ServerId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ItemId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(ItemId);
    }
    if (artifact_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Artifact);
    }
    if (Quantity != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Quantity);
    }
    if (ServerId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ServerId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ItemId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(ItemId);
    }
    if (artifact_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Artifact);
    }
    if (Quantity != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Quantity);
    }
    if (ServerId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ServerId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
    }
    if (artifact_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
    }
    if (Quantity != 0D) {
      size += 1 + 8;
    }
    if (ServerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArtifactInventoryItem other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0UL) {
      ItemId = other.ItemId;
    }
    if (other.artifact_ != null) {
      if (artifact_ == null) {
        Artifact = new global::CompleteArtifact();
      }
      Artifact.MergeFrom(other.Artifact);
    }
    if (other.Quantity != 0D) {
      Quantity = other.Quantity;
    }
    if (other.ServerId.Length != 0) {
      ServerId = other.ServerId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadUInt64();
          break;
        }
        case 18: {
          if (artifact_ == null) {
            Artifact = new global::CompleteArtifact();
          }
          input.ReadMessage(Artifact);
          break;
        }
        case 25: {
          Quantity = input.ReadDouble();
          break;
        }
        case 34: {
          ServerId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ItemId = input.ReadUInt64();
          break;
        }
        case 18: {
          if (artifact_ == null) {
            Artifact = new global::CompleteArtifact();
          }
          input.ReadMessage(Artifact);
          break;
        }
        case 25: {
          Quantity = input.ReadDouble();
          break;
        }
        case 34: {
          ServerId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InventorySlot : pb::IMessage<InventorySlot>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InventorySlot> _parser = new pb::MessageParser<InventorySlot>(() => new InventorySlot());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InventorySlot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InventorySlot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InventorySlot(InventorySlot other) : this() {
    occupied_ = other.occupied_;
    itemId_ = other.itemId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InventorySlot Clone() {
    return new InventorySlot(this);
  }

  /// <summary>Field number for the "occupied" field.</summary>
  public const int OccupiedFieldNumber = 1;
  private bool occupied_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Occupied {
    get { return occupied_; }
    set {
      occupied_ = value;
    }
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 2;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InventorySlot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InventorySlot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Occupied != other.Occupied) return false;
    if (ItemId != other.ItemId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Occupied != false) hash ^= Occupied.GetHashCode();
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Occupied != false) {
      output.WriteRawTag(8);
      output.WriteBool(Occupied);
    }
    if (ItemId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Occupied != false) {
      output.WriteRawTag(8);
      output.WriteBool(Occupied);
    }
    if (ItemId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Occupied != false) {
      size += 1 + 1;
    }
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InventorySlot other) {
    if (other == null) {
      return;
    }
    if (other.Occupied != false) {
      Occupied = other.Occupied;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Occupied = input.ReadBool();
          break;
        }
        case 16: {
          ItemId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Occupied = input.ReadBool();
          break;
        }
        case 16: {
          ItemId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ArtifactsConfigurationRequest : pb::IMessage<ArtifactsConfigurationRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ArtifactsConfigurationRequest> _parser = new pb::MessageParser<ArtifactsConfigurationRequest>(() => new ArtifactsConfigurationRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArtifactsConfigurationRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsConfigurationRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsConfigurationRequest(ArtifactsConfigurationRequest other) : this() {
    clientVersion_ = other.clientVersion_;
    requestInfo_ = other.requestInfo_ != null ? other.requestInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsConfigurationRequest Clone() {
    return new ArtifactsConfigurationRequest(this);
  }

  /// <summary>Field number for the "client_version" field.</summary>
  public const int ClientVersionFieldNumber = 1;
  private uint clientVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClientVersion {
    get { return clientVersion_; }
    set {
      clientVersion_ = value;
    }
  }

  /// <summary>Field number for the "request_info" field.</summary>
  public const int RequestInfoFieldNumber = 2;
  private global::BasicRequestInfo requestInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BasicRequestInfo RequestInfo {
    get { return requestInfo_; }
    set {
      requestInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArtifactsConfigurationRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArtifactsConfigurationRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientVersion != other.ClientVersion) return false;
    if (!object.Equals(RequestInfo, other.RequestInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClientVersion != 0) hash ^= ClientVersion.GetHashCode();
    if (requestInfo_ != null) hash ^= RequestInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ClientVersion != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClientVersion);
    }
    if (requestInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(RequestInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ClientVersion != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClientVersion);
    }
    if (requestInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(RequestInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClientVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientVersion);
    }
    if (requestInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArtifactsConfigurationRequest other) {
    if (other == null) {
      return;
    }
    if (other.ClientVersion != 0) {
      ClientVersion = other.ClientVersion;
    }
    if (other.requestInfo_ != null) {
      if (requestInfo_ == null) {
        RequestInfo = new global::BasicRequestInfo();
      }
      RequestInfo.MergeFrom(other.RequestInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 18: {
          if (requestInfo_ == null) {
            RequestInfo = new global::BasicRequestInfo();
          }
          input.ReadMessage(RequestInfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 18: {
          if (requestInfo_ == null) {
            RequestInfo = new global::BasicRequestInfo();
          }
          input.ReadMessage(RequestInfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ArtifactsConfigurationResponse : pb::IMessage<ArtifactsConfigurationResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ArtifactsConfigurationResponse> _parser = new pb::MessageParser<ArtifactsConfigurationResponse>(() => new ArtifactsConfigurationResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArtifactsConfigurationResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsConfigurationResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsConfigurationResponse(ArtifactsConfigurationResponse other) : this() {
    artifactsConfiguration_ = other.artifactsConfiguration_ != null ? other.artifactsConfiguration_.Clone() : null;
    checksum_ = other.checksum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsConfigurationResponse Clone() {
    return new ArtifactsConfigurationResponse(this);
  }

  /// <summary>Field number for the "artifacts_configuration" field.</summary>
  public const int ArtifactsConfigurationFieldNumber = 1;
  private global::ArtifactsConfiguration artifactsConfiguration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ArtifactsConfiguration ArtifactsConfiguration {
    get { return artifactsConfiguration_; }
    set {
      artifactsConfiguration_ = value;
    }
  }

  /// <summary>Field number for the "checksum" field.</summary>
  public const int ChecksumFieldNumber = 2;
  private string checksum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Checksum {
    get { return checksum_; }
    set {
      checksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArtifactsConfigurationResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArtifactsConfigurationResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ArtifactsConfiguration, other.ArtifactsConfiguration)) return false;
    if (Checksum != other.Checksum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (artifactsConfiguration_ != null) hash ^= ArtifactsConfiguration.GetHashCode();
    if (Checksum.Length != 0) hash ^= Checksum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (artifactsConfiguration_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ArtifactsConfiguration);
    }
    if (Checksum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Checksum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (artifactsConfiguration_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ArtifactsConfiguration);
    }
    if (Checksum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Checksum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (artifactsConfiguration_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactsConfiguration);
    }
    if (Checksum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Checksum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArtifactsConfigurationResponse other) {
    if (other == null) {
      return;
    }
    if (other.artifactsConfiguration_ != null) {
      if (artifactsConfiguration_ == null) {
        ArtifactsConfiguration = new global::ArtifactsConfiguration();
      }
      ArtifactsConfiguration.MergeFrom(other.ArtifactsConfiguration);
    }
    if (other.Checksum.Length != 0) {
      Checksum = other.Checksum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (artifactsConfiguration_ == null) {
            ArtifactsConfiguration = new global::ArtifactsConfiguration();
          }
          input.ReadMessage(ArtifactsConfiguration);
          break;
        }
        case 18: {
          Checksum = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (artifactsConfiguration_ == null) {
            ArtifactsConfiguration = new global::ArtifactsConfiguration();
          }
          input.ReadMessage(ArtifactsConfiguration);
          break;
        }
        case 18: {
          Checksum = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ArtifactsConfiguration : pb::IMessage<ArtifactsConfiguration>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ArtifactsConfiguration> _parser = new pb::MessageParser<ArtifactsConfiguration>(() => new ArtifactsConfiguration());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArtifactsConfiguration> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsConfiguration() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsConfiguration(ArtifactsConfiguration other) : this() {
    missionParameters_ = other.missionParameters_.Clone();
    artifactParameters_ = other.artifactParameters_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsConfiguration Clone() {
    return new ArtifactsConfiguration(this);
  }

  /// <summary>Field number for the "mission_parameters" field.</summary>
  public const int MissionParametersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ArtifactsConfiguration.Types.MissionParameters> _repeated_missionParameters_codec
      = pb::FieldCodec.ForMessage(10, global::ArtifactsConfiguration.Types.MissionParameters.Parser);
  private readonly pbc::RepeatedField<global::ArtifactsConfiguration.Types.MissionParameters> missionParameters_ = new pbc::RepeatedField<global::ArtifactsConfiguration.Types.MissionParameters>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ArtifactsConfiguration.Types.MissionParameters> MissionParameters {
    get { return missionParameters_; }
  }

  /// <summary>Field number for the "artifact_parameters" field.</summary>
  public const int ArtifactParametersFieldNumber = 2;
  private static readonly pb::FieldCodec<global::ArtifactsConfiguration.Types.ArtifactParameters> _repeated_artifactParameters_codec
      = pb::FieldCodec.ForMessage(18, global::ArtifactsConfiguration.Types.ArtifactParameters.Parser);
  private readonly pbc::RepeatedField<global::ArtifactsConfiguration.Types.ArtifactParameters> artifactParameters_ = new pbc::RepeatedField<global::ArtifactsConfiguration.Types.ArtifactParameters>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ArtifactsConfiguration.Types.ArtifactParameters> ArtifactParameters {
    get { return artifactParameters_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArtifactsConfiguration);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArtifactsConfiguration other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!missionParameters_.Equals(other.missionParameters_)) return false;
    if(!artifactParameters_.Equals(other.artifactParameters_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= missionParameters_.GetHashCode();
    hash ^= artifactParameters_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    missionParameters_.WriteTo(output, _repeated_missionParameters_codec);
    artifactParameters_.WriteTo(output, _repeated_artifactParameters_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    missionParameters_.WriteTo(ref output, _repeated_missionParameters_codec);
    artifactParameters_.WriteTo(ref output, _repeated_artifactParameters_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += missionParameters_.CalculateSize(_repeated_missionParameters_codec);
    size += artifactParameters_.CalculateSize(_repeated_artifactParameters_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArtifactsConfiguration other) {
    if (other == null) {
      return;
    }
    missionParameters_.Add(other.missionParameters_);
    artifactParameters_.Add(other.artifactParameters_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          missionParameters_.AddEntriesFrom(input, _repeated_missionParameters_codec);
          break;
        }
        case 18: {
          artifactParameters_.AddEntriesFrom(input, _repeated_artifactParameters_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          missionParameters_.AddEntriesFrom(ref input, _repeated_missionParameters_codec);
          break;
        }
        case 18: {
          artifactParameters_.AddEntriesFrom(ref input, _repeated_artifactParameters_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the ArtifactsConfiguration message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class MissionParameters : pb::IMessage<MissionParameters>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<MissionParameters> _parser = new pb::MessageParser<MissionParameters>(() => new MissionParameters());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<MissionParameters> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ArtifactsConfiguration.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public MissionParameters() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public MissionParameters(MissionParameters other) : this() {
        ship_ = other.ship_;
        durations_ = other.durations_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public MissionParameters Clone() {
        return new MissionParameters(this);
      }

      /// <summary>Field number for the "ship" field.</summary>
      public const int ShipFieldNumber = 1;
      private global::Mission.Types.Spaceship ship_ = global::Mission.Types.Spaceship.ChickenOne;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Mission.Types.Spaceship Ship {
        get { return ship_; }
        set {
          ship_ = value;
        }
      }

      /// <summary>Field number for the "durations" field.</summary>
      public const int DurationsFieldNumber = 3;
      private static readonly pb::FieldCodec<global::ArtifactsConfiguration.Types.MissionParameters.Types.Duration> _repeated_durations_codec
          = pb::FieldCodec.ForMessage(26, global::ArtifactsConfiguration.Types.MissionParameters.Types.Duration.Parser);
      private readonly pbc::RepeatedField<global::ArtifactsConfiguration.Types.MissionParameters.Types.Duration> durations_ = new pbc::RepeatedField<global::ArtifactsConfiguration.Types.MissionParameters.Types.Duration>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::ArtifactsConfiguration.Types.MissionParameters.Types.Duration> Durations {
        get { return durations_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as MissionParameters);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(MissionParameters other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Ship != other.Ship) return false;
        if(!durations_.Equals(other.durations_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Ship != global::Mission.Types.Spaceship.ChickenOne) hash ^= Ship.GetHashCode();
        hash ^= durations_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Ship != global::Mission.Types.Spaceship.ChickenOne) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Ship);
        }
        durations_.WriteTo(output, _repeated_durations_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Ship != global::Mission.Types.Spaceship.ChickenOne) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Ship);
        }
        durations_.WriteTo(ref output, _repeated_durations_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Ship != global::Mission.Types.Spaceship.ChickenOne) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ship);
        }
        size += durations_.CalculateSize(_repeated_durations_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(MissionParameters other) {
        if (other == null) {
          return;
        }
        if (other.Ship != global::Mission.Types.Spaceship.ChickenOne) {
          Ship = other.Ship;
        }
        durations_.Add(other.durations_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Ship = (global::Mission.Types.Spaceship) input.ReadEnum();
              break;
            }
            case 26: {
              durations_.AddEntriesFrom(input, _repeated_durations_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Ship = (global::Mission.Types.Spaceship) input.ReadEnum();
              break;
            }
            case 26: {
              durations_.AddEntriesFrom(ref input, _repeated_durations_codec);
              break;
            }
          }
        }
      }
      #endif

      #region Nested types
      /// <summary>Container for nested types declared in the MissionParameters message type.</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static partial class Types {
        public sealed partial class Duration : pb::IMessage<Duration>
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            , pb::IBufferMessage
        #endif
        {
          private static readonly pb::MessageParser<Duration> _parser = new pb::MessageParser<Duration>(() => new Duration());
          private pb::UnknownFieldSet _unknownFields;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public static pb::MessageParser<Duration> Parser { get { return _parser; } }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public static pbr::MessageDescriptor Descriptor {
            get { return global::ArtifactsConfiguration.Types.MissionParameters.Descriptor.NestedTypes[0]; }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public Duration() {
            OnConstruction();
          }

          partial void OnConstruction();

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public Duration(Duration other) : this() {
            durationType_ = other.durationType_;
            seconds_ = other.seconds_;
            quality_ = other.quality_;
            minQuality_ = other.minQuality_;
            maxQuality_ = other.maxQuality_;
            capacity_ = other.capacity_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public Duration Clone() {
            return new Duration(this);
          }

          /// <summary>Field number for the "duration_type" field.</summary>
          public const int DurationTypeFieldNumber = 1;
          private global::Mission.Types.DurationType durationType_ = global::Mission.Types.DurationType.Short;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public global::Mission.Types.DurationType DurationType {
            get { return durationType_; }
            set {
              durationType_ = value;
            }
          }

          /// <summary>Field number for the "seconds" field.</summary>
          public const int SecondsFieldNumber = 2;
          private double seconds_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public double Seconds {
            get { return seconds_; }
            set {
              seconds_ = value;
            }
          }

          /// <summary>Field number for the "quality" field.</summary>
          public const int QualityFieldNumber = 3;
          private float quality_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public float Quality {
            get { return quality_; }
            set {
              quality_ = value;
            }
          }

          /// <summary>Field number for the "min_quality" field.</summary>
          public const int MinQualityFieldNumber = 4;
          private float minQuality_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public float MinQuality {
            get { return minQuality_; }
            set {
              minQuality_ = value;
            }
          }

          /// <summary>Field number for the "max_quality" field.</summary>
          public const int MaxQualityFieldNumber = 5;
          private float maxQuality_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public float MaxQuality {
            get { return maxQuality_; }
            set {
              maxQuality_ = value;
            }
          }

          /// <summary>Field number for the "capacity" field.</summary>
          public const int CapacityFieldNumber = 6;
          private uint capacity_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public uint Capacity {
            get { return capacity_; }
            set {
              capacity_ = value;
            }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public override bool Equals(object other) {
            return Equals(other as Duration);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public bool Equals(Duration other) {
            if (ReferenceEquals(other, null)) {
              return false;
            }
            if (ReferenceEquals(other, this)) {
              return true;
            }
            if (DurationType != other.DurationType) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Seconds, other.Seconds)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Quality, other.Quality)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinQuality, other.MinQuality)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxQuality, other.MaxQuality)) return false;
            if (Capacity != other.Capacity) return false;
            return Equals(_unknownFields, other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public override int GetHashCode() {
            int hash = 1;
            if (DurationType != global::Mission.Types.DurationType.Short) hash ^= DurationType.GetHashCode();
            if (Seconds != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Seconds);
            if (Quality != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Quality);
            if (MinQuality != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinQuality);
            if (MaxQuality != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxQuality);
            if (Capacity != 0) hash ^= Capacity.GetHashCode();
            if (_unknownFields != null) {
              hash ^= _unknownFields.GetHashCode();
            }
            return hash;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public void WriteTo(pb::CodedOutputStream output) {
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
          #else
            if (DurationType != global::Mission.Types.DurationType.Short) {
              output.WriteRawTag(8);
              output.WriteEnum((int) DurationType);
            }
            if (Seconds != 0D) {
              output.WriteRawTag(17);
              output.WriteDouble(Seconds);
            }
            if (Quality != 0F) {
              output.WriteRawTag(29);
              output.WriteFloat(Quality);
            }
            if (MinQuality != 0F) {
              output.WriteRawTag(37);
              output.WriteFloat(MinQuality);
            }
            if (MaxQuality != 0F) {
              output.WriteRawTag(45);
              output.WriteFloat(MaxQuality);
            }
            if (Capacity != 0) {
              output.WriteRawTag(48);
              output.WriteUInt32(Capacity);
            }
            if (_unknownFields != null) {
              _unknownFields.WriteTo(output);
            }
          #endif
          }

          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
            if (DurationType != global::Mission.Types.DurationType.Short) {
              output.WriteRawTag(8);
              output.WriteEnum((int) DurationType);
            }
            if (Seconds != 0D) {
              output.WriteRawTag(17);
              output.WriteDouble(Seconds);
            }
            if (Quality != 0F) {
              output.WriteRawTag(29);
              output.WriteFloat(Quality);
            }
            if (MinQuality != 0F) {
              output.WriteRawTag(37);
              output.WriteFloat(MinQuality);
            }
            if (MaxQuality != 0F) {
              output.WriteRawTag(45);
              output.WriteFloat(MaxQuality);
            }
            if (Capacity != 0) {
              output.WriteRawTag(48);
              output.WriteUInt32(Capacity);
            }
            if (_unknownFields != null) {
              _unknownFields.WriteTo(ref output);
            }
          }
          #endif

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public int CalculateSize() {
            int size = 0;
            if (DurationType != global::Mission.Types.DurationType.Short) {
              size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DurationType);
            }
            if (Seconds != 0D) {
              size += 1 + 8;
            }
            if (Quality != 0F) {
              size += 1 + 4;
            }
            if (MinQuality != 0F) {
              size += 1 + 4;
            }
            if (MaxQuality != 0F) {
              size += 1 + 4;
            }
            if (Capacity != 0) {
              size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Capacity);
            }
            if (_unknownFields != null) {
              size += _unknownFields.CalculateSize();
            }
            return size;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public void MergeFrom(Duration other) {
            if (other == null) {
              return;
            }
            if (other.DurationType != global::Mission.Types.DurationType.Short) {
              DurationType = other.DurationType;
            }
            if (other.Seconds != 0D) {
              Seconds = other.Seconds;
            }
            if (other.Quality != 0F) {
              Quality = other.Quality;
            }
            if (other.MinQuality != 0F) {
              MinQuality = other.MinQuality;
            }
            if (other.MaxQuality != 0F) {
              MaxQuality = other.MaxQuality;
            }
            if (other.Capacity != 0) {
              Capacity = other.Capacity;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public void MergeFrom(pb::CodedInputStream input) {
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
          #else
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
              switch(tag) {
                default:
                  _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                  break;
                case 8: {
                  DurationType = (global::Mission.Types.DurationType) input.ReadEnum();
                  break;
                }
                case 17: {
                  Seconds = input.ReadDouble();
                  break;
                }
                case 29: {
                  Quality = input.ReadFloat();
                  break;
                }
                case 37: {
                  MinQuality = input.ReadFloat();
                  break;
                }
                case 45: {
                  MaxQuality = input.ReadFloat();
                  break;
                }
                case 48: {
                  Capacity = input.ReadUInt32();
                  break;
                }
              }
            }
          #endif
          }

          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
              switch(tag) {
                default:
                  _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                  break;
                case 8: {
                  DurationType = (global::Mission.Types.DurationType) input.ReadEnum();
                  break;
                }
                case 17: {
                  Seconds = input.ReadDouble();
                  break;
                }
                case 29: {
                  Quality = input.ReadFloat();
                  break;
                }
                case 37: {
                  MinQuality = input.ReadFloat();
                  break;
                }
                case 45: {
                  MaxQuality = input.ReadFloat();
                  break;
                }
                case 48: {
                  Capacity = input.ReadUInt32();
                  break;
                }
              }
            }
          }
          #endif

        }

      }
      #endregion

    }

    public sealed partial class ArtifactParameters : pb::IMessage<ArtifactParameters>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ArtifactParameters> _parser = new pb::MessageParser<ArtifactParameters>(() => new ArtifactParameters());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<ArtifactParameters> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ArtifactsConfiguration.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ArtifactParameters() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ArtifactParameters(ArtifactParameters other) : this() {
        artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
        baseQuality_ = other.baseQuality_;
        value_ = other.value_;
        oddsMultiplier_ = other.oddsMultiplier_;
        craftingPrice_ = other.craftingPrice_;
        craftingPriceLow_ = other.craftingPriceLow_;
        craftingPriceDomain_ = other.craftingPriceDomain_;
        craftingPriceCurve_ = other.craftingPriceCurve_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ArtifactParameters Clone() {
        return new ArtifactParameters(this);
      }

      /// <summary>Field number for the "artifact" field.</summary>
      public const int ArtifactFieldNumber = 1;
      private global::Artifact artifact_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Artifact Artifact {
        get { return artifact_; }
        set {
          artifact_ = value;
        }
      }

      /// <summary>Field number for the "base_quality" field.</summary>
      public const int BaseQualityFieldNumber = 2;
      private double baseQuality_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double BaseQuality {
        get { return baseQuality_; }
        set {
          baseQuality_ = value;
        }
      }

      /// <summary>Field number for the "value" field.</summary>
      public const int ValueFieldNumber = 3;
      private double value_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double Value {
        get { return value_; }
        set {
          value_ = value;
        }
      }

      /// <summary>Field number for the "odds_multiplier" field.</summary>
      public const int OddsMultiplierFieldNumber = 4;
      private double oddsMultiplier_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double OddsMultiplier {
        get { return oddsMultiplier_; }
        set {
          oddsMultiplier_ = value;
        }
      }

      /// <summary>Field number for the "crafting_price" field.</summary>
      public const int CraftingPriceFieldNumber = 5;
      private double craftingPrice_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double CraftingPrice {
        get { return craftingPrice_; }
        set {
          craftingPrice_ = value;
        }
      }

      /// <summary>Field number for the "crafting_price_low" field.</summary>
      public const int CraftingPriceLowFieldNumber = 6;
      private double craftingPriceLow_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double CraftingPriceLow {
        get { return craftingPriceLow_; }
        set {
          craftingPriceLow_ = value;
        }
      }

      /// <summary>Field number for the "crafting_price_domain" field.</summary>
      public const int CraftingPriceDomainFieldNumber = 7;
      private uint craftingPriceDomain_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint CraftingPriceDomain {
        get { return craftingPriceDomain_; }
        set {
          craftingPriceDomain_ = value;
        }
      }

      /// <summary>Field number for the "crafting_price_curve" field.</summary>
      public const int CraftingPriceCurveFieldNumber = 8;
      private double craftingPriceCurve_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public double CraftingPriceCurve {
        get { return craftingPriceCurve_; }
        set {
          craftingPriceCurve_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as ArtifactParameters);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(ArtifactParameters other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!object.Equals(Artifact, other.Artifact)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BaseQuality, other.BaseQuality)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OddsMultiplier, other.OddsMultiplier)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CraftingPrice, other.CraftingPrice)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CraftingPriceLow, other.CraftingPriceLow)) return false;
        if (CraftingPriceDomain != other.CraftingPriceDomain) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CraftingPriceCurve, other.CraftingPriceCurve)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (artifact_ != null) hash ^= Artifact.GetHashCode();
        if (BaseQuality != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BaseQuality);
        if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
        if (OddsMultiplier != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OddsMultiplier);
        if (CraftingPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CraftingPrice);
        if (CraftingPriceLow != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CraftingPriceLow);
        if (CraftingPriceDomain != 0) hash ^= CraftingPriceDomain.GetHashCode();
        if (CraftingPriceCurve != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CraftingPriceCurve);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (artifact_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Artifact);
        }
        if (BaseQuality != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(BaseQuality);
        }
        if (Value != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(Value);
        }
        if (OddsMultiplier != 0D) {
          output.WriteRawTag(33);
          output.WriteDouble(OddsMultiplier);
        }
        if (CraftingPrice != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(CraftingPrice);
        }
        if (CraftingPriceLow != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(CraftingPriceLow);
        }
        if (CraftingPriceDomain != 0) {
          output.WriteRawTag(56);
          output.WriteUInt32(CraftingPriceDomain);
        }
        if (CraftingPriceCurve != 0D) {
          output.WriteRawTag(65);
          output.WriteDouble(CraftingPriceCurve);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (artifact_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Artifact);
        }
        if (BaseQuality != 0D) {
          output.WriteRawTag(17);
          output.WriteDouble(BaseQuality);
        }
        if (Value != 0D) {
          output.WriteRawTag(25);
          output.WriteDouble(Value);
        }
        if (OddsMultiplier != 0D) {
          output.WriteRawTag(33);
          output.WriteDouble(OddsMultiplier);
        }
        if (CraftingPrice != 0D) {
          output.WriteRawTag(41);
          output.WriteDouble(CraftingPrice);
        }
        if (CraftingPriceLow != 0D) {
          output.WriteRawTag(49);
          output.WriteDouble(CraftingPriceLow);
        }
        if (CraftingPriceDomain != 0) {
          output.WriteRawTag(56);
          output.WriteUInt32(CraftingPriceDomain);
        }
        if (CraftingPriceCurve != 0D) {
          output.WriteRawTag(65);
          output.WriteDouble(CraftingPriceCurve);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (artifact_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
        }
        if (BaseQuality != 0D) {
          size += 1 + 8;
        }
        if (Value != 0D) {
          size += 1 + 8;
        }
        if (OddsMultiplier != 0D) {
          size += 1 + 8;
        }
        if (CraftingPrice != 0D) {
          size += 1 + 8;
        }
        if (CraftingPriceLow != 0D) {
          size += 1 + 8;
        }
        if (CraftingPriceDomain != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CraftingPriceDomain);
        }
        if (CraftingPriceCurve != 0D) {
          size += 1 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(ArtifactParameters other) {
        if (other == null) {
          return;
        }
        if (other.artifact_ != null) {
          if (artifact_ == null) {
            Artifact = new global::Artifact();
          }
          Artifact.MergeFrom(other.Artifact);
        }
        if (other.BaseQuality != 0D) {
          BaseQuality = other.BaseQuality;
        }
        if (other.Value != 0D) {
          Value = other.Value;
        }
        if (other.OddsMultiplier != 0D) {
          OddsMultiplier = other.OddsMultiplier;
        }
        if (other.CraftingPrice != 0D) {
          CraftingPrice = other.CraftingPrice;
        }
        if (other.CraftingPriceLow != 0D) {
          CraftingPriceLow = other.CraftingPriceLow;
        }
        if (other.CraftingPriceDomain != 0) {
          CraftingPriceDomain = other.CraftingPriceDomain;
        }
        if (other.CraftingPriceCurve != 0D) {
          CraftingPriceCurve = other.CraftingPriceCurve;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              if (artifact_ == null) {
                Artifact = new global::Artifact();
              }
              input.ReadMessage(Artifact);
              break;
            }
            case 17: {
              BaseQuality = input.ReadDouble();
              break;
            }
            case 25: {
              Value = input.ReadDouble();
              break;
            }
            case 33: {
              OddsMultiplier = input.ReadDouble();
              break;
            }
            case 41: {
              CraftingPrice = input.ReadDouble();
              break;
            }
            case 49: {
              CraftingPriceLow = input.ReadDouble();
              break;
            }
            case 56: {
              CraftingPriceDomain = input.ReadUInt32();
              break;
            }
            case 65: {
              CraftingPriceCurve = input.ReadDouble();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              if (artifact_ == null) {
                Artifact = new global::Artifact();
              }
              input.ReadMessage(Artifact);
              break;
            }
            case 17: {
              BaseQuality = input.ReadDouble();
              break;
            }
            case 25: {
              Value = input.ReadDouble();
              break;
            }
            case 33: {
              OddsMultiplier = input.ReadDouble();
              break;
            }
            case 41: {
              CraftingPrice = input.ReadDouble();
              break;
            }
            case 49: {
              CraftingPriceLow = input.ReadDouble();
              break;
            }
            case 56: {
              CraftingPriceDomain = input.ReadUInt32();
              break;
            }
            case 65: {
              CraftingPriceCurve = input.ReadDouble();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class ArtifactsDatabase : pb::IMessage<ArtifactsDatabase>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ArtifactsDatabase> _parser = new pb::MessageParser<ArtifactsDatabase>(() => new ArtifactsDatabase());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArtifactsDatabase> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsDatabase() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsDatabase(ArtifactsDatabase other) : this() {
    inventoryItems_ = other.inventoryItems_.Clone();
    itemSequence_ = other.itemSequence_;
    inventorySlots_ = other.inventorySlots_.Clone();
    missions_ = other.missions_.Clone();
    archivedMissions_ = other.archivedMissions_.Clone();
    activeArtifacts_ = other.activeArtifacts_.Clone();
    discoveredArtifacts_ = other.discoveredArtifacts_.Clone();
    craftableArtifacts_ = other.craftableArtifacts_.Clone();
    craftingCounts_ = other.craftingCounts_.Clone();
    activeArtifactSets_ = other.activeArtifactSets_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArtifactsDatabase Clone() {
    return new ArtifactsDatabase(this);
  }

  /// <summary>Field number for the "inventory_items" field.</summary>
  public const int InventoryItemsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ArtifactInventoryItem> _repeated_inventoryItems_codec
      = pb::FieldCodec.ForMessage(10, global::ArtifactInventoryItem.Parser);
  private readonly pbc::RepeatedField<global::ArtifactInventoryItem> inventoryItems_ = new pbc::RepeatedField<global::ArtifactInventoryItem>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ArtifactInventoryItem> InventoryItems {
    get { return inventoryItems_; }
  }

  /// <summary>Field number for the "item_sequence" field.</summary>
  public const int ItemSequenceFieldNumber = 2;
  private ulong itemSequence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong ItemSequence {
    get { return itemSequence_; }
    set {
      itemSequence_ = value;
    }
  }

  /// <summary>Field number for the "inventory_slots" field.</summary>
  public const int InventorySlotsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::InventorySlot> _repeated_inventorySlots_codec
      = pb::FieldCodec.ForMessage(26, global::InventorySlot.Parser);
  private readonly pbc::RepeatedField<global::InventorySlot> inventorySlots_ = new pbc::RepeatedField<global::InventorySlot>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InventorySlot> InventorySlots {
    get { return inventorySlots_; }
  }

  /// <summary>Field number for the "missions" field.</summary>
  public const int MissionsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::Mission> _repeated_missions_codec
      = pb::FieldCodec.ForMessage(34, global::Mission.Parser);
  private readonly pbc::RepeatedField<global::Mission> missions_ = new pbc::RepeatedField<global::Mission>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Mission> Missions {
    get { return missions_; }
  }

  /// <summary>Field number for the "archived_missions" field.</summary>
  public const int ArchivedMissionsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::Mission> _repeated_archivedMissions_codec
      = pb::FieldCodec.ForMessage(42, global::Mission.Parser);
  private readonly pbc::RepeatedField<global::Mission> archivedMissions_ = new pbc::RepeatedField<global::Mission>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Mission> ArchivedMissions {
    get { return archivedMissions_; }
  }

  /// <summary>Field number for the "active_artifacts" field.</summary>
  public const int ActiveArtifactsFieldNumber = 7;
  private static readonly pb::FieldCodec<global::ArtifactsDatabase.Types.ActiveArtifactSlot> _repeated_activeArtifacts_codec
      = pb::FieldCodec.ForMessage(58, global::ArtifactsDatabase.Types.ActiveArtifactSlot.Parser);
  private readonly pbc::RepeatedField<global::ArtifactsDatabase.Types.ActiveArtifactSlot> activeArtifacts_ = new pbc::RepeatedField<global::ArtifactsDatabase.Types.ActiveArtifactSlot>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ArtifactsDatabase.Types.ActiveArtifactSlot> ActiveArtifacts {
    get { return activeArtifacts_; }
  }

  /// <summary>Field number for the "discovered_artifacts" field.</summary>
  public const int DiscoveredArtifactsFieldNumber = 8;
  private static readonly pb::FieldCodec<global::Artifact> _repeated_discoveredArtifacts_codec
      = pb::FieldCodec.ForMessage(66, global::Artifact.Parser);
  private readonly pbc::RepeatedField<global::Artifact> discoveredArtifacts_ = new pbc::RepeatedField<global::Artifact>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Artifact> DiscoveredArtifacts {
    get { return discoveredArtifacts_; }
  }

  /// <summary>Field number for the "craftable_artifacts" field.</summary>
  public const int CraftableArtifactsFieldNumber = 9;
  private static readonly pb::FieldCodec<global::ArtifactsDatabase.Types.CraftableArtifact> _repeated_craftableArtifacts_codec
      = pb::FieldCodec.ForMessage(74, global::ArtifactsDatabase.Types.CraftableArtifact.Parser);
  private readonly pbc::RepeatedField<global::ArtifactsDatabase.Types.CraftableArtifact> craftableArtifacts_ = new pbc::RepeatedField<global::ArtifactsDatabase.Types.CraftableArtifact>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ArtifactsDatabase.Types.CraftableArtifact> CraftableArtifacts {
    get { return craftableArtifacts_; }
  }

  /// <summary>Field number for the "crafting_counts" field.</summary>
  public const int CraftingCountsFieldNumber = 10;
  private static readonly pb::FieldCodec<global::ArtifactsDatabase.Types.CraftableArtifact> _repeated_craftingCounts_codec
      = pb::FieldCodec.ForMessage(82, global::ArtifactsDatabase.Types.CraftableArtifact.Parser);
  private readonly pbc::RepeatedField<global::ArtifactsDatabase.Types.CraftableArtifact> craftingCounts_ = new pbc::RepeatedField<global::ArtifactsDatabase.Types.CraftableArtifact>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ArtifactsDatabase.Types.CraftableArtifact> CraftingCounts {
    get { return craftingCounts_; }
  }

  /// <summary>Field number for the "active_artifact_sets" field.</summary>
  public const int ActiveArtifactSetsFieldNumber = 11;
  private static readonly pb::FieldCodec<global::ArtifactsDatabase.Types.ActiveArtifactSet> _repeated_activeArtifactSets_codec
      = pb::FieldCodec.ForMessage(90, global::ArtifactsDatabase.Types.ActiveArtifactSet.Parser);
  private readonly pbc::RepeatedField<global::ArtifactsDatabase.Types.ActiveArtifactSet> activeArtifactSets_ = new pbc::RepeatedField<global::ArtifactsDatabase.Types.ActiveArtifactSet>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ArtifactsDatabase.Types.ActiveArtifactSet> ActiveArtifactSets {
    get { return activeArtifactSets_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArtifactsDatabase);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArtifactsDatabase other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!inventoryItems_.Equals(other.inventoryItems_)) return false;
    if (ItemSequence != other.ItemSequence) return false;
    if(!inventorySlots_.Equals(other.inventorySlots_)) return false;
    if(!missions_.Equals(other.missions_)) return false;
    if(!archivedMissions_.Equals(other.archivedMissions_)) return false;
    if(!activeArtifacts_.Equals(other.activeArtifacts_)) return false;
    if(!discoveredArtifacts_.Equals(other.discoveredArtifacts_)) return false;
    if(!craftableArtifacts_.Equals(other.craftableArtifacts_)) return false;
    if(!craftingCounts_.Equals(other.craftingCounts_)) return false;
    if(!activeArtifactSets_.Equals(other.activeArtifactSets_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= inventoryItems_.GetHashCode();
    if (ItemSequence != 0UL) hash ^= ItemSequence.GetHashCode();
    hash ^= inventorySlots_.GetHashCode();
    hash ^= missions_.GetHashCode();
    hash ^= archivedMissions_.GetHashCode();
    hash ^= activeArtifacts_.GetHashCode();
    hash ^= discoveredArtifacts_.GetHashCode();
    hash ^= craftableArtifacts_.GetHashCode();
    hash ^= craftingCounts_.GetHashCode();
    hash ^= activeArtifactSets_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    inventoryItems_.WriteTo(output, _repeated_inventoryItems_codec);
    if (ItemSequence != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(ItemSequence);
    }
    inventorySlots_.WriteTo(output, _repeated_inventorySlots_codec);
    missions_.WriteTo(output, _repeated_missions_codec);
    archivedMissions_.WriteTo(output, _repeated_archivedMissions_codec);
    activeArtifacts_.WriteTo(output, _repeated_activeArtifacts_codec);
    discoveredArtifacts_.WriteTo(output, _repeated_discoveredArtifacts_codec);
    craftableArtifacts_.WriteTo(output, _repeated_craftableArtifacts_codec);
    craftingCounts_.WriteTo(output, _repeated_craftingCounts_codec);
    activeArtifactSets_.WriteTo(output, _repeated_activeArtifactSets_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    inventoryItems_.WriteTo(ref output, _repeated_inventoryItems_codec);
    if (ItemSequence != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(ItemSequence);
    }
    inventorySlots_.WriteTo(ref output, _repeated_inventorySlots_codec);
    missions_.WriteTo(ref output, _repeated_missions_codec);
    archivedMissions_.WriteTo(ref output, _repeated_archivedMissions_codec);
    activeArtifacts_.WriteTo(ref output, _repeated_activeArtifacts_codec);
    discoveredArtifacts_.WriteTo(ref output, _repeated_discoveredArtifacts_codec);
    craftableArtifacts_.WriteTo(ref output, _repeated_craftableArtifacts_codec);
    craftingCounts_.WriteTo(ref output, _repeated_craftingCounts_codec);
    activeArtifactSets_.WriteTo(ref output, _repeated_activeArtifactSets_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += inventoryItems_.CalculateSize(_repeated_inventoryItems_codec);
    if (ItemSequence != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemSequence);
    }
    size += inventorySlots_.CalculateSize(_repeated_inventorySlots_codec);
    size += missions_.CalculateSize(_repeated_missions_codec);
    size += archivedMissions_.CalculateSize(_repeated_archivedMissions_codec);
    size += activeArtifacts_.CalculateSize(_repeated_activeArtifacts_codec);
    size += discoveredArtifacts_.CalculateSize(_repeated_discoveredArtifacts_codec);
    size += craftableArtifacts_.CalculateSize(_repeated_craftableArtifacts_codec);
    size += craftingCounts_.CalculateSize(_repeated_craftingCounts_codec);
    size += activeArtifactSets_.CalculateSize(_repeated_activeArtifactSets_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArtifactsDatabase other) {
    if (other == null) {
      return;
    }
    inventoryItems_.Add(other.inventoryItems_);
    if (other.ItemSequence != 0UL) {
      ItemSequence = other.ItemSequence;
    }
    inventorySlots_.Add(other.inventorySlots_);
    missions_.Add(other.missions_);
    archivedMissions_.Add(other.archivedMissions_);
    activeArtifacts_.Add(other.activeArtifacts_);
    discoveredArtifacts_.Add(other.discoveredArtifacts_);
    craftableArtifacts_.Add(other.craftableArtifacts_);
    craftingCounts_.Add(other.craftingCounts_);
    activeArtifactSets_.Add(other.activeArtifactSets_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          inventoryItems_.AddEntriesFrom(input, _repeated_inventoryItems_codec);
          break;
        }
        case 16: {
          ItemSequence = input.ReadUInt64();
          break;
        }
        case 26: {
          inventorySlots_.AddEntriesFrom(input, _repeated_inventorySlots_codec);
          break;
        }
        case 34: {
          missions_.AddEntriesFrom(input, _repeated_missions_codec);
          break;
        }
        case 42: {
          archivedMissions_.AddEntriesFrom(input, _repeated_archivedMissions_codec);
          break;
        }
        case 58: {
          activeArtifacts_.AddEntriesFrom(input, _repeated_activeArtifacts_codec);
          break;
        }
        case 66: {
          discoveredArtifacts_.AddEntriesFrom(input, _repeated_discoveredArtifacts_codec);
          break;
        }
        case 74: {
          craftableArtifacts_.AddEntriesFrom(input, _repeated_craftableArtifacts_codec);
          break;
        }
        case 82: {
          craftingCounts_.AddEntriesFrom(input, _repeated_craftingCounts_codec);
          break;
        }
        case 90: {
          activeArtifactSets_.AddEntriesFrom(input, _repeated_activeArtifactSets_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          inventoryItems_.AddEntriesFrom(ref input, _repeated_inventoryItems_codec);
          break;
        }
        case 16: {
          ItemSequence = input.ReadUInt64();
          break;
        }
        case 26: {
          inventorySlots_.AddEntriesFrom(ref input, _repeated_inventorySlots_codec);
          break;
        }
        case 34: {
          missions_.AddEntriesFrom(ref input, _repeated_missions_codec);
          break;
        }
        case 42: {
          archivedMissions_.AddEntriesFrom(ref input, _repeated_archivedMissions_codec);
          break;
        }
        case 58: {
          activeArtifacts_.AddEntriesFrom(ref input, _repeated_activeArtifacts_codec);
          break;
        }
        case 66: {
          discoveredArtifacts_.AddEntriesFrom(ref input, _repeated_discoveredArtifacts_codec);
          break;
        }
        case 74: {
          craftableArtifacts_.AddEntriesFrom(ref input, _repeated_craftableArtifacts_codec);
          break;
        }
        case 82: {
          craftingCounts_.AddEntriesFrom(ref input, _repeated_craftingCounts_codec);
          break;
        }
        case 90: {
          activeArtifactSets_.AddEntriesFrom(ref input, _repeated_activeArtifactSets_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the ArtifactsDatabase message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class ActiveArtifactSlot : pb::IMessage<ActiveArtifactSlot>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ActiveArtifactSlot> _parser = new pb::MessageParser<ActiveArtifactSlot>(() => new ActiveArtifactSlot());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<ActiveArtifactSlot> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ArtifactsDatabase.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ActiveArtifactSlot() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ActiveArtifactSlot(ActiveArtifactSlot other) : this() {
        occupied_ = other.occupied_;
        itemId_ = other.itemId_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ActiveArtifactSlot Clone() {
        return new ActiveArtifactSlot(this);
      }

      /// <summary>Field number for the "occupied" field.</summary>
      public const int OccupiedFieldNumber = 1;
      private bool occupied_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Occupied {
        get { return occupied_; }
        set {
          occupied_ = value;
        }
      }

      /// <summary>Field number for the "item_id" field.</summary>
      public const int ItemIdFieldNumber = 2;
      private ulong itemId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ulong ItemId {
        get { return itemId_; }
        set {
          itemId_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as ActiveArtifactSlot);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(ActiveArtifactSlot other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Occupied != other.Occupied) return false;
        if (ItemId != other.ItemId) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Occupied != false) hash ^= Occupied.GetHashCode();
        if (ItemId != 0UL) hash ^= ItemId.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Occupied != false) {
          output.WriteRawTag(8);
          output.WriteBool(Occupied);
        }
        if (ItemId != 0UL) {
          output.WriteRawTag(16);
          output.WriteUInt64(ItemId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Occupied != false) {
          output.WriteRawTag(8);
          output.WriteBool(Occupied);
        }
        if (ItemId != 0UL) {
          output.WriteRawTag(16);
          output.WriteUInt64(ItemId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Occupied != false) {
          size += 1 + 1;
        }
        if (ItemId != 0UL) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(ActiveArtifactSlot other) {
        if (other == null) {
          return;
        }
        if (other.Occupied != false) {
          Occupied = other.Occupied;
        }
        if (other.ItemId != 0UL) {
          ItemId = other.ItemId;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Occupied = input.ReadBool();
              break;
            }
            case 16: {
              ItemId = input.ReadUInt64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Occupied = input.ReadBool();
              break;
            }
            case 16: {
              ItemId = input.ReadUInt64();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ActiveArtifactSet : pb::IMessage<ActiveArtifactSet>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ActiveArtifactSet> _parser = new pb::MessageParser<ActiveArtifactSet>(() => new ActiveArtifactSet());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<ActiveArtifactSet> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ArtifactsDatabase.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ActiveArtifactSet() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ActiveArtifactSet(ActiveArtifactSet other) : this() {
        slots_ = other.slots_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ActiveArtifactSet Clone() {
        return new ActiveArtifactSet(this);
      }

      /// <summary>Field number for the "slots" field.</summary>
      public const int SlotsFieldNumber = 1;
      private static readonly pb::FieldCodec<global::ArtifactsDatabase.Types.ActiveArtifactSlot> _repeated_slots_codec
          = pb::FieldCodec.ForMessage(10, global::ArtifactsDatabase.Types.ActiveArtifactSlot.Parser);
      private readonly pbc::RepeatedField<global::ArtifactsDatabase.Types.ActiveArtifactSlot> slots_ = new pbc::RepeatedField<global::ArtifactsDatabase.Types.ActiveArtifactSlot>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::ArtifactsDatabase.Types.ActiveArtifactSlot> Slots {
        get { return slots_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as ActiveArtifactSet);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(ActiveArtifactSet other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if(!slots_.Equals(other.slots_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        hash ^= slots_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        slots_.WriteTo(output, _repeated_slots_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        slots_.WriteTo(ref output, _repeated_slots_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        size += slots_.CalculateSize(_repeated_slots_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(ActiveArtifactSet other) {
        if (other == null) {
          return;
        }
        slots_.Add(other.slots_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              slots_.AddEntriesFrom(input, _repeated_slots_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              slots_.AddEntriesFrom(ref input, _repeated_slots_codec);
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class CraftableArtifact : pb::IMessage<CraftableArtifact>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<CraftableArtifact> _parser = new pb::MessageParser<CraftableArtifact>(() => new CraftableArtifact());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<CraftableArtifact> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ArtifactsDatabase.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CraftableArtifact() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CraftableArtifact(CraftableArtifact other) : this() {
        artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
        seen_ = other.seen_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CraftableArtifact Clone() {
        return new CraftableArtifact(this);
      }

      /// <summary>Field number for the "artifact" field.</summary>
      public const int ArtifactFieldNumber = 1;
      private global::Artifact artifact_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Artifact Artifact {
        get { return artifact_; }
        set {
          artifact_ = value;
        }
      }

      /// <summary>Field number for the "seen" field.</summary>
      public const int SeenFieldNumber = 2;
      private bool seen_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Seen {
        get { return seen_; }
        set {
          seen_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as CraftableArtifact);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(CraftableArtifact other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!object.Equals(Artifact, other.Artifact)) return false;
        if (Seen != other.Seen) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (artifact_ != null) hash ^= Artifact.GetHashCode();
        if (Seen != false) hash ^= Seen.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (artifact_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Artifact);
        }
        if (Seen != false) {
          output.WriteRawTag(16);
          output.WriteBool(Seen);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (artifact_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Artifact);
        }
        if (Seen != false) {
          output.WriteRawTag(16);
          output.WriteBool(Seen);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (artifact_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
        }
        if (Seen != false) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(CraftableArtifact other) {
        if (other == null) {
          return;
        }
        if (other.artifact_ != null) {
          if (artifact_ == null) {
            Artifact = new global::Artifact();
          }
          Artifact.MergeFrom(other.Artifact);
        }
        if (other.Seen != false) {
          Seen = other.Seen;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              if (artifact_ == null) {
                Artifact = new global::Artifact();
              }
              input.ReadMessage(Artifact);
              break;
            }
            case 16: {
              Seen = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              if (artifact_ == null) {
                Artifact = new global::Artifact();
              }
              input.ReadMessage(Artifact);
              break;
            }
            case 16: {
              Seen = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class ActiveArtifactSlot : pb::IMessage<ActiveArtifactSlot>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActiveArtifactSlot> _parser = new pb::MessageParser<ActiveArtifactSlot>(() => new ActiveArtifactSlot());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActiveArtifactSlot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActiveArtifactSlot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActiveArtifactSlot(ActiveArtifactSlot other) : this() {
    occupied_ = other.occupied_;
    itemId_ = other.itemId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActiveArtifactSlot Clone() {
    return new ActiveArtifactSlot(this);
  }

  /// <summary>Field number for the "occupied" field.</summary>
  public const int OccupiedFieldNumber = 1;
  private bool occupied_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Occupied {
    get { return occupied_; }
    set {
      occupied_ = value;
    }
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 2;
  private ulong itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActiveArtifactSlot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActiveArtifactSlot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Occupied != other.Occupied) return false;
    if (ItemId != other.ItemId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Occupied != false) hash ^= Occupied.GetHashCode();
    if (ItemId != 0UL) hash ^= ItemId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Occupied != false) {
      output.WriteRawTag(8);
      output.WriteBool(Occupied);
    }
    if (ItemId != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(ItemId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Occupied != false) {
      output.WriteRawTag(8);
      output.WriteBool(Occupied);
    }
    if (ItemId != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(ItemId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Occupied != false) {
      size += 1 + 1;
    }
    if (ItemId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActiveArtifactSlot other) {
    if (other == null) {
      return;
    }
    if (other.Occupied != false) {
      Occupied = other.Occupied;
    }
    if (other.ItemId != 0UL) {
      ItemId = other.ItemId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Occupied = input.ReadBool();
          break;
        }
        case 16: {
          ItemId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Occupied = input.ReadBool();
          break;
        }
        case 16: {
          ItemId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActiveArtifactSet : pb::IMessage<ActiveArtifactSet>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActiveArtifactSet> _parser = new pb::MessageParser<ActiveArtifactSet>(() => new ActiveArtifactSet());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActiveArtifactSet> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActiveArtifactSet() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActiveArtifactSet(ActiveArtifactSet other) : this() {
    slots_ = other.slots_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActiveArtifactSet Clone() {
    return new ActiveArtifactSet(this);
  }

  /// <summary>Field number for the "slots" field.</summary>
  public const int SlotsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ActiveArtifactSlot> _repeated_slots_codec
      = pb::FieldCodec.ForMessage(10, global::ActiveArtifactSlot.Parser);
  private readonly pbc::RepeatedField<global::ActiveArtifactSlot> slots_ = new pbc::RepeatedField<global::ActiveArtifactSlot>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ActiveArtifactSlot> Slots {
    get { return slots_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActiveArtifactSet);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActiveArtifactSet other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!slots_.Equals(other.slots_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= slots_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    slots_.WriteTo(output, _repeated_slots_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    slots_.WriteTo(ref output, _repeated_slots_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += slots_.CalculateSize(_repeated_slots_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActiveArtifactSet other) {
    if (other == null) {
      return;
    }
    slots_.Add(other.slots_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          slots_.AddEntriesFrom(input, _repeated_slots_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          slots_.AddEntriesFrom(ref input, _repeated_slots_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CraftableArtifact : pb::IMessage<CraftableArtifact>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CraftableArtifact> _parser = new pb::MessageParser<CraftableArtifact>(() => new CraftableArtifact());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CraftableArtifact> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EggincReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CraftableArtifact() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CraftableArtifact(CraftableArtifact other) : this() {
    artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
    seen_ = other.seen_;
    count_ = other.count_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CraftableArtifact Clone() {
    return new CraftableArtifact(this);
  }

  /// <summary>Field number for the "artifact" field.</summary>
  public const int ArtifactFieldNumber = 1;
  private global::Artifact artifact_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Artifact Artifact {
    get { return artifact_; }
    set {
      artifact_ = value;
    }
  }

  /// <summary>Field number for the "seen" field.</summary>
  public const int SeenFieldNumber = 2;
  private bool seen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Seen {
    get { return seen_; }
    set {
      seen_ = value;
    }
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 3;
  private uint count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CraftableArtifact);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CraftableArtifact other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Artifact, other.Artifact)) return false;
    if (Seen != other.Seen) return false;
    if (Count != other.Count) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (artifact_ != null) hash ^= Artifact.GetHashCode();
    if (Seen != false) hash ^= Seen.GetHashCode();
    if (Count != 0) hash ^= Count.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (artifact_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Artifact);
    }
    if (Seen != false) {
      output.WriteRawTag(16);
      output.WriteBool(Seen);
    }
    if (Count != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Count);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (artifact_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Artifact);
    }
    if (Seen != false) {
      output.WriteRawTag(16);
      output.WriteBool(Seen);
    }
    if (Count != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Count);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (artifact_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
    }
    if (Seen != false) {
      size += 1 + 1;
    }
    if (Count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CraftableArtifact other) {
    if (other == null) {
      return;
    }
    if (other.artifact_ != null) {
      if (artifact_ == null) {
        Artifact = new global::Artifact();
      }
      Artifact.MergeFrom(other.Artifact);
    }
    if (other.Seen != false) {
      Seen = other.Seen;
    }
    if (other.Count != 0) {
      Count = other.Count;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (artifact_ == null) {
            Artifact = new global::Artifact();
          }
          input.ReadMessage(Artifact);
          break;
        }
        case 16: {
          Seen = input.ReadBool();
          break;
        }
        case 24: {
          Count = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (artifact_ == null) {
            Artifact = new global::Artifact();
          }
          input.ReadMessage(Artifact);
          break;
        }
        case 16: {
          Seen = input.ReadBool();
          break;
        }
        case 24: {
          Count = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
